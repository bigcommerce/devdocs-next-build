{"path":"stencil-docs/developing-further/bundleb2b","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"23J4Lj","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"Stencil Docs","to":"/stencil-docs"},{"content":"Developing Further","to":"/stencil-docs/developing-further"},{"content":"BundleB2B","to":"/stencil-docs/developing-further/bundleb2b"}],"page":{"meta":{"title":"BundleB2B - Developing Further - Stencil Docs","url":"/stencil-docs/developing-further/bundleb2b","description":"The B2B Edition of BigCommerce\n\nOn this page\n\nB3 integration with BigCommerce\n\nCustomizing B3\n\nOverwriting and injecting JavaScript\n\nB3 REST API\n\nAdditi..."},"title":"BundleB2B","parsedPath":["pages","/stencil-docs","data","children",6,"data","children",5],"rootPagePath":"/stencil-docs","path":"/stencil-docs/developing-further/bundleb2b","isSubpage":true,"route":{"path":"/bundleb2b"},"data":{"blocks":[{"type":"text","data":"# The B2B Edition of BigCommerce\n### On this page\n- [B3 integration with BigCommerce](#b3-integration-with-bigcommerce)\n- [Customizing B3](#customizing-b3)\n- [Overwriting and injecting JavaScript](#overwriting-and-injecting-javascript)\n- [B3 REST API](#b3-rest-api)\n- [Additional BundleB2B resources](#additional-bundleb2b-resources)\n\nBundleB2B (B3) adds business-to-business (B2B) functionality to the BigCommerce platform, allowing businesses to easily facilitate B2B operations online. B3 provides a comprehensive suite of key B2B features to improve the B2B self-service experience for BigCommerce store owners and their customers.\n\nThe B2B Edition of BigCommerce is a bundled offering of the BigCommerce Enterprise solution, B3, and six BigCommerce themes optimized for B3.\n\nB3 offers multiple enhancements to your BigCommerce store, including:\n\n- Corporate account management\n- Sales representative masquerade\n- Shared shopping lists\n- Payment method visibility control\n- Company address book management\n- Sales representative quoting\n- Buy again\n- Trade professional application\n\n## B3 integration with BigCommerce\n\nB3 comes pre-installed with your theme if you purchase the B2B Edition of BigCommerce. If you purchased B3 separately for an existing BigCommerce plan, you can install the B3 app from the BigCommerce App Marketplace and manually integrate it with your BigCommerce theme.\n\nThe B3 admin panel is seamlessly loaded as an iFrame accessible from the My Apps section of your store's dashboard. The client-facing portions of the app are loaded dynamically with JavaScript.\n\n## Customizing B3\n\nWith B3, you can customize the placement of B3 app elements, display text, styling, and checkout configurations. You also have access to the lifecycle methods for many B3 modules to inject your own JavaScript functions.\n\nAdditionally, you can use the B3 REST API to create, read, update, and delete items such as orders, companies, addresses, payments, sales reps, and users. This API allows you to build your own services or integrate B3 with third-party business tools such as Salesforce.\n\n### Prerequisites for customizing B3\n\n- [Stencil CLI](https://developer.bigcommerce.com/stencil-docs/installing-stencil-cli/installing-stencil)\n- [Node.js 12 and npm](https://nodejs.org/en/download/releases/)\n- [Stencil API token](https://support.bigcommerce.com/s/article/Store-API-Accounts#creating) to push BigCommerce theme using Stencil CLI\n- A code editor\n- Access to your BigCommerce store dashboard with Store Owner permissions\n\n### Customizing page containers\n\nB3 renders client-facing pages and elements by mounting fixed containers to BigCommerce themes using JavaScript. You can change the placement of select B3 elements by using `window.b3themeConfig.useContainers = {}` to specify which DOM node B3 mounts the container on.\n\nTo specify which DOM node a B3 container mounts on, follow these steps:\n 1. Insert `window.b3themeConfig.useContainers = {}` into your theme's `assets/js/global.js` file. \n 2. Within `window.b3themeConfig.useContainers = {}`, create a property that uses the name of the B3 container as the key and the selector for the theme element it will mount on as the value. \n \n When done, the object will resemble the following:\n\n```jsx\nwindow.b3themeConfig.useContainers = {\n /* B3 will append the dashboard container to the first returned DOM node with a class of \"page\" that is a descendant of an element with the class of \"container\" */\n\t'dashboard.container': '.container .page',\n}\n```\n\nFor a list of B3 container names and their default placements, see the [BundleB2B Developer Guide](https://developer.bundleb2b.net/storefront/containers.html).\n\n### Customizing styles\n\nYou can customize the styling of many B3 elements using CSS.\n\nTo modify the styling of a B3 module, follow these steps:\n1. Insert `window.b3themeConfig.useStyles = {}` into your theme's `assets/js/global.js` file. \n2. Within `window.b3themeConfig.useStyles = {}`, create a property that uses the B3 element name as the key and one or more comma-separated CSS declarations as the value.\n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--info\">\n<div class=\"HubBlock-content\">\n\n> ### Note\n> Since the CSS is written in a JavaScript object, properties with two names, like `background-color`, must be written with camel case syntax: `backgroundColor: \"lightblue\"`\n\n</div>\n</div>\n</div>\n\nWhen done, the object will resemble the following:\n\n```jsx\nwindow.b3themeConfig.useStyles = {\n/* B3 will use the specified styles for the \"Trade Partner Application\" button that is appended to the secondary navigation menu */\n      'tpa.entryButton': {\n        fontFamily: 'Karla,Arial,Helvetica,sans-serif',\n        fontSize: '1rem',\n        listStyle: 'none',\n        boxSizing: 'border-box',\n        lineHeight: 'inherit',\n        transition: 'color .15s ease',\n        display: 'block',\n        color: '#333',\n        fontWeight: 700,\n        padding: '1rem .78571rem',\n        textDecoration: 'none',\n        textTransform: 'uppercase',\n      },\n    };\n```\n\nFor diagrams of B3 element names and their placements, see the [BundleB2B Developer Guide](https://developer.bundleb2b.net/storefront/containers.html).\n\n### Customizing display text\n\nB3 allows you to customize display text for many of the application's elements, such as buttons, headers, and labels.\n\nTo overwrite the default text that B3 renders, follow these steps:\n\n 1. Insert `window.b3themeConfig.useText = {}` into your theme's `assets/js/global.js` file. \n 2. Within `window.b3themeConfig.useText = {}`, create a property for each element you would like to overwrite using B3 element names as keys and strings containing the new display text as values.\n\nWhen done, the object will resemble the following:\n\n```jsx\nwindow.b3themeConfig.useText = {\n/* B3 will now use the call to action \"Place Quick Order\" instead of the default \"Quick Order Pad\" for the button that is appended to the secondary navigation menu */\n 'nav.button.quickOrderPad': 'Place Quick Order',\n}\n```\n\nFor B3 element names and default text values, see the [BundleB2B Developer Guide](https://developer.bundleb2b.net/storefront/text.html).\n\n## Overwriting and injecting JavaScript\n\nB3 has lifecycle methods for many modules that allow you to inject custom JavaScript functions at different times during page render. Each supported module has the following four global keys:\n\n```jsx\noverwrite: false,\ncallback() {},\nbeforeMount() {},\nmounted() {}\n```\n\n- `overwrite` is a `boolean` that specifies whether to overwrite B3 functions for that module. Default is `false`.\n- `callback()` is a `function` that will call all enclosed functions regardless of the value of `overwrite` after all other B3 code has run. Default is `noop`.\n- `beforeMount()` is a `function` that calls all enclosed functions before the module renders. Default is `noop`.\n- `mounted()` is a `function` that calls all enclosed functions after the module has rendered. Default is `noop`.\n\nTo overwrite and/or inject custom functions for a supported B3 module, follow these steps:\n\n 1. Insert `window.b3themeConfig.useJavaScript = {}` into your theme's `assets/js/global.js` file. \n 2. Within `window.b3themeConfig.useJavaScript = {}`, create a property for each of the modules you'd like to customize that uses the module name as the key and the aforementioned global keys as the value.\n\nWhen done, your object will resemble the following example that demonstrates the call stack of each function:\n\n```jsx\nwindow.b3themeConfig.useJavaScript = {\n quickorderpad: {\n        overwrite: false,\n        callback() {\n          console.trace(\"quickorderpad.callback() runs after all other quickorderpad functions\")\n        },\n        beforeMount() {\n     console.trace(\"quickorderpad.beforeMount() runs before quickorderpad mounts\")        \n},\n        mounted() {\n          console.trace(\"quickorderpad.mounted() runs after quickorderpad mounts\");\n}\n```\n\nThe output to the browser console of the above example is the following:\n\n![B3 console log output](https://github.com/bigcommerce/dev-docs/blob/fc576cd09ee4f346d2668d97082a75aeff7ff468/assets/images/B3-console.png?raw=true)\n\nFor a full list of available modules, see the [BundleB2B Developer Guide](https://developer.bundleb2b.net/storefront/js.html).\n\n## B3 REST API\n\nYou can find instructions on how to get your B3 authentication token on the [BundleB2B Developer Guide](https://developer.bundleb2b.net/storefront/api-call.html) page.\n\nFor the complete list of API endpoints, see [BundleB2B OpenAPI Documentation](https://bundleb2b.stoplight.io/).\n\n## Additional BundleB2B resources\n\n- [Quick start](https://developer.bundleb2b.net/storefront/quick-start.html)\n- [BundleB2B OpenAPI Documentation](https://bundleb2b.stoplight.io/)\n- [RESTful APIs call](https://developer.bundleb2b.net/storefront/api-call.html)\n- [Customize display text](https://developer.bundleb2b.net/storefront/text.html)\n- [Customize page containers](https://developer.bundleb2b.net/storefront/containers.html)\n- [Javascript overwrite or injection](https://developer.bundleb2b.net/storefront/js.html)\n"}],"children":[]}}}}
