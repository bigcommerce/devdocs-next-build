{"path":"stencil-docs/page-builder/defining-global-styles","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"23J4Lj","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"Stencil Docs","to":"/stencil-docs"},{"content":"Page Builder","to":"/stencil-docs/page-builder"},{"content":"Defining Global Styles","to":"/stencil-docs/page-builder/defining-global-styles"}],"page":{"meta":{"title":"Defining Global Styles - Page Builder - Stencil Docs","url":"/stencil-docs/page-builder/defining-global-styles","description":"Defining Global Styles\n\n\n\nOn this page\n\nConfiguration file\n\nRequirements and restrictions\n\nNew products example\n\nChanging page layout using local front ..."},"title":"Defining Global Styles","parsedPath":["pages","/stencil-docs","data","children",4,"data","children",2],"rootPagePath":"/stencil-docs","path":"/stencil-docs/page-builder/defining-global-styles","isSubpage":true,"route":{"path":"/defining-global-styles"},"data":{"blocks":[{"type":"text","data":"# Defining Global Styles\r\n\r\n<div class=\"otp\" id=\"no-index\">\r\n\r\n### On this page\r\n\r\n- [Configuration file](#configuration-file)\r\n- [Requirements and restrictions](#requirements-and-restrictions)\r\n- [New products example](#new-products-example)\r\n- [Changing page layout using local front matter](#changing-page-layout-using-local-front-matter)\r\n- [Retrieving specific config.json values through Sass](#retrieving-specific-configjson-values-through-sass)\r\n- [Adding and removing components](#adding-and-removing-components)\r\n- [Resources](#resources)\r\n\r\n</div>\r\n\r\n## Configuration file\r\n\r\nYou can manage your theme's front-end components by configuring its `config.json` file. This file is made up of different keys and values that define your theme's global styles.\r\n\r\n`config.json` performs the following functions:\r\n\r\n* Provides global context for Stencil's CSS and Handlebars resources.\r\n* Provides values for the Page Builder UI to manage.\r\n* Provides metadata for your theme's listing in the Theme Marketplace.\r\n* Defines variations included in your theme.\r\n\r\nFor a list of all available keys and values in `config.json`, see [Models](https://developer.bigcommerce.com/stencil-docs/reference-docs/global-objects-and-properties/models/configjson).\r\n\r\n## Requirements and restrictions\r\n\r\nThe `config.json` file must meet the following requirements:\r\n\r\n* It must be named `config.json`, must reside in the root of your `<theme-name>` top-level subdirectory (for example, `/cornerstone/config.json`), and must contain valid JSON.\r\n* The maximum allowable size for a theme's `config.json` file is 64 KB. Exceeding this limit will trigger an error upon uploading the theme to BigCommerce.\r\n* Each key's value is restricted to 64 characters. Exceeding this limit will similarly trigger an upload error.\r\n\r\nApart from the aforementioned size constraints, there is no limit on the number of keys and values you can place in a theme's `config.json`.\r\n\r\n<div class=\"HubBlock--callout\">\r\n<div class=\"CalloutBlock--warning\">\r\n<div class=\"HubBlock-content\">\r\n\r\n<!-- theme: warning -->\r\n\r\n> Carefully check your theme against all the listed requirements â€“ including the required keys within the `meta` object and `variations` array. While some requirements are not enforced in local development, they will be validated when you upload your theme to BigCommerce.\r\n</div>\r\n</div>\r\n</div>\r\n\r\n### Required config.json keys\r\n\r\nThe `config.json` file must contain the following keys:\r\n\r\n* `name`\r\n* `version`\r\n* `settings` \r\n* `variations`\r\n* `meta` (see specific requirements below)\r\n\r\n### Required meta keys\r\n\r\nThe `meta` object must contain the following keys:\r\n\r\n* `price`\r\n* `author_name`\r\n* `author_email`\r\n* `author_support_url`\r\n* `documentation_url`\r\n* `composed_image`\r\n* `features`\r\n\r\nFor illustration, below is a commented excerpt.\r\n\r\n```json\r\n{\r\n  ...\r\n  \"meta\": {\r\n    \"price\": 15000, // in cents; non-negative integer, minimum 0\r\n    \"author_name\": \"eCommerce Themes, Inc.\", // Must be a string, not null\r\n    \"author_email\": \"support@example.com\", // Must be a string, should be a valid email address, not null\r\n    \"author_support_url\": \"http://example.com/contactus\", //  Must be a string, should be a valid URL, not null\r\n    \"documentation_url\": \"http://example.com/guide\", // Must be a string, limit of 255 characters, not null\r\n    \"composed_image\": \"path/to/composed.png\", // Must be a string path to the composed-image file\r\n    \"features\": [ // Array of feature strings, all of which must be in the list enumerated here:\r\n          https://github.com/bigcommerce/theme-registry/blob/master/app/schemas/theme_config.json#L33\r\n      \"fully_responsive\" // Must include at least one feature, and no duplicate entries\r\n    ]\r\n  },\r\n  ...\r\n}\r\n```\r\n\r\n### Required variation keys\r\n\r\nA theme requires at least one variation. For each variation that you choose to include in your theme, you must provide the following keys:\r\n\r\n* `name`\r\n* `id`\r\n* `meta`\r\n\r\nFor illustration, below is a code sample from Cornerstone.\r\n\r\n```json\r\n\"variations\": [\r\n    {\r\n      \"name\": \"Light\",\r\n      \"id\": \"light\",\r\n      \"meta\": {\r\n        \"desktop_screenshot\": \"desktop_light.png\",\r\n        \"mobile_screenshot\": \"mobile_light.png\",\r\n        \"description\": \"Ideal for a wide range of businesses and brands, this design is fully responsive, simple, and ready for you to add your branding, logo, and products. ...\",\r\n    ...\r\n    }\r\n  ]\r\n```\r\n## New products example\r\nThe values that you define in the `config.json` file interact with local resources making it possible to customize your theme's appearance globally. Your `config.json` definitions set global defaults for templates, front matter attributes, and Handlebars resources throughout your theme. You can also define custom variables in `config.json`, named according to your needs.\r\nTo see how interactions with `config.json` values work, first note the default values in `config.json` for the `homepage_new_products_count` and `product_list_display_mode` keys.\r\n```json\r\n{\r\n\"settings\": {\r\n  \"homepage_new_products_count\": 5,\r\n  \"product_list_display_mode\": \"grid\",\r\n  }\r\n}\r\n```\r\nNext, open your `templates/pages/home.html` file.\r\nNote the reference to the `homepage_new_products_count` key in the file's front matter. If your current theme's `home.html` front matter omits `products:new:limit`, paste it in for this demonstration.\r\n```html\r\nproducts:\r\n  new:\r\n    limit: {{theme_settings.homepage_new_products_count}}\r\n  featured:\r\n    limit: {{theme_settings.homepage_featured_products_count}}\r\n  top_sellers:\r\n    limit: {{theme_settings.homepage_top_products_count}}\r\ncarousel: {{theme_settings.homepage_show_carousel}}\r\nblog:\r\n    recent_posts:\r\n        limit: {{theme_settings.homepage_blog_posts_count}}\r\n{{#partial \"hero\"}}\r\n<!-- [...] -->\r\n{{/partial}}\r\n{{> layout/base}}\r\n```\r\nYou should see five products displayed in a grid in the New Products section of your homepage.\r\n## Changing page layout using local front matter\r\nIn the `home.html` front matter, `products:featured:limit` controls how many products appear on the home page. The number of products is set by the `config.json` file's `homepage_featured_products_count`.\r\n```html\r\n<!-- [...] -->\r\nproducts:\r\n  featured:\r\n      limit: {{theme_settings.homepage_featured_products_count}}\r\n<!-- [...] -->\r\n```\r\nTo set theme-wide configurations in the front matter using `config.json`, replace the `{{theme_settings.homepage_featured_products_count}}` statement in `home.html` with a hard-coded `2`. For reference, see the following example.\r\n```html\r\nproducts:\r\n  <!-- [...] -->\r\n  featured:\r\n      limit: 2\r\n  <!-- [...] -->\r\n<!-- [...] -->\r\n{{#partial \"page\"}}\r\n<!-- [...] -->\r\n<div class=\"main full\">\r\n  {{#if products.featured}}\r\n      {{> components/products/featured products=products.featured columns=2}}\r\n  {{/if}}\r\n</div>\r\n{{/partial}}\r\n{{> layout/base}}\r\n```\r\nReload the page. You should see the number of products displayed in Featured Products change to two.\r\n## Retrieving specific config.json values through Sass\r\nIn `config.json`, global variables bring dynamic values into the framework. Sass imports these global variables' values to handle data, such as colors hexadecimal values, and to make the data available to Page Builder.\r\nThe following is a snippet of color variables from `config.json`.\r\n```css\r\n{\r\n<!-- [...] -->\r\n\"color-highlight\": \"#00abc9\",\r\n\"color-highlightDark\": \"#f2f2f2\",\r\n\"color-highlightDarker\": \"#dfdfdf\",\r\n<!-- [...] -->\r\n}\r\n```\r\nBelow are the corresponding references in the theme's `assets/scss/settings/global/color/_color.scss` file.\r\n```scss\r\n// ...\r\n$color-highlight:       stencilColor(\"color-highlight\");\r\n$color-highlightDarker: stencilColor(\"color-highlightDarker\");\r\n$color-highlightDark:   stencilColor(\"color-highlightDark\");\r\n// ...\r\n```\r\nIn `config.json`, try redefining one or more color variables to hex values of your choice. Reload the page to see the effects.\r\n## Adding and removing components\r\nThe properties that Stencil abstracts as Handlebars resources are portable between HTML files. To see this in action, open any storefront page in a browser and navigate to the page's footer where you should see the Categories section.\r\nOpen your theme's `footer.html` file located in `templates/components/common/footer.html`, navigate to the `footer-info` section, and remove the following `footer-categories` component:\r\n```html\r\n<article class=\"footer-info-col footer-info-col--small\" data-section-type=\"footer-categories\">\r\n  <h3 class=\"footer-info-heading\">{{lang 'footer.categories'}}</h3>\r\n  <ul class=\"footer-info-list\">\r\n      {{#each categories}}\r\n      <li>\r\n          <a href=\"{{url}}\">{{name}}</a>\r\n      </li>\r\n      {{/each}}\r\n  </ul>\r\n</article>\r\n```\r\nRefresh the page. The Categories section should disappear from the footer.\r\nNext, add a `footer` directory to `templates/components` and create a new `categories.html` template (for example, `templates/components/footer/categories.html`). Paste the code block from the previous step into `categories.html`.\r\n```html\r\n<article class=\"footer-info-col footer-info-col--small\" data-section-type=\"footer-categories\">\r\n  <h3 class=\"footer-info-heading\">{{lang 'footer.categories'}}</h3>\r\n  <ul class=\"footer-info-list\">\r\n      {{#each categories}}\r\n      <li>\r\n          <a href=\"{{url}}\">{{name}}</a>\r\n      </li>\r\n      {{/each}}\r\n  </ul>\r\n</article>\r\n```\r\nIn `templates/components/common/footer.html`, add a reference to the new template as shown below.\r\n```html\r\n<footer class=\"footer\" role=\"contentinfo\">\r\n  <div class=\"container\">\r\n      <section class=\"footer-info\">\r\n          <!-- [...] -->\r\n          {{> components/footer/categories}}\r\n          <!-- [...] -->\r\n      </section>\r\n  </div>\r\n</footer>\r\n```\r\nRefresh the page. The Categories list should reappear in the footer.\r\n## Resources\r\n### Additional resources\r\n- [Customizing a Theme Video](https://www.youtube.com/watch?v=VZYZsDoEOpQ) (YouTube)\r\n"}],"children":[]}}}}
