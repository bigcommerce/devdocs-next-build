{"path":"stencil-docs/javascript-and-event-hooks/npm-tutorials","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"23J4Lj","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"Stencil Docs","to":"/stencil-docs"},{"content":"JavaScript","to":"/stencil-docs/javascript-and-event-hooks"},{"content":"Add React Components with NPM","to":"/stencil-docs/javascript-and-event-hooks/npm-tutorials"}],"page":{"meta":{"title":"Add React Components with NPM - JavaScript - Stencil Docs","url":"/stencil-docs/javascript-and-event-hooks/npm-tutorials","description":"Adding npm Packages to a Theme\n\n\n\nOn this page\n\nInstalling React and npm packages\n\nFinal product\n\n\n\nStencil's architecture allows for organized customiz..."},"title":"Add React Components with NPM","parsedPath":["pages","/stencil-docs","data","children",5,"data","children",5],"rootPagePath":"/stencil-docs","path":"/stencil-docs/javascript-and-event-hooks/npm-tutorials","isSubpage":true,"route":{"path":"/npm-tutorials"},"data":{"blocks":[{"type":"text","data":"# Adding npm Packages to a Theme\n\n<div class=\"otp\" id=\"no-index\">\n\n### On this page\n\n- [Installing React and npm packages](#installing-react-and-npm-packages)\n- [Final product](#final-product)\n\n</div>\n\nStencil's architecture allows for organized customization using npm and React. In production, you can use these tools for stylizing seasonally themed products, temporary promotions, or event tickets. Below is a short tutorial on using npm and React to customize your Stencil theme.\n\nIn this example, we'll be making a drawer that sends a coupon code to the customer's email using Material UI's React framework. The resulting customization will look like the following:\n\n![Image of Coupon Drawer example](https://github.com/bigcommerce/dev-docs/blob/master/assets/images/coupon_drawer_example.png?raw=true)\n\n### Prerequisites\n\n- Stencil CLI installed\n- BigCommerce store\n- Cornerstone Stencil theme with npm installed\n- Knowledge of HTML and JavaScript\n\nTo set up a BigCommerce store, see [Creating a Trial Store](https://support.bigcommerce.com/s/article/Starting-a-Bigcommerce-Trial#creating).\n\n## Installing React and npm packages\n\nTo build this customization, complete the instructions in the following sections.\n\n### Install dependencies\n\nFor this example, we'll be using packages from [Material-UI](https://material-ui.com/). These components require certain modules.\n\nNavigate into the root Cornerstone theme folder, then install the following npm packages.\n\n```shell\n# navigate into theme dir\ncd ~/path/to/theme/dir\n\n# install dependencies\nnpm install --save-dev @material-ui/core react react-dom babel-plugin-transform-object-assign @babel/preset-react\n```\n\n### Update webpack.common.js\n\nUpdate` webpack.common.js` with the new presets and plugins.\n\n```js\n...\nplugins: [\n  ...\n   'transform-object-assign',\n ],\n```\n\n```js\n...\npresets: [\n    ['@babel/preset-env', {\n        ...\n    }], '@babel/react',\n  ],\n```\n\n### Create components\n\nIn the following steps, we'll be adding React components to assemble our coupon drawer.\n\n1. Navigate to the `./assets/js` folder.\n2. Create a `/components` folder within the `/js` folder.\n3. Navigate into the `/components` folder.\n4. Create a `CouponDrawer.js` file.\n5. Copy the following code into the file:\n\n```js\nimport React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport VerticalStepper from './VerticalStepper';\n\nexport default function CouponDrawer() {\n  const [state, setState] = React.useState({\n    right: false,\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  return (\n    <div>\n      <Button color=\"secondary\" variant=\"contained\" onClick={toggleDrawer('right', true)}>Click Here For A Coupon</Button>\n      <Drawer anchor=\"right\" open={state.right} onClose={toggleDrawer('right', false)}>\n        <VerticalStepper />\n      </Drawer>\n    </div>\n  );\n}\n```\n\n6. In the same `/components` folder, create a `VerticalStepper.js` file.\n7. Copy the following code into the file:\n\n```js\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from './TextField';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return ['Provide your email', 'Receive your coupon!'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return `Please enter your email address:`;\n    case 1:\n      return `We have sent a coupon code to your email address.`;\n    default:\n      return `Unknown step`;\n  }\n}\n\nexport default function VerticalLinearStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              {activeStep === 0 ? <TextField /> : null}\n              <div className={classes.actionsContainer}>\n                {activeStep === 0 && (\n                  <div>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                )}\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n}\n```\n\n8. In the same `/components` folder, create a `TextField.js` file.\n9. Copy the following code into the file:\n\n```js\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\nexport default function BasicTextFields() {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField id=\"standard-basic\" label=\"you@example.com\" />\n    </form>\n  );\n}\n```\n\n### Import dependencies\n\n1. Import the React dependencies and  the new CouponDrawer component we've created into `assets/js/app.js`:\n\n```js\n__webpack_public_path__ = window.__webpack_public_path__; // eslint-disable-line\n\nimport Global from './theme/global';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CouponDrawer from './components/CouponDrawer';\n```\n\n2. At the bottom of the file, render the `CouponDrawer` component and assign it an id.\n\n```js\nReactDOM.render(<CouponDrawer />, document.querySelector('#coupondrawer'));\n```\n\n### Add the CouponDrawer div to base.html\n\n1. Navigate to `templates/layout/base.html`.\n2. Add a new div element with our new id inside the body.\n\n```html\n<body>\n        ...\n        <div id=\"coupondrawer\"></div>\n\n        {{> components/common/header }}\n        {{> components/common/body }}\n        {{> components/common/footer }}\n\n        <script>window.__webpack_public_path__ = \"{{cdn 'assets/dist/'}}\";</script>\n        <script src=\"{{cdn 'assets/dist/theme-bundle.main.js'}}\"></script>\n        <script>\n            {{!-- Exported in app.js --}}\n            window.stencilBootstrap(\"{{page_type}}\", {{jsContext}}).load();\n        </script>\n\n        {{{footer.scripts}}}\n</body>\n```\n\n## Final product\n\nView the finished product using the Stencil CLI command `stencil start` in the Cornerstone theme directory.\n\n```shell\n# move into theme dir\ncd ~/path/to/theme/dir\n\n# Preview store using Browsersync\nstencil start\n```\n\nOpen your browser and navigate to `localhost:3000` to view your local storefront.\n\n**Note:** This coupon drawer example does not send coupon codes to the emails entered. This is only an example to show how to customize your storefront theme.\n"}],"children":[]}}}}
