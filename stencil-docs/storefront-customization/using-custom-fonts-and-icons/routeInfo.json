{"path":"stencil-docs/storefront-customization/using-custom-fonts-and-icons","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"23J4Lj","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"Stencil Docs","to":"/stencil-docs"},{"content":"Storefront Customization","to":"/stencil-docs/storefront-customization"},{"content":"Fonts and Icons","to":"/stencil-docs/storefront-customization/using-custom-fonts-and-icons"}],"page":{"meta":{"title":"Fonts and Icons - Storefront Customization - Stencil Docs","url":"/stencil-docs/storefront-customization/using-custom-fonts-and-icons","description":"Custom Fonts and Icons\n\n\n\nOn this page\n\nApplying custom fonts\n\nSass stylesheet support for theme fonts\n\nApplying custom icons\n\nResources\n\n\n\nCustom fonts..."},"title":"Fonts and Icons","parsedPath":["pages","/stencil-docs","data","children",2,"data","children",7],"rootPagePath":"/stencil-docs","path":"/stencil-docs/storefront-customization/using-custom-fonts-and-icons","isSubpage":true,"route":{"path":"/using-custom-fonts-and-icons"},"data":{"blocks":[{"type":"text","data":"# Custom Fonts and Icons\r\n\r\n<div class=\"otp\">\r\n\r\n### On this page\r\n- [Applying custom fonts](#applying-custom-fonts)\r\n- [Sass stylesheet support for theme fonts](#sass-stylesheet-support-for-theme-fonts)\r\n- [Applying custom icons](#applying-custom-icons)\r\n- [Resources](#resources)\r\n\r\n</div>\r\n\r\n<div class=\"HubBlock--callout\">\r\n<div class=\"CalloutBlock--warning\">\r\n<div class=\"HubBlock-content\">\r\n\r\n<!-- theme: warning -->\r\n\r\n### Custom fonts unavailable on Page Builder\r\n>\r\n> * BigCommerce widgets come with a list of pre-defined fonts and do not support custom fonts at this time. \r\n> * Third-party widgets can support any font available in the theme. To learn more about third-party widgets, see [Third-Party Widgets](https://developer.bigcommerce.com/stencil-docs/page-builder/third-party-widgets).\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<a id=\"markdown-applying-custom-fonts\" name=\"applying-custom-fonts\"></a>\r\n\r\n## Applying custom fonts\r\n\r\nThere are two paths to take for using custom fonts. They are as follows:\r\n- Change to a new Google Font\r\n- Use a custom font\r\n\r\n### Google Fonts\r\n\r\n[Google Fonts](https://fonts.google.com/) are a collection of open-source fonts available for use. The base Cornerstone theme uses Karla and Montserrat. Google Fonts come included in the Cornerstone theme.  \r\n\r\nYou can update the fonts in `config.json`; make sure to follow the `Google_FontName_Weight` format.\r\n\r\n```json\r\n//old\r\n\"body-font\": \"Google_Karla_400\"\r\n\r\n//new\r\n\"body-font\": \"Google_Lato_700\"\r\n```\r\n\r\n<div class=\"HubBlock--callout\">\r\n<div class=\"CalloutBlock--info\">\r\n<div class=\"HubBlock-content\">\r\n\r\n<!-- theme: info -->\r\n\r\n### Check with your theme developer\r\n> If you are using a different theme, please check with the theme developer on using Google Fonts.\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n### Custom fonts\r\n\r\nCustom fonts can be used in any theme. To use a custom font upload it to the stores `/content/` folder in [WebDav](https://support.bigcommerce.com/s/article/File-Access-WebDAV).\r\n\r\n![content folder markdown](https://raw.githubusercontent.com/bigcommerce/dev-docs/master/assets/images/content_folder_webdav.png \"Content Folder Webdav\")\r\n\r\n### Reference fonts in head\r\n\r\nNext, edit the appropriate template file's `<head>` sections to reference your custom fonts. In this logo example, you would edit the `templates/layout/base.html` file's `<head>` section to insert the following code (which references the custom font you just uploaded):\r\n\r\n```html\r\n<style type=\"text/css\" media=\"screen, print\">\r\n    @font-face {\r\n        font-family: \"MyFont\";\r\n        src: url(\"{{cdn 'webdav:MyFontFile.ttf'}}\");\r\n    }\r\n</style>\r\n```\r\n\r\nFor all possible browser support use the following:\r\n\r\n```html\r\n<style type=\"text/css\" media=\"screen, print\">\r\n    @font-face {\r\n    font-family: \"MyFont\";\r\n        src: url(\"{{cdn 'webdav:MyFontFile.eot'}}\"); /* IE9 Compat Modes */\r\n        src: url(\"{{cdn 'webdav:MyFontFile.eot?#iefix'}}\"), /* IE6-IE8 */\r\n                url(\"{{cdn 'webdav:MyFontFile.woff2'}}\"), /* Super Modern Browsers */\r\n                url(\"{{cdn 'webdav:MyFontFile.woff'}}\"), /* Pretty Modern Browsers */\r\n                url(\"{{cdn 'webdav:MyFontFile.svg#svgFontName'}}\"); /* Legacy iOS */\r\n    }\r\n</style>\r\n```\r\n\r\n### Update the CSS\r\n\r\nFinally, update the appropriate CSS to reference the same font. In this example, you would edit the `assets/scss/layouts/header/_header.scss` file to change the header font.\r\n\r\n```css\r\n.header-logo-text {\r\ndisplay: block;\r\n   font-family: 'MyFont';\r\n   [...]\r\n}\r\n```\r\n\r\n<div class=\"HubBlock--callout\">\r\n<div class=\"CalloutBlock--info\">\r\n<div class=\"HubBlock-content\">\r\n\r\n<!-- theme: {{callout_type}} -->\r\n\r\n### CDN Handlebars\r\n> The CDN custom Handlebars helper assumes WebDAV's default `/content/` folder, so there is no need to specify that folder.\r\n> Fonts staged via WebDAV, as in the above example, will not show up in the local version of your theme.\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\nFiles that do not contain font-overriding CSS code will use the CSS settings in the `config.json` file.\r\n\r\n<a id=\"markdown-sass-stylesheet-support-for-theme-fonts\" name=\"sass-stylesheet-support-for-theme-fonts\"></a>\r\n\r\n## Sass stylesheet support for theme fonts\r\n\r\nTo support Page Builder, your theme's Sass stylesheet must call [Stencil's custom Sass functions](/stencil-docs/storefront-customization/custom-sass-functions) to transform fonts specified in the theme's `config.json` file. You must call these functions on each `config.json` font key whose value you want to make available to Sass variables.\r\n\r\nThe default Stencil theme includes these function calls in the following stylesheet\r\n\r\n```\r\n{theme-name}/assets/scss/settings/foundation/type/_settings.scss\r\n```\r\n\r\nIf your theme relies on a Sass framework other than Foundation, the relevant stylesheet will be a different SCSS file name within `{theme-name}/assets/scss/`.\r\n\r\n### How to enable fonts for Page Builder\r\n\r\nAssume that your theme's `config.json` contains the following key name and value (the details of both are arbitrary, but the key name must end in `-font`, and the value must follow a defined format):\r\n\r\n```json\r\n{\r\n    // ...\r\n    \"headings-font\": \"Google_Open+Sans_700\"`\r\n    // ...\r\n}\r\n```\r\n\r\nIn your Sass stylesheet, you would call the `stencilFontFamily` and `stencilFontWeight` custom Sass functions on the corresponding `config.json` key name like so:\r\n\r\n```css\r\n$body-font-family: stencilFontFamily(\"body-font\");\r\n$body-font-weight: stencilFontWeight(\"body-font\");\r\n```\r\n\r\nThese functions would extract the corresponding `config.json` values as:\r\n\r\n```css\r\n$body-font-family: 'Open Sans';\r\n$body-font-weight: 700;\r\n```\r\n\r\nThis transformation allows you to use the `$body-font-family` and `$body-font-weight` variables wherever needed in your theme. If a merchant uses Theme Editor to select a different font family and/or weight, the variables will propagate the change throughout your theme.\r\n\r\n<a id=\"markdown-applying-custom-icons\" name=\"applying-custom-icons\"></a>\r\n\r\n## Applying custom icons\r\n\r\n### Installing Grunt\r\n\r\nSome of a Stencil theme's static assets are handled with the Grunt JavaScript automator, where required. This means that you have some dependencies on both Grunt and npm. To get started:\r\n\r\nFirst, make sure you have Grunt installed globally on your machine:\r\n\r\n`npm install -g grunt-cli`\r\n\r\nThen, from your theme's root directory, run:\r\n\r\n`npm install`\r\n\r\n### Calling theme icons\r\n\r\nA Stencil theme's icons are delivered via a single SVG sprite, which is embedded on the page in\r\n`<theme-name>templates/layout/base.html`. This sprite is generated via the Grunt task `grunt svgstore`.\r\n\r\nThe task takes individual SVG files for each icon (in the theme's `assets/icons/` subdirectory) and bundles them together, to be inlined on the top of the theme, inside a Handlebars partial.\r\n\r\nYou can then call each icon in a similar way to an inline image via the following HTML:\r\n\r\n`<svg><use xlink:href=\"#icon-svgFileName\" /></svg>`\r\n\r\nThe ID of each SVG icon you call is based on the filename of the icon you want, with `icon-` prepended.\r\n\r\nFor example:\r\n\r\n`xlink:href=\"#icon-facebook\"`\r\n\r\n### Adding new icons\r\n\r\nSimply add your new icon SVG file to the `assets/icons/ `folder. Then, from your theme's root directory, run `grunt svgstore` or just `grunt`.\r\n\r\n## Resources\r\n\r\n### Additional resources\r\n* [Stencil Custom Sass Functions](https://developer.bigcommerce.com/stencil-docs/storefront-customization/custom-sass-functions)\r\n* [Custom Icons Video Tutorial](https://www.youtube.com/watch?v=ZwrVN5QrEZY)  (BigCommerce Youtube)\r\n* [Custom Fonts Video Tutorial](https://www.youtube.com/watch/-w7Hbn_p_pw) (BigCommerce Youtube)\r\n* [Google Fonts](https://fonts.google.com/) (Google)\r\n"}],"children":[]}}}}
