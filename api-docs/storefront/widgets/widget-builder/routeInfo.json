{"path":"api-docs/storefront/widgets/widget-builder","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"Z1Jm3fi","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Docs","to":"/api-docs"},{"content":"Storefront APIs","to":"/api-docs/storefront"},{"content":"Widgets","to":"/api-docs/storefront/widgets"},{"content":"Widget Builder","to":"/api-docs/storefront/widgets/widget-builder"}],"page":{"meta":{"title":"Widget Builder - Widgets - Storefront APIs - API Docs","url":"/api-docs/storefront/widgets/widget-builder","description":"Widget Builder\n\n\n\nOn this page\n\nPrerequisites\n\nInstall Widget Builder\n\nConfigure Widget Builder\n\nReset or create parallel configurations\n\nGenerate a sca..."},"title":"Widget Builder","parsedPath":["pages","/api-docs","data","children",1,"data","children",8,"data","children",0],"rootPagePath":"/api-docs","path":"/api-docs/storefront/widgets/widget-builder","isSubpage":true,"route":{"path":"/widget-builder"},"data":{"blocks":[{"type":"text","data":"# Widget Builder\n\n<div class=\"otp\" id=\"no-index\">\n\n### On this page\n- [Prerequisites](#prerequisites)\n- [Install Widget Builder](#install-widget-builder)\n- [Configure Widget Builder](#configure-widget-builder)\n- [Reset or create parallel configurations](#reset-or-create-parallel-configurations)\n- [Generate a scaffold with `create`](#generate-a-scaffold-with-create)\n- [Continue development with `start`](#continue-development-with-start)\n- [Publish to store](#publish-to-store)\n- [Resources](#resources)\n\n</div>\n\nWidget Builder is a command-line tool that lets you build, edit, and preview custom storefront widgets in real time, outside the context of your BigCommerce store.\n\nThis article is a guide to help you learn how to use Widget Builder. \n\n## Prerequisites\n\n* Node.js 14\n* [npm](https://www.npmjs.com/) 6.14\n* A BigCommerce [store](https://support.bigcommerce.com/s/article/Starting-a-Bigcommerce-Trial) or [sandbox store](https://developer.bigcommerce.com/api-docs/partner/getting-started/create-a-sandbox-store).\n* Store API OAuth credentials for `content` resources with scope `modify`. For information on how to generate store API credentials, see [Obtaining store API credentials](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#obtaining-store-api-credentials).\n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--warning\">\n\n\n<!-- theme: warn -->\n\n> Because the OAuth scope of these API credentials permits you to modify store content, we strongly recommend that you develop widgets using a [sandbox store](https://developer.bigcommerce.com/api-docs/partner/getting-started/create-a-sandbox-store).\n\n</div>\n</div>\n</div>\n\nFor more information on OAuth Scopes and authentication, see [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n\n## Install Widget Builder\n\nTo install Widget Builder and its dependencies, follow these instructions: \n\n1. Open a terminal, and verify that you are using supported versions of Node.js and `npm`.\n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--info\">\n<div class=\"HubBlock-content\">\n\n<!-- theme: info -->\n\n> Refer to the [Widget Builder README.md](https://github.com/bigcommerce/widget-builder) for the latest supported Node.js and `npm` versions.\n\n</div>\n</div>\n</div>\n\n2. Clone the [widget-builder](https://github.com/bigcommerce/widget-builder) GitHub repository.\n\n3. Navigate to the `widget-builder` directory, and install Widget Builder using the following command:\n\n```shell\nnpm run install-cli\n```\n\nTo retrieve usage information and view supported options and commands, run the following command:\n\n```shell\nwidget-builder -h\n```\n\n**Sample output:**\n\n```shell\nUsage: widget-builder [options] [command]\n\nOptions:\n  -V, --version                  output the version number\n  -h, --help                     display help for command\n\nCommands:\n  init                           Initialization of widget builder configuration\n  start [options] [widgetPath]   starts the widget builder locally\n  validate [options] <file>\n  create <widget-template-name>  Create a blank widget template\n  publish <widget-template>      Releases the widget template to the store\n                                 belonging to the env config\n  help [command]                 display help for command\n```\n\n## Configure Widget Builder\n\nOnce you have installed Widget Builder, the next step is to configure your development environment with your store's authentication credentials so that you can work with your store's data during the development process. You'll need the store's `Client ID`, `Access Token`, and `API Path`. To configure the environment, follow these instructions:\n\n1. Locate or create a parent directory for the widgets you plan to develop using these credentials.\n\n**Sample input:**\n\n```shell\n# organized by name of store \ncd ~/bc-projects/tools-r-us\nmkdir widget-workshop\ncd widget-workshop\n```\n\n2. Run the interactive sequence that generates the configuration file. The session will prompt you to enter your API account credentials. Begin by running `widget-builder init`. \n\n**Sample session:**\n\n```shell\n~/bc-projects/tools-r-us/widget-workshop % widget-builder init\n\nThank you for using Widget Builder\n\n            \nThis guide will help you get your environment set up.\n\nBefore continuing, please make sure you've created or received a Store API account.\nYou'll need those credentials in order to generate the appropriate configurations.\nYou can find more information here. https://support.bigcommerce.com/s/article/Store-API-Accounts#creating\n\n? Are you ready to continue? You may press any key to continue (Y/n) \n  > Y\n? What is the Client ID? \n  > xxxxxxxxxxxxx\n? What is the Access Token? \n  > xxxxxxxxxxxxx\n? What is the API Path? \n  > xxxxxxxxxxxxx\n[2021-09-08T15:12:40.271Z] Successfully created your configuration, you're all set!\n```\n## Reset or create parallel configurations\n\nIf you need to reset the configuration, you can run the `widget-builder init` command in the same directory to overwrite the existing assignments. Running `widget-builder init` in a sibling directory will create a separate development environment. \n\nInitializing Widget Builder at multiple levels of a single file hierarchy can have unpredictable results and is not recommended.\n \n \n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--info\">\n<div class=\"HubBlock-content\">\n\n<!-- theme: info -->\n\n> To use Widget Builder as a development tool, you must run `widget-builder` commands from the same directory where you ran `widget-builder init`.\n\n</div>\n</div>\n</div>\n  \n## Generate a scaffold with `create`\n\nJump-start widget development with Widget Builder's `create` command, which creates a child directory, populates it with blank template files, and starts a development server. To use the generator, run the following command:\n\n```shell\nwidget-builder create <[path/to/]some-widget>\n```\n\n**Sample output:**\n\n```shell\n[2021-09-08T17:29:38.868Z] Successfully created ./some-widget \n[2021-09-08T17:29:38.870Z] Successfully created schema.json in ./some-widget/schema.json\n[2021-09-08T17:29:38.871Z] Successfully created config.json in ./some-widget/config.json\n[2021-09-08T17:29:38.871Z] Successfully created widget.html in ./some-widget/widget.html\n[2021-09-08T17:29:39.564Z] Starting widget-builder at http://localhost:8080!\n[2021-09-08T17:29:39.887Z] Socket connected.\n```\n\nYour default browser will open automatically and display a text widget on port 8080.\n\n## Continue development with `start`\n\nWidget Builder's `start` command will start the development server for an existing widget that is located in a child directory of the environment root. Navigate to that environment root, then run the following command:\n\n```shell\nwidget-builder start <[path/to/]widget-name>\n```\n**Sample output:**\n\n```shell\n[2021-09-08T17:29:39.564Z] Starting widget-builder at http://localhost:8080!\n[2021-09-08T17:29:39.887Z] Socket connected.\n```\n\nYour default browser will open automatically on port 8080.\n\n## Publish to store\n\nTo publish a widget to your BigCommerce store, navigate to its environment root, then run the following command:\n\n```shell\nwidget-builder publish <[path/to/]widget-name>\n```\n\nPublishing a widget from the same path will update or overwrite your existing widget. If you have a widget with the same name currently deployed in your store, the updated widget will **immediately** replace the previous version on your live storefront.\n\nTo add published widgets to your store, open your store's control panel and navigate to **Storefront** **>** **My Themes**. Click the **Customize** button on your active theme, and locate your published widget in the **Custom** section of the left-side menu.\n\nIf you're interested in making your widgets available for download or sale on other stores, check out the [BigCommerce App Marketplace](https://www.bigcommerce.com/apps/toolswidgets/) and learn about [becoming a partner developer](https://developer.bigcommerce.com/api-docs/partner/becoming-a-partner).\n\n## Resources\n\n* [Authenticating BigCommerce's REST APIs](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication)\n* [Widgets API Overview](https://developer.bigcommerce.com/api-docs/store-management/widgets/overview)\n* [Widget Builder GitHub repository](https://github.com/bigcommerce/widget-builder)\n* [Widgets on the App Marketplace](https://www.bigcommerce.com/apps/toolswidgets/)\n* [Becoming a Partner Developer](https://developer.bigcommerce.com/api-docs/partner/becoming-a-partner)\n"}],"children":[]}}}}
