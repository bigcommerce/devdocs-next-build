{"path":"api-docs/storefront/current-customer-api","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"Z1Jm3fi","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Docs","to":"/api-docs"},{"content":"Storefront APIs","to":"/api-docs/storefront"},{"content":"Current Customer API","to":"/api-docs/storefront/current-customer-api"}],"page":{"meta":{"title":"Current Customer API - Storefront APIs - API Docs","url":"/api-docs/storefront/current-customer-api","description":"Current customer API\n\n\n\nOn this page\n\nIdentifying logged-in customers securely\n\nExample JavaScript\n\n\n\nIdentifying logged-in customers securely\n\nSuppose ..."},"title":"Current Customer API","parsedPath":["pages","/api-docs","data","children",1,"data","children",5],"rootPagePath":"/api-docs","path":"/api-docs/storefront/current-customer-api","isSubpage":true,"route":{"path":"/current-customer-api"},"data":{"blocks":[{"type":"text","data":"# Current customer API\r\n\r\n<div class=\"otp\" id=\"no-index\">\r\n\r\n### On this page\r\n\r\n- [Identifying logged-in customers securely](#identifying-logged-in-customers-securely)\r\n- [Example JavaScript](#example-javascript)\r\n\r\n</div>\r\n\r\n## Identifying logged-in customers securely\r\n\r\nSuppose your application interacts dynamically with the BigCommerce storefront and conveys specific information to a particular logged-in customer. You must confirm that customer's identity within the insecure environment of the user's browser before revealing any sensitive information.\r\n\r\nTo address this need, BigCommerce provides a Current Customer endpoint that your app can access via JavaScript on the storefront. This endpoint allows a remote application, such as a third-party subscription billing app, to return a JWT with identifying customer details. The information is signed with your [OAuth client secret](/api-docs/getting-started/basics/authentication#authentication_client-id-secret).\r\n\r\n<div class=\"HubBlock--callout\">\r\n<div class=\"CalloutBlock--info\">\r\n<div class=\"HubBlock-content\">\r\n\r\n<!-- theme: info  -->\r\n\r\n### Note\r\n\r\n> - An app client ID is required in requests to `/customer/current.jwt`.\r\n> - To generate an app client ID, create an app in the [BigCommerce Developer Portal](https://devtools.bigcommerce.com/).\r\n> - Use the app's secret to validate the signature on the JWT.\r\n> - The app doesn't need to be installed or published on a store to use the client ID to get the JWT.\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n## Example JavaScript\r\n\r\nBelow is an example JavaScript code snippet that will access this JWT. To test the JWT functionality, you can install this JavaScript on your sandbox BigCommerce store. You must include your application's client ID in the request to identify the requesting application.\r\n\r\n```html\r\n<script type=\"text/javascript\">\r\n  function customerJWT() {\r\n    var appClientId = '**BC_CLIENT_ID**'; // TODO: Fill this in with your app's client ID\r\n    var xmlhttp = new XMLHttpRequest();\r\n    xmlhttp.onreadystatechange = function () {\r\n      if (xmlhttp.readyState == 4) {\r\n        if (xmlhttp.status == 200) {\r\n          alert('Customer JWT:\\n' + xmlhttp.responseText);\r\n        } else if (xmlhttp.status == 404) {\r\n          alert('Not logged in!');\r\n        } else {\r\n          alert('Something went wrong');\r\n        }\r\n      }\r\n    };\r\n    xmlhttp.open(\r\n      'GET',\r\n      '/customer/current.jwt?app_client_id=' + appClientId,\r\n      true\r\n    );\r\n    xmlhttp.send();\r\n  }\r\n  customerJWT();\r\n</script>\r\n```\r\n\r\nThe above JavaScript should alert the browser with a JWT token after logging into the storefront with a customer account. The JWT returned from this endpoint (example below) can be decoded on [JWT.IO](https://jwt.io/).\r\n\r\nIf a shopper is browsing as a guest, BigCommerce will return a `404` response, and you will see an error message. Wrapping your script in a `{{#if customer}}` Handlebars helper will check for a logged-in customer before running the request. For more information, visit Handlebars Helpers. [Handlebars Helpers](https://developer.bigcommerce.com/stencil-docs/reference-docs/handlebars-helpers-reference#if).\r\n\r\n**Example Logged In Customers Response**\r\n\r\n```json\r\n{\r\n  \"customer\": {\r\n    \"id\": 4927,\r\n    \"email\": \"john.doe@gmail.com\",\r\n    \"group_id\": \"6\"\r\n  },\r\n  \"iss\": \"bc/apps\",\r\n  \"sub\": \"abc123\",\r\n  \"iat\": 1480831863,\r\n  \"exp\": 1480832763,\r\n  \"version\": 1,\r\n  \"aud\": \"6sv16tfx3j5gsopm42ss5dd67g2srvq\",\r\n  \"application_id\": \"6sv16tasdgr2b5hs5dd67g2srvq\",\r\n  \"store_hash\": \"abc123\",\r\n  \"operation\": \"current_customer\"\r\n}\r\n```\r\n\r\nBy design, your application should send this token to the applicationâ€™s server, validate it against your client secret, and then use it as a trusted indication of the logged-in customer's identity, before displaying confidential information to them.\r\n\r\nAn end-to-end example that displays a customer's recently purchased products is available in our [Ruby](https://github.com/bigcommerce/hello-world-app-ruby-sinatra/) and [PHP](https://github.com/bigcommerce/hello-world-app-php-silex/) sample apps.\r\n\r\n<div class=\"HubBlock--callout\">\r\n<div class=\"CalloutBlock--info\">\r\n<div class=\"HubBlock-content\">\r\n\r\n<!-- theme: info -->\r\n\r\n### IAT and EXP claims\r\n\r\n> The current customer tokens are valid for 15 minutes.\r\n\r\n</div>\r\n</div>\r\n</div>\r\n"}],"children":[]}}}}
