{"path":"api-docs/checkouts/checkout-consignment","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"Z1Jm3fi","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Docs","to":"/api-docs"},{"content":"Building Checkouts","to":"/api-docs/checkouts"},{"content":"Checkout Consignment","to":"/api-docs/checkouts/checkout-consignment"}],"page":{"meta":{"title":"Checkout Consignment - Building Checkouts - API Docs","url":"/api-docs/checkouts/checkout-consignment","description":"Checkout Consignment API\n\n\n\nOn this page\n\nOverview\n\nCreating a consignment\n\nUpdating a consignment\n\nFurther reading\n\nRelated documentation\n\n\n\nThis artic..."},"title":"Checkout Consignment","parsedPath":["pages","/api-docs","data","children",7,"data","children",1],"rootPagePath":"/api-docs","path":"/api-docs/checkouts/checkout-consignment","isSubpage":true,"route":{"path":"/checkout-consignment"},"data":{"blocks":[{"type":"text","data":"# Checkout Consignment API\n\n<div class=\"otp\" id=\"no-index\">\n\n### On this page\n- [Overview](#overview)\n- [Creating a consignment](#creating-a-consignment)\n- [Updating a consignment](#updating-a-consignment)\n- [Further reading](#further-reading)\n- [Related documentation](#related-documentation)\n\n</div> \n\nThis article discusses how to create and update a consignment.\n\n## Overview\nA _consignment_ is a list of physical products that will travel together to the purchaser, and it specifies how those items can and will ship. It is an object that includes at least one product line item and one shipping address. A checkout containing one or more physical products will always have at least one consignment associated with it. An order that ships to multiple addresses will have at least one consignment per shipping address. It is also possible to create multiple consignments for the same address.\n\nThe Storefront Checkout and Server-to-Server Checkout APIs provide methods for creating consignments, which are shipments waiting to happen.  A newly created consignment returns a list of fulfillment options available based on the destination address.  These APIs also provide methods for updating this consignment to change the destination, add or remove items, and select a fulfillment option. \n\nA checkout containing physical products is not eligible to become an order until each of its consignments contains a `selected_shipping_option`.\n\n### OAuth scopes\n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--info\">\n<div class=\"HubBlock-content\">\n  \n> The Storefront Checkout API allows developers to manage a shopper’s cart, checkout, and order data using client-side JavaScript on BigCommerce Stencil-powered storefronts. The Storefront Checkout API requests do not require OAuth scopes.\n  \n</div>\n</div>\n</div>\n\nUse the following OAuth scopes for the Server-to-Server Checkout API.\n\n| UI Name  | Permission | Parameter                     |\n|----------|------------|-------------------------------|\n| Checkouts | read-only  | `store_checkout_read_only`    |\n| Checkouts | modify     | `store_checkout`              |\n\nFor more information on OAuth Scopes and authentication, see [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--info\">\n<div class=\"HubBlock-content\">\n\n<!-- theme: info -->\n\n> For limits on the number of line items in a consignment, see the [Create a consignment endpoint](https://developer.bigcommerce.com/api-reference/store-management/checkouts/checkout-consignments/checkoutsconsignmentsbycheckoutidpost) documentation.\n\n> The Server-to-Server Checkout API responds quickly when the checkout contains one consignment.  Each additional consignment increases the amount of time the API takes to finish creating a checkout. The example API calls in this article use the Server-to-Server Checkout API.\n  \n\n</div>\n</div>\n</div>\n\n\n## Creating a consignment\n\n\n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--info\">\n<div class=\"HubBlock-content\">\n\n<!-- theme: info -->\n\n> Prerequisites: Prior to working with consignments, your code will need to create or retrieve a cart or checkout.  The cart ID and checkout ID are the same.\n\n</div>\n</div>\n</div>\n\nThe [Create a consignment endpoint](/api-reference/storefront/checkouts/checkout-consignments/checkoutsconsignmentsbycheckoutidpost) requires a `checkoutID`.  You can create consignments associated with a cart before it becomes a checkout.  This endpoint supports creating multiple consignments in a single call.\n\nThe following is an example `POST` request for creating two consignments. Append `include=consignment.available_shipping_options` to the endpoint so that you will have the information to select one of them in the next step.\n\n  \n  ```http\nPOST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/checkouts/{checkoutId}/consignments?include=consignments.available_shipping_options\nAccept: application/json\nContent-Type: application/json\nX-Auth-Token: {{ACCESS_TOKEN}}\n\n  [\n    {\n      \"shipping_address\": {\n        \"email\": \"jane2@example.com\",\n        \"country_code\": \"US\",\n        \"first_name\": \"BigCommerce\",\n        \"last_name\": \"Cart/Checkout\",\n        \"address1\": \"123 Main Street\",\n        \"city\": \"Austin\",\n        \"state_or_province\": \"Texas\",\n        \"state_or_province_code\": \"TX\",\n        \"postal_code\": \"78751\",\n        \"phone\": \"688546\",\n        \"custom_fields\": [\n          {\n            \"field_id\": \"field_25\",\n            \"field_value\": \"Great!\"\n          }\n        ]\n      },\n      \"line_items\": [\n        {\n          \"item_id\": \"00a8e1c3-996f-4786-96ca-2a8a887b6648\",\n          \"quantity\": 1\n        }\n      ]\n    },\n    {\n      \"shipping_address\": {\n        \"email\": \"testing@example.com\",\n        \"country_code\": \"US\",\n        \"first_name\": \"Testing\",\n        \"last_name\": \"BigCommerce\",\n        \"company\": \"BigCommerce\",\n        \"address1\": \"111 Main Street\",\n        \"address2\": \"#1324\",\n        \"city\": \"Austin\",\n        \"state_or_province\": \"Texas\",\n        \"state_or_province_code\": \"TX\",\n        \"postal_code\": \"78751\",\n        \"phone\": \"+5185158x1{1-5}\",\n        \"custom_fields\": [\n          {\n            \"field_id\": \"field_25\",\n            \"field_value\": \"You're Welcome\"\n          }\n        ]\n      },\n      \"line_items\": [\n        {\n          \"item_id\": \"00a8e1c3-996f-4786-96ca-2a8a887b6648\",\n          \"quantity\": 1\n        }\n      ]\n    }\n  ]\n\n```\n\n[![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/store-management/checkouts/checkout-consignments/checkoutsconsignmentsbycheckoutidpost#requestrunner)\n\nCopy and paste your `store_hash`,`access_token`, and `checkoutId` into the form, then click **Send**.\n\n## Updating a consignment\n\nThe [Update a consignment endpoint](https://developer.bigcommerce.com/api-reference/store-management/checkouts/checkout-consignments/checkoutsconsignmentsbycheckoutidandconsignmentidput) requires the `checkoutId` and the `consignmentId`. You can find the consignment ID in the response from the preceding API call. The checkout ID is the same as the cart ID.\n\nThere are two distinct kinds of consignment updates. The first selects a fulfillment option. The second can update the recipient's shipping address and adjust the list of included line items. \n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--warning\">\n<div class=\"HubBlock-content\">\n\n<!-- theme: warning -->\n\n> You must choose one type of consignment update because changing the shipping address and weight can change available fulfillment options. You can't do both in the same call to the [Update a consignment endpoint](https://developer.bigcommerce.com/api-reference/store-management/checkouts/checkout-consignments/checkoutsconsignmentsbycheckoutidandconsignmentidput).\n\n</div>\n</div>\n</div>\n\n\nThe following is an example `PUT` request that updates a consignment’s `shipping_option_id` with one of the `available_shipping_options.id` returned in the response from the [Create a consignment endpoint](/api-reference/storefront/checkouts/checkout-consignments/checkoutsconsignmentsbycheckoutidpost).\n\n  ```http\nPUT https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/checkouts/{checkoutId}/consignments/{consignmentId}\nAccept: application/json\nContent-Type: application/json\nX-Auth-Token: {{ACCESS_TOKEN}}\n\n{\n  \"shipping_option_id\": \"9241669174884c2f2e83b3adabf03f83\"\n}\n\n```\n\n[![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/store-management/checkouts/checkout-consignments/checkoutsconsignmentsbycheckoutidandconsignmentidput#requestrunner)\n\nCopy and paste your `store_hash`,`access_token`, `checkoutId`, `consignmentId` and query parameter (`consignments.available_shipping_options`) into the form, then click **Send**.\n\n## Further reading\n\n* [BigCommerce Checkout is Now Open Source](https://medium.com/bigcommerce-developer-blog/bigcommerce-checkout-is-now-open-source-39e823bc5b3b)\n<!-- link to forthcoming flow chart of headless calls -- cart > checkout > order > payment flow -->\n\n## Related documentation\n\n* [Server-to-Server Checkout API Reference](https://developer.bigcommerce.com/api-reference/store-management/checkouts)\n* [Storefront Checkout API Reference](https://developer.bigcommerce.com/api-reference/storefront/checkouts)\n"}],"children":[]}}}}
