{"path":"api-docs/storefronts/guide/customers","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"Z1Jm3fi","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Docs","to":"/api-docs"},{"content":"Building Headless Storefronts","to":"/api-docs/storefronts"},{"content":"Guide","to":"/api-docs/storefronts/guide"},{"content":"Managing Customers","to":"/api-docs/storefronts/guide/customers"}],"page":{"meta":{"title":"Managing Customers - Guide - Building Headless Storefronts - API Docs","url":"/api-docs/storefronts/guide/customers","description":"Managing Customers\n\n\n\nOn this page\n\nCustomer login using GraphQL\n\nCustomer Single Sign-on\n\nIdentifying logged-in customers\n\nSurfacing customer group pri..."},"title":"Managing Customers","parsedPath":["pages","/api-docs","data","children",6,"data","children",0,"data","children",6],"rootPagePath":"/api-docs","path":"/api-docs/storefronts/guide/customers","isSubpage":true,"route":{"path":"/customers"},"data":{"blocks":[{"type":"text","data":"# Managing Customers\n\n<div class=\"otp\" id=\"no-index\">\n\n### On this page\n- [Customer login using GraphQL](#customer-login-using-graphql)\n- [Customer Single Sign-on](#customer-single-sign-on)\n- [Identifying logged-in customers](#identifying-logged-in-customers)\n- [Surfacing customer group pricing](#surfacing-customer-group-pricing)\n- [Next steps](#next-steps)\n\n</div>\n\nThis section covers different ways to associate customers to headless carts.\n\n## Customer login using GraphQL\n\nYou can login a customer account using client-side or server-side code.\n\n### Client-side GraphQL customer login\n\nTo login a customer account with an email address and a password in client-side code, use the following [GraphQL Storefront API](https://developer.bigcommerce.com/api-docs/storefront/graphql/graphql-storefront-api-overview) customer login mutation.\n\n**Customer login mutation**\n\n```graphql\nmutation Login($email: String!, $pass: String!) {\n  login(email: $email, password: $pass) {\n    result\n  }\n}\n```\n\nWhen a customer is logged in using the customer login mutation, subsequent queries made to the GraphQL Storefront API will return customer-specific results (for example, customer group pricing) using the context of the logged in customer.\n\n### Server-side GraphQL customer login\n\nTo make queries from the perspective of a particular customer in server-side code, use [customer impersonation tokens](https://developer.bigcommerce.com/api-docs/storefront/graphql/graphql-storefront-api-overview#customer-impersonation-tokens).\n\nWhen you use customer impersonation tokens to authenticate requests made to the GraphQL Storefront API, the tokens receive store information from the perspective of the customer corresponding to the customer ID passed in the `X-Bc-Customer-Id` header of the `POST` request. Pricing, product availability, customer account, and customer details will be reflected.\n\n## Customer Single Sign-on\n\nIf a customer logs into your headless storefront, and then is redirected to a BigCommerce-hosted page, you can use the [Customer Login API](https://developer.bigcommerce.com/api-docs/storefront/customer-login-api) to create a single sign-on experience between your headless storefront and BigCommerce. Doing so will make the redirection from the headless storefront to BigCommerce a more seamless experience for the customer.\n\nYou can log a customer into an embedded checkout by setting `redirect_to` in the Customer Login JWT payload to the relative path of the `embedded_checkout_url` generated using the [Carts API](https://developer.bigcommerce.com/api-reference/store-management/carts).\n\n**JWT payload example**\n\n```http\n{\n  \"iss\": {{CLIENT_ID}},\n  \"iat\": 1535393113,\n  \"jti\": {{UUID}},\n  \"operation\": \"customer_login\",\n  \"store_hash\": {{STORE_HASH}},\n  \"customer_id\": {{CUSTOMER_ID}},\n  \"channel_id\": {{CHANNEL_ID}},\n  \"redirect_to\": \"/cart.php?embedded=1&action=loadInCheckout&id=bc218c65-7a32-4ab7-8082-68730c074d02&token=aa958e2b7922035bf3339215d95d145ebd9193deb36ae847caa780aa2e003e4b\",\n  \"request_ip\": \"111.222.333.444\"\n}\n```\n\n## Identifying logged-in customers\n\nIf a customer logs into a BigCommerce-hosted cart or checkout, then navigates back to the headless storefront, you will need to confirm the customer's identity before revealing sensitive information.\nTo address this need, BigCommerce provides the [Current Customers API](https://developer.bigcommerce.com/api-docs/storefront/current-customer-api) accessible via client-side JavaScript. The [Get Current Customer](https://developer.bigcommerce.com/api-reference/storefront/current-customers/current-customers/getcurrentcustomer) endpoint returns a `JWT` (signed with your OAuth client secret) that contains customer details.\n\n## Surfacing customer group pricing\n\nWhen querying the GraphQL Storefront API, customer-specific pricing will be reflected in query results if the customer is first logged in using the [customer login mutation](https://next.stoplight.io/bigcommerce/bigcommerce-dev-docs/version%2F1.3/05-headless-customers.md#client-side-graphql-customer-login) or a [customer impersonation token](https://developer.bigcommerce.com/api-docs/storefront/graphql/graphql-storefront-api-overview#customer-impersonation-tokens).\n\nFor server-side REST implementations, you can use the [Pricing API](https://developer.bigcommerce.com/api-reference/store-management/pricing) to [get prices](https://developer.bigcommerce.com/api-reference/store-management/pricing/products/get-prices) for a particular customer group.\n\n```http\nPOST https://api.bigcommerce.com/stores/{store_hash}/v3/pricing/products\nAccept: application/json\nContent-Type: application/json\nX-Auth-Token: {{ACCESS_TOKEN}}\n\n{\n  \"channel_id\": 1,\n  \"currency_code\": \"USD\",\n  \"customer_group_id\": 0,\n  \"items\": [\n    {\n      \"product_id\": 0,\n      \"variant_id\": 0,\n      \"options\": [\n        {\n          \"option_id\": 0,\n          \"value_id\": 0\n        }\n      ]\n    }\n  ]\n}\n```\n\n**Response example**\n\n```json\n{\n  \"data\": [\n    {\n      \"product_id\": 1,\n      \"variant_id\": 1,\n      \"options\": [...],\n      \"retail_price\": {\n        \"as_entered\": 1.5,\n        \"entered_inclusive\": true,\n        \"tax_exclusive\": 1.1,\n        \"tax_inclusive\": 1.5\n      },\n      \"sale_price\": {...},\n      \"minimum_advertised_price\": {...},\n      \"price\": {...},\n      \"calculated_price\": {...},\n      \"price_range\": {...},\n      \"retail_price_range\": {...},\n      \"bulk_pricing\": [...]\n    }\n  ],\n  \"meta\": {}\n}\n```\n\n## Next steps\n\n- [Learn how to create an order](https://developer.bigcommerce.com/api-docs/storefronts/guide/orders)"}],"children":[]}}}}
