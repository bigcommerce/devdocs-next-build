{"path":"api-docs/getting-started/making-requests","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"Z1Jm3fi","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Docs","to":"/api-docs"},{"content":"Getting Started","to":"/api-docs/getting-started"},{"content":"Quick Start","to":"/api-docs/getting-started/making-requests"}],"page":{"meta":{"title":"Quick Start - Getting Started - API Docs","url":"/api-docs/getting-started/making-requests","description":"BigCommerce APIs Quick Start\n\n\n\nOn this page\n\nREST API\n\nStorefront API quick start\n\nGraphQL API\n\nCustomer Login API\n\n\n\nThis quick start guide will take ..."},"title":"Quick Start","parsedPath":["pages","/api-docs","data","children",0,"data","children",0],"rootPagePath":"/api-docs","path":"/api-docs/getting-started/making-requests","isSubpage":true,"route":{"path":"/making-requests"},"data":{"blocks":[{"type":"text","data":"# BigCommerce APIs Quick Start\n\n<div class=\"otp\" id=\"no-index\">\n\n### On this page\n- [REST API](#rest-api)\n- [Storefront API quick start](#storefront-api-quick-start)\n- [GraphQL API](#graphql-api)\n- [Customer Login API](#customer-login-api)\n\n</div>\n\nThis quick start guide will take you through making your first requests with BigCommerce's APIs.\n\n## REST API\n\n### Obtain API credentials\n\nSee [Authenticating BigCommerce's Rest APIs](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#obtaining-store-api-credentials#obtaining-store-api-credentials) for instructions on obtaining store API credentials.\n\n### Use Request Runner\n\nThe easiest way to experiment with BigCommerce REST APIs is via the built-in **Request Runner**:\n\n[![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/products/getproducts#requestrunner)\n\nJust copy and paste your `store_hash` and `access_token` into the form, then click **Send**.\n\n### Visual Studio Code REST Client\n\nIf you use **Visual Studio Code**, another way to make API requests is with the [REST Client](https://marketplace.visualstudio.com/items?itemName=humao.rest-client) extension. Once you have it installed, create a new file called `bigcommerce.http` and paste in the following:\n\n```http\n@ACCESS_TOKEN = your_access_token\n@STORE_HASH = your_store_hash\n\n###\n\nGET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/catalog/products\nX-Auth-Token: {{ACCESS_TOKEN}}\nContent-Type: application/json\nAccept: application/json\n```\n\nSave and you'll see the **send request** link above `GET`. Click **send request** and the response will open in a split window.\n\n### Import API spec file with Postman\n\nAlternatively, you can import the [Specification File](https://github.com/bigcommerce/api-specs/blob/master/reference/catalog.v3.yml) into [Postman](https://www.getpostman.com/) (or any other tool that can import [Open API Specification](https://swagger.io/specification/) files).\n\nTo view sample JSON request bodies for each REST API resource, see the [API Reference](https://developer.bigcommerce.com/api-reference) for that resource.\n\n## Storefront API quick start\n\nTo make your first requests in a browser with the Storefront APIs, see the step-by-step tutorial [Working with Storefront Cart and Checkout APIs](https://developer.bigcommerce.com/api-docs/cart-and-checkout/working-sf-apis).\n\n## GraphQL API\n\n### Obtain storefront token\nWe'll use **Request Runner** for making an initial request to obtain a Storefront API token. It is a REST API request, so you will need to copy and paste your [API credentials](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#obtaining-store-api-credentials#obtaining-store-api-credentials).\n\n[![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-api-token/api-token/createtoken#requestrunner)\n\nInclude the URL of the storefront you will be making the request from as the `allowed_cors_origin`.\n\n**`POST`** `https://api.bigcommerce.com/stores/{store_hash}/v3/storefront/api-token`\n\n```javascript\n{\n  \"channel_id\": 1,            // int (only ID 1 currently accepted)\n  \"expires_at\": 1602288000,   // double utc unix timestamp (required)\n  \"allowed_cors_origins\": [   // array (accepts 1 origin currently)\n    \"https://example.com\"\n  ]\n}\n```\n\n### Create sample request in the browser\nWhile viewing your storefront in a browser, navigate to the integrated JavaScript console; for example, [Google Chrome's Console](https://developers.google.com/web/tools/chrome-devtools/console). Use it to run the following code after entering your API token in the authorization header, and adding a valid [Product ID](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/products/getproductbyid) for the `entityId`:\n\n```javacsript\n   fetch('/graphql', {\n        method: 'POST',\n        mode: 'cors',\n        headers: { 'Content-Type': 'application/json',\n                 'Authorization': `Bearer token`},\n        body: JSON.stringify({\n            query: `\n            query SingleProduct {\n                site {\n                  products (entityIds: product ID) {\n                    edges {\n                      node {\n                        id\n                        entityId\n                        name\n                        prices {\n                          price {\n                            value\n                            currencyCode\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }`\n\n            }),\n      })\n      .then(res => res.json())\n      .then(res => res.data);\n\n```\n\n## Customer Login API\nThe Customer Login API is a Server-to-Server API, which means to make requests against it, you will need a backend service. To view a sample request, see sample code within our [PHP client](\nhttps://github.com/bigcommerce/bigcommerce-api-php/blob/master/src/Bigcommerce/Api/Client.php#L421).\n\n"}],"children":[]}}}}
