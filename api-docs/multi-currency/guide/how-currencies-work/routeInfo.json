{"path":"api-docs/multi-currency/guide/how-currencies-work","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"Z1Jm3fi","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Docs","to":"/api-docs"},{"content":"Managing Currencies","to":"/api-docs/multi-currency"},{"content":"Guide","to":"/api-docs/multi-currency/guide"},{"content":"How Currencies Work","to":"/api-docs/multi-currency/guide/how-currencies-work"}],"page":{"meta":{"title":"How Currencies Work - Guide - Managing Currencies - API Docs","url":"/api-docs/multi-currency/guide/how-currencies-work","description":"How Currencies Work\n\n\n\nOn this Page\n\nCatalog pricing\n\nCurrencies\n\nPrice Lists\n\nPrice list modifiers\n\nPrice records\n\nS-2-S cart and checkout\n\nStorefront ..."},"title":"How Currencies Work","parsedPath":["pages","/api-docs","data","children",8,"data","children",0,"data","children",1],"rootPagePath":"/api-docs","path":"/api-docs/multi-currency/guide/how-currencies-work","isSubpage":true,"route":{"path":"/how-currencies-work"},"data":{"blocks":[{"type":"text","data":"# How Currencies Work\n\n<div class=\"otp\" id=\"no-index\">\n\n### On this Page\n- [Catalog pricing](#catalog-pricing)\n- [Currencies](#currencies)\n- [Price Lists](#price-lists)\n- [Price list modifiers](#price-list-modifiers)\n- [Price records](#price-records)\n- [S-2-S cart and checkout](#s-2-s-cart-and-checkout)\n- [Storefront cart and checkout](#storefront-cart-and-checkout)\n- [Orders](#orders)\n- [Promotions](#promotions)\n- [Shipping](#shipping)\n- [Refunds](#refunds)\n- [Payment methods supported](#payment-methods-supported)\n- [Gift certificates](#gift-certificates)\n\n</div>\n\nThis article details how you can surface currencies throughout BigCommerce APIs, user interfaces, and storefront components. It assumes you're already familiar with the core concepts behind BigCommerce's multi-currency settings. For a high-level overview and instructions on how to add currencies to a BigCommerce store, see [Currencies Overview](https://developer.bigcommerce.com/api-docs/catalog/currencies/currencies-overview).\n\n## Catalog pricing\n\n<a id=\"catalog-pricing\"></a>\n\nWhen you configure multiple currencies, BigCommerce will convert the catalog default currency price of items into the selected non-default currency on the storefront. It does not change the default catalog pricing of products. \n\nCatalog search and filtering by price only work for the default currency and auto-converted pricing for non-default transactional currencies. If a merchant sets up pricing through **Price Lists** and has price filter enabled on their store, shoppers will be unable to see any products when searching by price.\n* `Shop by: Price` only works for default currency and auto-converted pricing for non-default transactional currencies. If merchant sets up pricing through price lists and has price filter enabled on their store, shoppers will be unable to see any products when searching by price.\n\nBigCommerce does not dynamically convert currency. To convert, the merchant will need to do one of the following:\n* Manually update their conversion rate from default currency to other transactional currencies.\n* Set up automatic updates to their conversion rate through APIs.\n* Set up explicit pricing per each currency using price lists (only available to Enterprise merchants).\n* Pricing by currency only, not by country.\n\n## Currencies\n\n**Details:**\n* There was a new field added to [/v2/currencies](https://developer.bigcommerce.com/api-reference/store-management/currency-api):\n  * `is_transactional` - Boolean indicating if the currency is transactional or not; false means display only currency.\n\n**Example:**\n\n```json\n{\n  \"country_iso2\": \"EU\",\n  \"currency_code\": \"EUR\",\n  \"currency_exchange_rate\": \"0.849\",\n  \"auto_update\": true,\n  \"token_location\": \"left\",\n  \"token\": \"€\",\n  \"decimal_token\": \".\",\n  \"thousands_token\": \",\",\n  \"decimal_places\": 2,\n  \"name\": \"Euro\",\n  \"is_transactional\": false,\n  \"id\": 2,\n  \"is_default\": false,\n  \"last_updated\": \"2018-06-12T14:41:56.000Z\",\n  \"enabled\": false\n}\n```\n\n## Price Lists\n\n<a id=\"price-lists\"></a>\n\nYou can create price lists in any currency setup in the store. Both transactional and display currencies are available in price lists. BigCommerce does not copy price records from one currency to another; you must create the price record for each currency.\n\n![titled](https://raw.githubusercontent.com/bigcommerce/dev-docs/master/assets/images/multi-currency-price-overrides.png \"Price Overrides\")\n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--error\">\n<div class=\"HubBlock-content\">\n    \n<!-- theme: error -->\n\n### Note\n> This feature is limited to Enterprise plans and requires a Stencil theme.\n\n</div>\n</div>\n</div>\n\n## Price list modifiers\n\n<a id=\"price-list-modifiers\"></a>\n\nModifiers use the auto conversion rate. For example, if the keychain is €30, and there's a modifier for engraving, the price is: €30 + ($5 * auto conversion rate).\n\nThe above example assumes a default currency of USD.\n\n## Price records\n\n<a id=\"multi-currency-price-records\"></a>\n\nTo create a price record in multiple currencies via API, send a `POST` request to the [Set Price Records](/api-reference/catalog/pricelists-api/price-lists-records/setpricelistrecordcollection) endpoint -- as long as the currency is available in the store, you can set multiple currencies in the request.\n\n[**Create Price Record** ](https://developer.bigcommerce.com/api-reference/catalog/pricelists-api/price-lists-records/setpricelistrecordcollection):\n\n```json\n[\n  {\n    \"variant_id\": 360,\n    \"price\": 27.57,\n    \"sale_price\": 12,\n    \"currency\": \"aud\",\n    \"product_id\": 189\n  },\n  {\n    \"variant_id\": 360,\n    \"price\": 27.57,\n    \"sale_price\": 12,\n    \"currency\": \"eur\",\n    \"product_id\": 189\n  }\n]\n```\n\n[**Price List Sample Response** ](https://developer.bigcommerce.com/api-reference/catalog/pricelists-api/price-lists/getpricelistcollection):\n\n```json\n{\n  \"data\": [\n    {\n      \"price_list_id\": 4,\n      \"variant_id\": 361,\n      \"price\": 22.66,\n      \"sale_price\": null,\n      \"retail_price\": null,\n      \"map_price\": null,\n      \"calculated_price\": 22.66,\n      \"date_created\": \"2019-03-05T16:38:08Z\",\n      \"date_modified\": \"2019-03-05T16:38:08Z\",\n      \"currency\": \"usd\",\n      \"product_id\": 190\n    },\n    {\n      \"price_list_id\": 4,\n      \"variant_id\": 438,\n      \"price\": 18.62,\n      \"sale_price\": null,\n      \"retail_price\": null,\n      \"map_price\": null,\n      \"calculated_price\": 18.62,\n      \"date_created\": \"2019-03-05T16:38:08Z\",\n      \"date_modified\": \"2019-03-05T16:38:08Z\",\n      \"currency\": \"usd\",\n      \"product_id\": 200\n    },\n    {\n      \"price_list_id\": 4,\n      \"variant_id\": 439,\n      \"price\": 18.62,\n      \"sale_price\": null,\n      \"retail_price\": null,\n      \"map_price\": null,\n      \"calculated_price\": 18.62,\n      \"date_created\": \"2019-03-05T16:38:08Z\",\n      \"date_modified\": \"2019-03-05T16:38:08Z\",\n      \"currency\": \"usd\",\n      \"product_id\": 200\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 26,\n      \"count\": 26,\n      \"per_page\": 50,\n      \"current_page\": 1,\n      \"total_pages\": 1\n    }\n  }\n}\n```\n\n## S-2-S Cart and Checkout\n\n<a id=\"server-to-server-cart-and-checkout\"></a>\n\nYou can set up the cart currency when creating a [Server to Server Cart](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-cart-api/cart/createacart). You can set up the currency in the [control panel](#multi-currency_setup) first. \n\n**Example POST Create a Cart** \n*[https://api.bigcommerce.com/stores/{storehash}/v3/carts](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-cart-api/cart/createacart)*\n\n```json\n{\n  \"customer_id\": 1,\n  \"line_items\": [\n    {\n      \"product_id\": 77,\n      \"variant_id\": 1,\n      \"quantity\": 3\n    },\n    {\n      \"product_id\": 77,\n      \"variant_id\": 2,\n      \"quantity\": 3\n    }\n  ],\n  \"channel_id\": 1,\n  \"currency\": {\n    \"code\": \"GBP\"\n  }\n}\n```\n\nThe API will return the item price and the currency of the item price in the store’s current transactional currency. \n\n## Storefront Cart and Checkout\n\n<a id=\"storefront-cart-and-checkout\"></a>\n\nIn the example below, the store’s default currency is `USD`, and the item is `$7.95`. Since the shopper has switched to Euros as the transactional currency, we now convert the line item price and taxes to Euros:\n\n*The item shows prices, including tax.*\n\n**Abbreviated example create a cart response**\n\n```json\n{\n  \"id\": \"4c8681f7-cc64-4377-b5a3-cf5f762edf5d\",\n  \"cart\": {\n    \"id\": \"4c8681f7-cc64-4377-b5a3-cf5f762edf5d\",\n    \"customerId\": 19,\n    \"email\": \"cadenwhitfield@testing.com\",\n    \"currency\": {\n      \"name\": \"Euro\",\n      \"code\": \"EUR\",\n      \"symbol\": \"€\",\n      \"decimalPlaces\": 2\n    },\n    \"isTaxIncluded\": true,\n    \"baseAmount\": 6.97,\n    \"discountAmount\": 0,\n    \"cartAmount\": 6.97,\n    \"lineItems\": {\n      \"physicalItems\": [\n        {\n          \"id\": \"c56ab595-cc9f-4d52-abd3-065f6e7ad903\",\n          \"variantId\": 345,\n          \"productId\": 174,\n          \"name\": \"1L Le Parfait Jar\",\n          \"listPrice\": 6.97,\n          \"salePrice\": 6.97,\n          \"extendedListPrice\": 6.97,\n          \"extendedSalePrice\": 6.97\n        }\n      ]\n    },\n    \"createdTime\": \"2019-01-17T18:38:26+00:00\",\n    \"updatedTime\": \"2019-01-17T18:38:26+00:00\"\n  },\n  // ...\n  \"taxTotal\": 0.53,\n  \"taxes\": [\n    {\n      \"name\": \"Sales Tax\",\n      \"amount\": 0.53\n    }\n  ],\n  \"subtotal\": 6.97,\n  \"grandTotal\": 6.97\n}\n```\n\nIf a shopper changes the currency and has added at least one item to the cart, the charges will still be in the original transactional currency. Below the shopper changed from `USD` to `AUS`. A message is displayed that they will still checkout using `USD`:\n\n`*You will be billed for this order in USD*.`\n\nThe API also still returns Australian Dollars as the currency.\n\n![Order Summary](https://raw.githubusercontent.com/bigcommerce/dev-docs/master/assets/images/multi-currency-order-summary.png \"Order Summary\")\n\nTo change the transactional currency of their cart, the shopper will need to empty the cart and re-add the items in the desired transactional currency.\n\n## Orders\n\n<a id=\"orders\"></a>\n\n**Details:**\n* The order history page shows the currency of the transaction.\n* Invoices show item prices and the currency of the transaction.\n* Since each order can be in a different currency, the control panel order page shows the currency's token (this also applies to Order Export data).\n* The shopper's order history shows the transactional currency, not the display currency. While the underlying historical data itself will remain unchanged, the page now surfaces the transactional currency and amount, rather than display currency and amount -- this change applies to all orders, including historical ones. \n* `default_currency_code` - The transactional currency used in the order; previously the store's default currency.\n* `currency_code` - The display currency used to present prices to the shopper on the storefront.\n* `currency_exchange_rate` - The exchange between the store's default currency and the display currency; when you create the order via server-to-server endpoints, the value is always `1`; only in the storefront can this value differ from `1`.\n* The following additional fields are returned on orders when multi-currency is enabled:\n  * `store_default_currency_code` - The store's default currency.\n  * `store_default_to_transactional_exchange_rate` - The exchange rate between the store's default currency and the transactional currency used in the order.\n\n**Example:**\n\n```json\n{\n  //...   \n  \"currency_id\": 4,\n  \"currency_code\": \"EUR\",\n  \"currency_exchange_rate\": 1,\n  \"default_currency_id\": 4,\n  \"default_currency_code\": \"EUR\",\n  \"store_default_currency_code\": \"USD\",\n  \"store_default_to_transactional_exchange_rate\": \"100.0000000000\"\n  //...\n}\n\n```\n\n**Shopper Order History**:\n![Shopper Order History](https://raw.githubusercontent.com/bigcommerce/dev-docs/master/assets/images/multi-currency-orders.png \"Shopper Order History\")\n\n**Shopper Invoice:**\n![Shopper Invoice](https://raw.githubusercontent.com/bigcommerce/dev-docs/master/assets/images/multi-currency-invoice.png \"Shopper Invoice\")\n\n**Control Panel Order History**:\n![Order Summary](https://raw.githubusercontent.com/bigcommerce/dev-docs/master/assets/images/multi-currency-admin-orders.png \"Control Panel Order History\")\n\n## Promotions\n\n<a id=\"promotions\"></a>\n\nCoupons are available in the default currency only. Attempting to use a coupon with a different currency will return an invalid coupon error. If a customer is checking out in the default currency and then changes to a different currency, the coupon code will still work in the cart. The coupon code works because once you create the cart, it is “locked” into the default currency until being deleted.\n\nYou can create cart level discounts in your currency of choice. The shopper must have the currency selected for the promotion to apply.\n\n![Cart Level Discount](https://raw.githubusercontent.com/bigcommerce/dev-docs/master/assets/images/multi_currency_cart_level_discount_one.png \"Cart Level Discount\")\n\n## Shipping\n\n<a id=\"shipping\"></a>\n\n**Details:**\n* **Product Level Fixed Shipping** - Shipping is set at the product level in the store's default currency. During checkout, BigCommerce converts shipping costs using the store's exchange rate and displays that value to the shopper.  \n* **Flat Rate Shipping** - Flat rate shipping is converted based on the store's currency. \n* **Shipping Carriers** - The currency is sent to the carrier and, depending on the carrier, quotes are returned in the store's transactional currency. If the shipping carrier can not return in the transactional currency, the store will convert it using the transactional currency exchange rate set by the merchant. If you've set the checkout to be viewed in a display currency, the store will convert it to the transactional currency for payment. Shipping providers that support multiple currencies can supply quotes straight in shopper's transactional currency, so no currency conversion needed. ShipperHQ does not support multiple currencies.\n\n## Refunds\n\n<a id=\"refunds\"></a>\n\n* **Default Currency** - Works as normal; no changes made. \n\n* **Transactional Currency** - The refund is shown in the transaction currency. When processing refunds, the amount is refunded to the shopper in the transactional currency.  \n\n* **Display Currency** - The refund is shown in the store's default currency. When processing refunds, the shopper is refunded the transactional currency amount. For example, if an order was purchased with a display currency of $36 AUD, where the AUD exchange rate is set to 1.384615 and a store has USD currency set as a default, the shopper will get $26 USD back when the refund is processed.\n\n## Payment methods supported\n\n<a id=\"payment-methods-supported\"></a>\n\n| Payment Method    | Details                                                                                                                                                |\n|-|--|\n| Gift Certificates | can be used in the currency they were purchased in and can be setup per currency                                                                       |\n| Store Credit      | not converted currently. If a customer has `$10.00 USD` worth of store credit and tries to transact in `EUR` , store credit of `€10.00` will be applied. |\n| Credit Cards      | Processed through Stripe Payment Gateway or Test Payment Gateway                                                                                       |\n\n<div class=\"HubBlock HubBlock--image flex is-viewing is-padded is-standalone\"><div class=\"HubBlock-inner flex-1 w-full\"><div class=\"HubBlock-content\"><div class=\"justify-center text-center\"><div class=\"ImageBlock-title\">Gift Certificates</div><img style=\"max-width:805px\" src=\"https://raw.githubusercontent.com/tatiana-perry/dev-docs-images/master/currency_beta/gift_certificates_multi_currency.png\" alt=\"Control Panel Order History\" class=\"ui centered fluid image\"></div></div></div></div>\n\n## Gift certificates\n\n[**Create a Gift Certificate**](https://developer.bigcommerce.com/api-reference/marketing/marketing-api/gift-certificates/createagiftcertificate)\n\n```json\n{\n  \"code\": \"10R-6E3-AO4-RST\",\n  \"amount\": \"700.0000\",\n  \"status\": \"active\",\n  \"to_name\": \"Jane\",\n  \"to_email\": \"janedoe@email.com\",\n  \"from_name\": \"Tarzan\",\n  \"from_email\": \"test1@test.com\",\n  \"currency_code\": \"EUR\"           // new property\n}\n```\n\n**Control Panel UI**\n![Gift Certificates](https://raw.githubusercontent.com/bigcommerce/dev-docs/master/assets/images/multi-currency-gift-cerfiticates.png \"Gift Certificates\")\n"}],"children":[]}}}}
