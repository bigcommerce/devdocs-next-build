{"path":"api-reference/graphql/graphql","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"jyzzw","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Reference","to":"/api-reference"},{"content":"GraphQL","to":"/api-reference/graphql"},{"content":"GraphQL Storefront API","to":"/api-reference/graphql/graphql"}],"page":{"meta":{"title":"GraphQL Storefront API - GraphQL - API Reference","url":"/api-reference/graphql/graphql","description":"GraphQL Storefront API\n\nHost: {$$.env.store_domain}/graphql\n\nProtocols: https\n\nAccepts: application/json\n\nResponds With: application/json\n\nDownload Spec..."},"title":"GraphQL Storefront API","parsedPath":["pages","/api-reference","data","children",1,"data","children",0],"rootPagePath":"/api-reference","path":"/api-reference/graphql/graphql","isSubpage":true,"route":{"path":"/graphql"},"data":{"blocks":[{"type":"text","data":"# GraphQL Storefront API\n\n* **Host**: {$$.env.store_domain}/graphql\n* **Protocols**: `https`\n* **Accepts**: `application/json`\n* **Responds With**: `application/json`\n\nDownload Spec: [storefront_tokens.v3.yml](https://bigcommerce.stoplight.io/api/v1/projects/bigcommerce/api-reference/nodes/reference/storefront_tokens.v3.yml?branch=master&deref=all&format=json)\n\nUse GraphQL to query data for headless storefronts and BigCommerce [Stencil](https://developer.bigcommerce.com/stencil-docs/getting-started/about-stencil) powered storefronts.\n\n* [GraphQL Playground](#graphql-playground)\n* [GraphQL Explorer](#graphql-explorer)\n* [Authentication](#authentication)\n\t* [Tokens via API](#tokens-via-api)\n\t* [Tokens via Handlebars](#tokens-via-handlebars)\n\t* [Customer Impersonation Tokens](#customer-impersonation-tokens)\n* [Additional information](#additional-information)\n\n## GraphQL Playground\n\nTo access the GraphQL Storefront API Playground and documentation, [log in to your store](https://login.bigcommerce.com/deep-links/manage) and navigate to **Advanced Settings** > **Storefront API Playground**.\n\nIf you don't yet have a store and would like to experiment making queries against a staging site, [visit the GraphQL Playground directly on the Dev Center](https://developer.bigcommerce.com/graphql-playground).\n\n## GraphQL Explorer\n\nTo explore Storefront nodes in an interactive graph, checkout out the [GraphQL Explorer](https://developer.bigcommerce.com/graphql-explorer).\n\n## Authentication\n\n### Tokens via API\n\nCreate JWT tokens for authenticating cross-origin requests by making a `POST` request to [`/v3/storefront/api-token`](https://developer.bigcommerce.com/api-reference/storefront/graphql-api-tokens/api-token/createtoken).\n\n```http\nPOST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/storefront/api-token\nX-Auth-Token: {{ACCESS_TOKEN}}\nContent-Type: application/json\nAccept: application/json\n\n{\n  \"channel_id\": 1,\n  \"expires_at\": 1602288000,\n  \"allowed_cors_origins\": [\n    \"https://example.com\"\n  ]\n}\n```\n\n[![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/storefront/graphql-api-tokens/api-token/createtoken#requestrunner)\n\n### Tokens via handlebars\n\nClient code on BigCommerce [Stencil](https://developer.bigcommerce.com/stencil-docs/getting-started/about-stencil) powered storefronts can be passed a token at render time with the `{{settings.storefront_api.token}}` Handlebars object.\n\n```js\nfetch('/graphql', {\n\tmethod: 'POST',\n\theaders: {\n\t 'Content-Type': 'application/json',\n\t 'Authorization': 'Bearer {{settings.storefront_api.token}}'\n\t},\n\tbody: JSON.stringify({ query: '{ site { ... } }' }),\n});\n```\n\n### Customer impersonation tokens\n\nIt's also possible to generate tokens for use in server-to-server interactions with a trusted consumer. To [create a customer impersonation token](https://developer.bigcommerce.com/api-reference/store-management/tokens/customer-impersonation-token/createtokenwithcustomerimpersonation), send a `POST` request to `/v3/storefront/api-token-customer-impersonation`.\n\n```http\nPOST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/storefront/api-token-customer-impersonation\nX-Auth-Token: {{ACCESS_TOKEN}}\nContent-Type: application/json\nAccept: application/json\n\n{\n  \"channel_id\": 1,\n  \"expires_at\": 1602288000\n}\n```\n\n[![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/store-management/tokens/customer-impersonation-token/createtokenwithcustomerimpersonation#requestrunner)\n\n**[Response:](https://developer.bigcommerce.com/api-reference/store-management/tokens/customer-impersonation-token/createtokenwithcustomerimpersonation#responses)**\n\n```json\n{\n  \"data\":\n  {\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n  }\n  \"meta\": {}\n}\n```\n\n## Logging in a customer\n\nIf you're using the Storefront API from a browser (for example, on top of your Stencil storefront) you can use the Customer Login mutation to log in a customer account with an email address and password (for server-side integrations, consider a customer impersonation token instead). This will set a session cookie in the browser which will authenticate the customer account on future requests:\n\n```js\nmutation Login($email: String!, $pass: String!) {\n  login(email: $email, password: $pass) {\n    result\n  }\n}\n```\n\nAs a best practice, you should inject the password using GraphQL query variables. This prevents the password from being exposed in the query itself. In the [GraphQL Playground](https://developer.bigcommerce.com/graphql-playground), you can set the variables for the request:\n\n[Learn more about GraphQL Storefront API Authentication](https://developer.bigcommerce.com/api-docs/storefront/graphql/graphql-storefront-api-overview#authentication).\n\n## Additional information\n* [GraphQL Storefront API Overview](https://developer.bigcommerce.com/api-docs/storefront/graphql/graphql-storefront-api-overview).\n* [GraphQL Playground](https://developer.bigcommerce.com/graphql-playground)\n* [GraphQL Explorer](https://developer.bigcommerce.com/graphql-explorer)\n\n"}],"children":[]}}}}
