{"path":"api-reference/store-management/order-transactions/transactions/gettransactions","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"jyzzw","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Reference","to":"/api-reference"},{"content":"Management APIs","to":"/api-reference/store-management"},{"content":"Orders v3","to":"/api-reference/store-management/order-transactions"},{"content":"Transactions","to":"/api-reference/store-management/order-transactions/transactions"},{"content":"Get Transactions","to":"/api-reference/store-management/order-transactions/transactions/gettransactions"}],"page":{"meta":{"title":"Get Transactions - Transactions - Orders v3 - Management APIs - API Reference","url":"/api-reference/store-management/order-transactions/transactions/gettransactions","description":"Returns an order's transactions.\n\nUsage Notes\n\nDepending on the payment method, different information will be available (not all payment gateways return..."},"title":"Get Transactions","parsedPath":["pages","/api-reference","data","children",2,"data","children",15,"data","children",2,"data","children",0],"rootPagePath":"/api-reference","path":"/api-reference/store-management/order-transactions/transactions/gettransactions","isSubpage":true,"route":{"path":"/gettransactions"},"data":{"blocks":[{"type":"text","data":"Returns an **order's** transactions.\n\n**Usage Notes**\n* Depending on the payment method, different information will be available (not all payment gateways return full card or fraud detail).\n* Transactions are not created for the following payment methods:\n  * Test Payment Gateway\n  * PayPal Express\n  * Amazon Pay\n\n\nRequires at least one of the following scopes:\n* `store_v2_transactions_read_only`\n* `store_v2_transactions`","header":{"title":"/orders/{order_id}/transactions","subtitle":"Get Transactions","token":"get"}},{"type":"text","data":"## Authorization","config":{"classNames":["ApiOperation--securityTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"apiKey - X-Auth-Token","blocks":[{"type":"text","data":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Order Transactions | read and modify `transactions` and `payment_methods` | `store_v2_transactions` |\n|  Order Transactions | read `transactions` and `payment_methods`  | `store_v2_transactions_read_only` |\n|  Orders | read and modify `payment_methods` |`store_v2_orders`|\n|  Orders | read `payment_methods` |`store_v2_orders_read_only`|\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n* **Name**: X-Auth-Token\n* **Location**: header"}]}]},"config":{"classNames":["ApiOperation--security"]}},{"type":"text","data":"## Request Parameters","config":{"classNames":["ApiOperation--requestTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"1 Path Parameter","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"order_id":{"type":"integer","description":"The ID of the `Order` to which the transactions belong.\n","required":true}},"required":["order_id"]},"config":{"hideRoot":true}}]},{"title":"2 Headers","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"Accept":{"type":"string","default":"application/json"},"Content-Type":{"type":"string","default":"application/json"}},"required":[]},"config":{"hideRoot":true}}]}]},"config":{"classNames":["ApiOperation--request"]}},{"type":"text","data":"## Responses","config":{"classNames":["ApiOperation--responsesTitle mt-10 -mb-14"]}},{"type":"tabs","data":{"children":[{"title":"200","blocks":[{"type":"text","data":"Response payload for the BigCommerce Order Transactions API."},{"type":"accordion","data":{"children":[{"title":"1 Example","blocks":[{"type":"tabs","data":{"children":[{"title":"application/json","blocks":[{"type":"code","data":"{\n  \"data\": [\n    {\n      \"id\": 85926313,\n      \"order_id\": \"121\",\n      \"event\": \"purchase\",\n      \"method\": \"nonce\",\n      \"amount\": 1,\n      \"currency\": \"USD\",\n      \"gateway\": \"squarev2\",\n      \"gateway_transaction_id\": \"pN5Kd7R9ilEI2ygBawCy7tMF|qwnAFAxRZ7tYRtIpZULg1yMF\",\n      \"status\": \"ok\",\n      \"test\": false,\n      \"fraud_review\": false,\n      \"reference_transaction_id\": {},\n      \"date_created\": \"2018-05-08T15:06:12+00:00\",\n      \"avs_result\": {\n        \"code\": \"\",\n        \"message\": \"\",\n        \"street_match\": \"\",\n        \"postal_match\": \"\"\n      },\n      \"cvv_result\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"credit_card\": {},\n      \"gift_certificate\": {},\n      \"store_credit\": {},\n      \"offline\": {},\n      \"custom\": {},\n      \"payment_instrument_token\": {},\n      \"payment_method_id\": \"squarev2.card\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 1,\n      \"count\": 1,\n      \"per_page\": 50,\n      \"current_page\": 1,\n      \"total_pages\": 1,\n      \"links\": {\n        \"current\": \"?page=1&limit=50\"\n      }\n    }\n  }\n}"}]}]}}]},{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"data":{"type":"array","items":{"description":"A BigCommerce Transaction object describes a single transaction.","allOf":[{"title":"Transaction Base","properties":{"event":{"type":"string","description":"Store event that created the transaction.\n","enum":["purchase","authorization","capture","refund","void","pending","settled"]},"method":{"type":"string","description":"The payment method: `credit_card` - a credit-card transaction; `electronic_wallet` - an online wallet; `store_credit` - a transaction using store credit; `gift_certificate` - a transaction using a gift certificate; `custom` - manual payment methods; `token` - payment token; `nonce` - temporary payment token; `offsite` - online payment off the site; `offline` - payment method that takes place offline.\n","enum":["credit_card","electronic_wallet","gift_certificate","store_credit","apple_pay_card","apple_pay_token","token","custom","offsite","offline","nonce"]},"amount":{"type":"number","format":"float","description":"Amount of money in the transaction.\n"},"currency":{"type":"string","format":"ISO-4217","description":"Currency used for the transaction.\n"},"gateway":{"type":"string","description":"The payment gateway, where applicable.\n","enum":["2checkout","adyen","amazon","authorizenet","bankdeposit","braintree","cheque","cod","custom","firstdatagge4","giftcertificate","hps","instore","klarna","migs","moneyorder","nmi","paypalexpress","paypalpaymentsprous","paypalpaymentsprouk","plugnpay","qbmsv2","securenet","square","storecredit","stripe","testgateway","usaepay"]},"gateway_transaction_id":{"description":"The transaction ID returned by the payment gateway for this transaction item.\n","type":"string"},"date_created":{"description":"The datetime of the transaction.\n","type":"string","format":"date-time"},"test":{"type":"boolean","description":"True if the transaction performed was a test, or if the gateway is in test mode.\n"},"status":{"type":"string","description":"Status of the transaction.\n","enum":["ok","error"]},"fraud_review":{"type":"boolean","description":"Result of gateway fraud review, if any. Default is `false`.\n"},"reference_transaction_id":{"type":"integer","description":"Identifier for an existing transaction upon which this transaction acts.\n"},"offline":{"type":"object","description":"Offline payment (e.g., check or purchase order).","title":"Offline","properties":{"display_name":{"description":"Display name for the offline payment.\n","type":"string"}}},"custom":{"type":"object","description":"Custom payment from manual order.","title":"Custom","properties":{"payment_method":{"description":"Text entered for the payment method in the control panel.\n","type":"string"}}},"payment_method_id":{"type":"string","description":"The payment method ID used for this transaction\n"}},"required":["event","method","amount","currency","gateway"]},{"properties":{"id":{"type":"integer","description":"Unique identifier for the transaction.\n"},"order_id":{"type":"string","description":"Identifier for the BigCommerce Order with which this transaction is associated.\n"},"date_created":{"description":"The datetime of the transaction.\n","type":"string","format":"date-time"},"payment_instrument_token":{"type":"string","description":"This field contains internal BigPay token for stored card that is then mapped to the actual third-party token. We currently do not offer a way to get third party tokens.These tokens are read-only and do not return any information about the payment."},"avs_result":{"description":"Address Verification Service (AVS) result from the payment gateway.","type":"object","title":"AVS Results","properties":{"code":{"description":"AVS code.","type":"string"},"message":{"description":"AVS message.","type":"string"},"street_match":{"description":"AVS Code for street matching result.","type":"string"},"postal_match":{"description":"AVS Code for postal matching result.","type":"string"}}},"cvv_result":{"description":"Card Verification Value result from the payment gateway.","type":"object","title":"CVV Result","properties":{"code":{"description":"CVV code.","type":"string"},"message":{"description":"CVV message.","type":"string"}}},"credit_card":{"type":"object","description":"A credit-card model.","title":"Credit Card","properties":{"card_type":{"type":"string","enum":["alelo","alia","american_express","cabal","carnet","dankort","diners_club","discover","elo","forbrugsforeningen","jcb","maestro","master","naranja","sodexo","unionpay","visa","vr"],"description":"**Allowed values**: alelo, alia, american_express, cabal, carnet, dankort, diners_club, discover, elo, forbrugsforeningen, jcb, maestro, master, naranja, sodexo, unionpay, visa, vr"},"card_iin":{"description":"The IIN of a credit-card number.\n","type":"string"},"card_last4":{"description":"The last 4 digits of a credit-card number.\n","type":"string"},"card_expiry_month":{"description":"The expiry month of a credit-card.\n","type":"integer","minimum":1,"maximum":12},"card_expiry_year":{"description":"The expiry year of a credit-card.\n","type":"integer"}}},"gift_certificate":{"type":"object","description":"A gift-certificate model.","title":"Gift Certificate","properties":{"code":{"description":"The gift-certificate code.\n","type":"string","example":"MB345"},"original_balance":{"description":"The balance on a gift certificate when it was purchased.\n","type":"number","format":"float","example":100},"starting_balance":{"description":"The balance on a gift certificate at the time of this purchase.\n","type":"number","format":"float","example":100},"remaining_balance":{"description":"The remaining balance on a gift certificate.\n","type":"number","format":"float","example":35.42},"status":{"description":"The status of a gift certificate: `active` - gift certificate is active; `pending` - gift certificate purchase is pending; `disabled` - gift certificate is disabled; `expired` - gift certificate is expired.\n","type":"string","enum":["active","pending","disabled","expired"]}}},"store_credit":{"type":"object","description":"A store credit model.\n","properties":{"remaining_balance":{"description":"Remaining balance of shopper's store credit.\n","type":"number","format":"float","example":35.42}}}}}],"title":"Transaction","type":"object"}},"meta":{"type":"object","title":"metaCollection_Full","properties":{"pagination":{"type":"object","title":"pagination_Full","properties":{"total":{"description":"Total number of items in the result set.","type":"integer","format":"int32"},"count":{"description":"Total number of items in the collection response.","type":"integer","format":"int32"},"per_page":{"description":"The amount of items returned in the collection per page, controlled by the limit parameter.","type":"integer","format":"int32"},"current_page":{"description":"The page you are currently on within the collection.","type":"integer","format":"int32"},"total_pages":{"description":"The total number of pages in the collection.","type":"integer","format":"int32"},"links":{"type":"object","properties":{"previous":{"type":"string","description":"Link to the previous page returned in the response.\n"},"current":{"type":"string","description":"Link to the current page returned in the response.\n","example":"?page=1&limit=50"},"next":{"type":"string","description":"Link to the next page returned in the response.\n"}},"title":"links_Full"}}}}}}}}]}]}}]},{"title":"204","blocks":[{"type":"text","data":"No content found to fulfill request."},{"type":"accordion","data":{"children":[{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"description":"No-content response for the BigCommerce API.","type":"object","properties":{"status":{"description":"204 HTTP status code.\n","type":"integer"},"title":{"description":"The error title describing the situation.","type":"string"},"type":{"type":"string"},"instance":{"type":"string"}},"title":"No Content"}}]}]}}]},{"title":"404","blocks":[{"type":"text","data":"The resource was not found."},{"type":"accordion","data":{"children":[{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"description":"Error payload for the BigCommerce API.","type":"object","properties":{"status":{"description":"404 HTTP status code.\n","type":"integer"},"title":{"description":"The error title describing the particular error.","type":"string"},"type":{"type":"string"},"instance":{"type":"string"}},"title":"Not Found"}}]}]}}]}]},"config":{"classNames":["ApiOperation--responses"]}},{"type":"text","data":"## Send a Test Request","config":{"classNames":["ApiOperation--tryItOutTitle mt-10 -mb-10"]}},{"type":"http","data":{"method":"get","url":"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3/orders/{order_id}/transactions","headers":{"Accept":"application/json","Content-Type":"application/json","X-Auth-Token":"{$$.env.X-Auth-Token}"},"stepPathParams":{"order_id":""}},"config":{"canvas":false,"paddedInner":false,"classNames":["ApiOperation--tryItOut"]}}],"children":[]}}}}
