{"path":"api-reference/store-management/order-transactions/payment-actions/postrefundquote","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"jyzzw","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Reference","to":"/api-reference"},{"content":"Management APIs","to":"/api-reference/store-management"},{"content":"Orders v3","to":"/api-reference/store-management/order-transactions"},{"content":"Payment Actions","to":"/api-reference/store-management/order-transactions/payment-actions"},{"content":"Create a Refund Quote","to":"/api-reference/store-management/order-transactions/payment-actions/postrefundquote"}],"page":{"meta":{"title":"Create a Refund Quote - Payment Actions - Orders v3 - Management APIs - API Reference","url":"/api-reference/store-management/order-transactions/payment-actions/postrefundquote","description":"Calculate the tax amount, total refund amount and get available payment options for an order refund by providing items and costs or quantities to refund..."},"title":"Create a Refund Quote","parsedPath":["pages","/api-reference","data","children",2,"data","children",15,"data","children",1,"data","children",2],"rootPagePath":"/api-reference","path":"/api-reference/store-management/order-transactions/payment-actions/postrefundquote","isSubpage":true,"route":{"path":"/postrefundquote"},"data":{"blocks":[{"type":"text","data":"Calculate the tax amount, total refund amount and get available payment options for an order refund by providing items and costs or quantities to refund.\n\nRequires at least one of the following scopes:\n* `store_v2_orders`\n* `store_v2_transactions`","header":{"title":"/orders/{order_id}/payment_actions/refund_quotes","subtitle":"Create a Refund Quote","token":"post"}},{"type":"text","data":"## Authorization","config":{"classNames":["ApiOperation--securityTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"apiKey - X-Auth-Token","blocks":[{"type":"text","data":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Order Transactions | read and modify `transactions` and `payment_methods` | `store_v2_transactions` |\n|  Order Transactions | read `transactions` and `payment_methods`  | `store_v2_transactions_read_only` |\n|  Orders | read and modify `payment_methods` |`store_v2_orders`|\n|  Orders | read `payment_methods` |`store_v2_orders_read_only`|\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n* **Name**: X-Auth-Token\n* **Location**: header"}]}]},"config":{"classNames":["ApiOperation--security"]}},{"type":"text","data":"## Request Parameters","config":{"classNames":["ApiOperation--requestTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"1 Path Parameter","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"order_id":{"type":"integer","description":"Order id","required":true}},"required":["order_id"]},"config":{"hideRoot":true}}]},{"title":"2 Headers","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"Accept":{"type":"string","default":"application/json"},"Content-Type":{"type":"string","default":"application/json"}},"required":[]},"config":{"hideRoot":true}}]}]},"config":{"classNames":["ApiOperation--request"]}},{"type":"text","data":"## Request Body","config":{"classNames":["ApiOperation--requestBodyTitle mt-10","-mb-10"]}},{"type":"accordion","data":{"children":[{"title":"4 Examples","blocks":[{"type":"tabs","data":{"children":[{"title":"Quantity","blocks":[{"type":"code","data":"{\n  \"items\": [\n    {\n      \"item_id\": 75,\n      \"item_type\": \"PRODUCT\",\n      \"quantity\": 1\n    }\n  ]\n}"}]},{"title":"Amount","blocks":[{"type":"code","data":"{\n  \"items\": [\n    {\n      \"item_id\": 79,\n      \"item_type\": \"SHIPPING\",\n      \"amount\": 10\n    }\n  ]\n}"}]},{"title":"Tax Exempt (Order Level)","blocks":[{"type":"code","data":"{\n  \"items\": [\n    {\n      \"item_type\": \"ORDER\",\n      \"item_id\": 1234,\n      \"amount\": 1,\n      \"reason\": \"Overchaged $1.00\"\n    }\n  ]\n}"}]},{"title":"Multiple Items","blocks":[{"type":"code","data":"{\n  \"items\": [\n    {\n      \"item_id\": 75,\n      \"item_type\": \"PRODUCT\",\n      \"quantity\": 1\n    },\n    {\n      \"item_id\": 79,\n      \"item_type\": \"SHIPPING\",\n      \"amount\": 10\n    }\n  ]\n}"}]}]}}]},{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"type":"object","title":"RefundQuote_Post","description":"Request body for refund quotes.","properties":{"order_id":{"type":"integer","description":"Order ID against which this refund will be created. This is optional for creating a single refund request. The order ID is included in the request path.","example":1},"items":{"title":"ItemsRefund","type":"array","items":{"anyOf":[{"type":"object","title":"Amount Bound Item","description":"Amount Bound Item\n\nType of refund item that capture refunding of items in the order that are of type amount.\n* `SHIPPING`\n* `HANDLING`\n","properties":{"item_type":{"type":"string","enum":["SHIPPING","HANDLING"],"example":"SHIPPING","description":"Type of refund."},"item_id":{"type":"integer","example":1,"description":"Order address ID."},"amount":{"type":"number","format":"float","description":"A non-negative 2 decimal place rounded value that represents the amount that can be charged/refunded via payment providers.","example":1.99,"title":"Amount"},"reason":{"type":"string","minLength":0,"maxLength":1000}}},{"type":"object","title":"Quantity Bound Item","description":"Quantity Bound Item\n\nType of refund item that capture refunding of items in the order that are of type quantity.\n* `PRODUCT`\n* `GIFT_WRAPPING`\n","properties":{"item_type":{"type":"string","enum":["PRODUCT","GIFT_WRAPPING"],"description":"Type of refund."},"item_id":{"type":"integer","example":1,"description":"Order Product ID. "},"quantity":{"type":"integer","example":3},"reason":{"type":"string","description":"Reason for refund","minLength":0,"maxLength":1000}}},{"type":"object","title":"Tax Exempt (Order Level)","description":"Use this to refund a custom value at the order level. When `item_type` is set to `ORDER`, tax is not re-calculated.","properties":{"item_type":{"type":"string","description":"The type of refund. When `item_type` is set to `ORDER`, tax is not re-calculated.","example":"ORDER","enum":["ORDER"]},"amount":{"type":"number","format":"float","description":"A non-negative 2 decimal place rounded value that represents the amount that can be charged/refunded via payment providers.","example":1.99,"title":"Amount"},"reason":{"type":"string","description":"Reason for the refund.","minLength":0,"maxLength":1000}}}]}}},"required":["order_id","items"]},"config":{"hideRoot":false}}]}]},"config":{"classNames":["ApiOperation--requestBody"]}},{"type":"text","data":"## Responses","config":{"classNames":["ApiOperation--responsesTitle mt-10 -mb-14"]}},{"type":"tabs","data":{"children":[{"title":"201","blocks":[{"type":"accordion","data":{"children":[{"title":"1 Example","blocks":[{"type":"tabs","data":{"children":[{"title":"application/json","blocks":[{"type":"code","data":"{\n  \"data\": {\n    \"order_id\": 1,\n    \"total_refund_amount\": 1.99,\n    \"total_refund_tax_amount\": 1.95,\n    \"rounding\": 1,\n    \"adjustment\": 0,\n    \"tax_inclusive\": true,\n    \"refund_methods\": [\n      \"\"\n    ]\n  },\n  \"meta\": {}\n}"}]}]}}]},{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"data":{"type":"object","title":"RefundQuote_Full","properties":{"order_id":{"type":"integer","description":"ID of the order to be refunded"},"total_refund_amount":{"type":"number","format":"float","description":"A non-negative 2 decimal place rounded value that represents the amount that can be charged/refunded via payment providers.","example":1.99,"title":"Amount"},"total_refund_tax_amount":{"type":"number","example":1.95},"rounding":{"type":"number","description":"Indicates rounding value to bring refund_total to an amount refundable via payment providers (in this case to 2 decimal places)"},"adjustment":{"type":"number","format":"float","description":"A negative or positive 2 decimal place rounded value that represents the difference between the refund amount requested in the refund quote and the actual amount that is refundable on the order. This value is negative when the refund amount requested in the refund quote is more than the total refundable amount. This value is positive when the total refundable amount has increased, e.g. as a result of rounding.","example":-10.2,"title":"Adjustment Amount"},"tax_inclusive":{"type":"boolean","description":"Indicate if total_refund_amount includes tax amount"},"refund_methods":{"type":"array","description":"An array of available refund methods.\n\nNote that `refund_methods` is an array of refund methods, with each refund method being an array of payment options.\n\nFor example, if the order was placed by a combination of store credit and bank deposit the refund methods would be:\n```json\n{\n  \"refund_methods\": [\n    [\n      {\n        \"provider_id\": \"storecredit\",\n        \"provider_description\": \"Store Credit\",\n        \"amount\": 119.35,\n        \"offline\": false,\n        \"offline_provider\": false,\n        \"offline_reason\": \"\"\n      }\n    ],\n    [\n      {\n        \"provider_id\": \"custom\",\n        \"provider_description\": \"Custom\",\n        \"amount\": 119.35,\n        \"offline\": true,\n        \"offline_provider\": true,\n        \"offline_reason\": \"This is an offline payment provider.\"\n      }\n    ],\n    [\n      {\n        \"provider_id\": \"bankdeposit\",\n        \"provider_description\": \"Bank Deposit\",\n        \"amount\": 80.35,\n        \"offline\": true,\n        \"offline_provider\": true,\n        \"offline_reason\": \"This is an offline payment provider.\"\n      },\n      {\n        \"provider_id\": \"storecredit\",\n        \"provider_description\": \"Store Credit\",\n        \"amount\": 39,\n        \"offline\": false,\n        \"offline_provider\": false,\n        \"offline_reason\": \"\"\n      }\n    ]\n  ]\n}\n```\n\nIn this case there are three refund methods available to the merchant:\n1. Refund up to the entire order amount to store credit.\n2. Mark an amount up to the full order amount as refunded externally, through a provider or means not represented directly in BC (\"custom\").\n3. Refund the amount paid by store credit to store credit, and the amount paid by bank deposit via a manual refund, which will be recorded as being refunded against the bank deposit.\n\n>\n","items":{"type":"array","minItems":1,"items":{"type":"object","example":{"provider_id":"checkout_paypalexpress","provider_description":"Paypal Express","amount":9.99,"offline":true,"offline_provider":true,"offline_reason":"Multiple online refunds are not available"},"title":"Payment Option","properties":{"provider_id":{"type":"string","description":"Name of the payment method","example":"checkout_paypalexpress"},"provider_description":{"type":"string","description":"Description for payment provider","example":"Paypal Express"},"amount":{"type":"number","description":"amount to be refunded via this payment provider","example":9.99},"offline":{"type":"boolean","description":"Indicates the payment must be done offline due to constraints of the payment provider, such as partial refunds not being supported, or it being offline only such as cash on delivery of bank deposit.","example":true},"offline_provider":{"type":"boolean","description":"Indicates if the payment provider is a strictly offline provider, such as cash on delivery or bank deposit.","example":true},"offline_reason":{"type":"string","description":"Reason the payment option is offline only, if applicable.","example":"Multiple online refunds are not available"}}},"title":"Refund Method"}}}},"meta":{"type":"object"}}}}]}]}}]},{"title":"422","blocks":[{"type":"text","data":"This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object."},{"type":"accordion","data":{"children":[{"title":"1 Example","blocks":[{"type":"tabs","data":{"children":[{"title":"application/json","blocks":[{"type":"code","data":"{\n  \"status\": 422,\n  \"title\": \"JSON data is missing or invalid\",\n  \"type\": \"https://developer.bigcommerce.com/api#api-status-codes\",\n  \"errors\": {\n    \"name\": \"error.expected.jsstring\",\n    \"primary_contact.district\": \"error.expected.jsstring.\"\n  }\n}"}]}]}}]},{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"allOf":[{"type":"object","title":"error_Base","properties":{"status":{"description":"The HTTP status code.\n","type":"integer"},"title":{"description":"The error title describing the particular error.\n","type":"string"},"type":{"type":"string"}},"description":"Error payload for the BigCommerce API."},{"type":"object","properties":{"errors":{"type":"object","additionalProperties":{"type":"string"},"title":"DetailedErrors"}}}],"title":"ErrorResponse"}}]}]}}]}]},"config":{"classNames":["ApiOperation--responses"]}},{"type":"text","data":"## Send a Test Request","config":{"classNames":["ApiOperation--tryItOutTitle mt-10 -mb-10"]}},{"type":"http","data":{"method":"post","url":"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3/orders/{order_id}/payment_actions/refund_quotes","headers":{"Accept":"application/json","Content-Type":"application/json","X-Auth-Token":"{$$.env.X-Auth-Token}"},"stepPathParams":{"order_id":""},"body":"{\n  \"items\": [\n    {\n      \"item_id\": 75,\n      \"item_type\": \"PRODUCT\",\n      \"quantity\": 1\n    }\n  ]\n}"},"config":{"canvas":false,"paddedInner":false,"classNames":["ApiOperation--tryItOut"]}}],"children":[]}}}}
