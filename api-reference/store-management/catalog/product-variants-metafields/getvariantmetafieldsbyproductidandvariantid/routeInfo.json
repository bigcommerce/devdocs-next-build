{"path":"api-reference/store-management/catalog/product-variants-metafields/getvariantmetafieldsbyproductidandvariantid","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"jyzzw","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Reference","to":"/api-reference"},{"content":"Management APIs","to":"/api-reference/store-management"},{"content":"Catalog","to":"/api-reference/store-management/catalog"},{"content":"Product Variants Metafields","to":"/api-reference/store-management/catalog/product-variants-metafields"},{"content":"Get All Product Variant Metafields","to":"/api-reference/store-management/catalog/product-variants-metafields/getvariantmetafieldsbyproductidandvariantid"}],"page":{"meta":{"title":"Get All Product Variant Metafields - Product Variants Metafields - Catalog - Management APIs - API Reference","url":"/api-reference/store-management/catalog/product-variants-metafields/getvariantmetafieldsbyproductidandvariantid","description":"Returns a list of product variant Metafields. Optional parameters can be passed in.\n\nAuthorization\n\nOAuth Scopes\n\n\n\nHeaders\n\n\n\nExample\n\n\n\nFor more infor..."},"title":"Get All Product Variant Metafields","parsedPath":["pages","/api-reference","data","children",2,"data","children",3,"data","children",18,"data","children",0],"rootPagePath":"/api-reference","path":"/api-reference/store-management/catalog/product-variants-metafields/getvariantmetafieldsbyproductidandvariantid","isSubpage":true,"route":{"path":"/getvariantmetafieldsbyproductidandvariantid"},"data":{"blocks":[{"type":"text","data":"Returns a list of product variant *Metafields*. Optional parameters can be passed in.","header":{"title":"/catalog/products/{product_id}/variants/{variant_id}/metafields","subtitle":"Get All Product Variant Metafields","token":"get"}},{"type":"text","data":"## Authorization","config":{"classNames":["ApiOperation--securityTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"apiKey - X-Auth-Token","blocks":[{"type":"text","data":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Products | modify | `store_v2_products` |\n|  Products | read-only | `store_v2_products_read_only` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n* **Name**: X-Auth-Token\n* **Location**: header"}]}]},"config":{"classNames":["ApiOperation--security"]}},{"type":"text","data":"## Request Parameters","config":{"classNames":["ApiOperation--requestTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"2 Path Parameters","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"product_id":{"type":"integer","description":"The ID of the `Product` to which the resource belongs.\n","required":true},"variant_id":{"type":"integer","description":"ID of the variant on a product, or on an associated Price List Record.\n","required":true}},"required":["product_id","variant_id"]},"config":{"hideRoot":true}}]},{"title":"6 Query Parameters","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"page":{"type":"integer","description":"Specifies the page number in a limited (paginated) list of products."},"limit":{"type":"integer","description":"Controls the number of items per page in a limited (paginated) list of products."},"key":{"type":"string","description":"Filter based on a metafield's key.\n"},"namespace":{"type":"string","description":"Filter based on a metafield's namespace."},"include_fields":{"type":"string","description":"Fields to include, in a comma-separated list. The ID and the specified fields will be returned."},"exclude_fields":{"type":"string","description":"Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."}},"required":[]},"config":{"hideRoot":true}}]},{"title":"2 Headers","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"Accept":{"type":"string","default":"application/json","required":true},"Content-Type":{"type":"string","default":"application/json","required":true}},"required":["Accept","Content-Type"]},"config":{"hideRoot":true}}]}]},"config":{"classNames":["ApiOperation--request"]}},{"type":"text","data":"## Responses","config":{"classNames":["ApiOperation--responsesTitle mt-10 -mb-14"]}},{"type":"tabs","data":{"children":[{"title":"200","blocks":[{"type":"accordion","data":{"children":[{"title":"1 Example","blocks":[{"type":"tabs","data":{"children":[{"title":"application/json","blocks":[{"type":"code","data":"{\n  \"data\": [\n    {\n      \"permission_set\": \"app_only\",\n      \"namespace\": \"Warehouse Locations\",\n      \"key\": \"Location\",\n      \"value\": \"4HG\",\n      \"description\": \"Location in the warehouse\",\n      \"resource_type\": \"brand\",\n      \"resource_id\": 111,\n      \"id\": 6,\n      \"date_created\": \"1973-01-20T21:34:57.903Z\",\n      \"date_modified\": \"1990-12-30T00:29:23.515Z\"\n    },\n    {\n      \"permission_set\": \"read\",\n      \"namespace\": \"Warehouse Locations\",\n      \"key\": \"Location\",\n      \"value\": \"4HG\",\n      \"description\": \"Location in the warehouse\",\n      \"resource_type\": \"brand\",\n      \"resource_id\": 111,\n      \"id\": 6,\n      \"date_created\": \"1973-01-20T21:34:57.903Z\",\n      \"date_modified\": \"1990-12-30T00:29:23.515Z\"\n    },\n    {\n      \"permission_set\": \"app_only\",\n      \"namespace\": \"Warehouse Locations\",\n      \"key\": \"Location\",\n      \"value\": \"4HG\",\n      \"description\": \"Location in the warehouse\",\n      \"resource_type\": \"brand\",\n      \"resource_id\": 111,\n      \"id\": 6,\n      \"date_created\": \"1973-01-20T21:34:57.903Z\",\n      \"date_modified\": \"1990-12-30T00:29:23.515Z\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 3,\n      \"count\": 3,\n      \"per_page\": 50,\n      \"current_page\": 1,\n      \"total_pages\": 1,\n      \"links\": {\n        \"current\": \"?page=1&limit=50\"\n      }\n    }\n  }\n}"}]}]}}]},{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"type":"object","title":"Meta Field Collection Response","properties":{"data":{"type":"object","title":"metafield_Base","properties":{"id":{"type":"integer","description":"Unique ID of the *Metafield*. Read-Only.","example":6},"permission_set":{"type":"string","description":"Determines the visibility and writeability of the field by other API consumers.\n\n|Value|Description\n|-|-|\n|`app_only`|Private to the app that owns the field|\n|`read`|Visible to other API consumers|\n|`write`|Open for reading and writing by other API consumers|\n|`read_and_sf_access`|Visible to other API consumers, including on storefront|\n|`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|","enum":["app_only","read","write","read_and_sf_access","write_and_sf_access"]},"namespace":{"type":"string","description":"Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n","x-required":["post"],"minLength":1,"maxLength":64,"example":"Warehouse Locations"},"key":{"type":"string","description":"The name of the field, for example: `location_id`, `color`. Required for POST.\n","x-required":["post"],"minLength":1,"maxLength":64,"example":"Location"},"value":{"type":"string","description":"The value of the field, for example: `1`, `blue`. Required for POST.\n","x-required":["post"],"minLength":1,"maxLength":65535,"example":"4HG"},"description":{"type":"string","description":"Description for the metafields.\n","minLength":0,"maxLength":255,"example":"Location in the warehouse"},"resource_type":{"type":"string","description":"The type of resource with which the metafield is associated.\n","enum":["category","brand","product","variant"],"x-required":["post"],"example":"product"},"resource_id":{"type":"integer","description":"The ID for the resource with which the metafield is associated.\n","x-required":["post"],"minimum":0,"maximum":10000000000,"example":111},"date_created":{"type":"string","format":"date-time","description":"Date and time of the metafield's creation. Read-Only.\n","example":"2018-05-07T20:14:17+00:00"},"date_modified":{"type":"string","format":"date-time","description":"Date and time when the metafield was last updated. Read-Only.\n","example":"2018-05-07T20:14:17+00:00"}},"required":["permission_set","namespace","key","value"],"description":"Metafield for products, categories, variants, and brands. The max number of metafields allowed on each product, category, variant, or brand is fifty. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center."},"meta":{"description":"Returns the categories tree, a nested lineage of the categories with parent->child relationship. The Category objects returned are simplified versions of the category objects returned in the rest of this API.\n","type":"object","title":"categoriesTree_Resp","properties":{"data":{"type":"array","items":{"type":"object","description":"Used to reflect parent <> child category relationships. Used by Category Tree.","title":"categoriesTreeNode_Full","properties":{"id":{"type":"integer","description":"The unique numeric ID of the category; increments sequentially.\n","example":26},"parent_id":{"type":"integer","description":"The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\n","example":25},"name":{"type":"string","description":"The name displayed for the category. Name is unique with respect to the category's siblings.\n","example":"Bath"},"is_visible":{"type":"boolean","description":"Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n","example":true},"url":{"type":"string","description":"The custom URL for the category on the storefront.\n","example":"/towels/bath-towels/"},"children":{"type":"array","description":"The list of children of the category.\n","items":{"$ref":"#/paths/~1catalog~1products~1{product_id}~1variants~1{variant_id}~1metafields/get/responses/200/schema/properties/meta/properties/data/items"}}}}},"meta":{"type":"object","description":"Empty meta object; may be used later.","title":"metaEmpty_Full"}}}}}}]}]}}]},{"title":"404","blocks":[{"type":"text","data":"The resource was not found."},{"type":"accordion","data":{"children":[{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"description":"Error payload for the BigCommerce API.","type":"object","properties":{"status":{"description":"404 HTTP status code.\n","type":"integer"},"title":{"description":"The error title describing the particular error.","type":"string"},"type":{"type":"string"},"instance":{"type":"string"}},"title":"Not Found"}}]}]}}]}]},"config":{"classNames":["ApiOperation--responses"]}},{"type":"text","data":"## Send a Test Request","config":{"classNames":["ApiOperation--tryItOutTitle mt-10 -mb-10"]}},{"type":"http","data":{"method":"get","url":"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3/catalog/products/{product_id}/variants/{variant_id}/metafields","headers":{"Accept":"application/json","Content-Type":"application/json","X-Auth-Token":"{$$.env.X-Auth-Token}"},"query":{"page":"","limit":"","key":"","namespace":"","include_fields":"","exclude_fields":""},"stepPathParams":{"product_id":"","variant_id":""}},"config":{"canvas":false,"paddedInner":false,"classNames":["ApiOperation--tryItOut"]}}],"children":[]}}}}
