{"path":"api-reference/store-management/catalog/category-metafields/updatecategorymetafield","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"jyzzw","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Reference","to":"/api-reference"},{"content":"Management APIs","to":"/api-reference/store-management"},{"content":"Catalog","to":"/api-reference/store-management/catalog"},{"content":"Category Metafields","to":"/api-reference/store-management/catalog/category-metafields"},{"content":"Update a Category Metafield","to":"/api-reference/store-management/catalog/category-metafields/updatecategorymetafield"}],"page":{"meta":{"title":"Update a Category Metafield - Category Metafields - Catalog - Management APIs - API Reference","url":"/api-reference/store-management/catalog/category-metafields/updatecategorymetafield","description":"Updates a Category Metafield.\n\nRequired Fields\n\nnone\n\nRead-Only Fields\n\nid\n\nThese fields can only be modified by the app (API credentials) that created ..."},"title":"Update a Category Metafield","parsedPath":["pages","/api-reference","data","children",2,"data","children",3,"data","children",4,"data","children",3],"rootPagePath":"/api-reference","path":"/api-reference/store-management/catalog/category-metafields/updatecategorymetafield","isSubpage":true,"route":{"path":"/updatecategorymetafield"},"data":{"blocks":[{"type":"text","data":"Updates a *Category Metafield*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified by the app (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message. ","header":{"title":"/catalog/categories/{category_id}/metafields/{metafield_id}","subtitle":"Update a Category Metafield","token":"put"}},{"type":"text","data":"## Authorization","config":{"classNames":["ApiOperation--securityTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"apiKey - X-Auth-Token","blocks":[{"type":"text","data":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Products | modify | `store_v2_products` |\n|  Products | read-only | `store_v2_products_read_only` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n* **Name**: X-Auth-Token\n* **Location**: header"}]}]},"config":{"classNames":["ApiOperation--security"]}},{"type":"text","data":"## Request Parameters","config":{"classNames":["ApiOperation--requestTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"2 Path Parameters","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"metafield_id":{"type":"integer","description":"The ID of the `Metafield`.\n","required":true},"category_id":{"type":"integer","description":"The ID of the `Category` to which the resource belongs.\n","required":true}},"required":["metafield_id","category_id"]},"config":{"hideRoot":true}}]},{"title":"2 Headers","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"Accept":{"type":"string","default":"application/json","required":true},"Content-Type":{"type":"string","default":"application/json","required":true}},"required":["Accept","Content-Type"]},"config":{"hideRoot":true}}]}]},"config":{"classNames":["ApiOperation--request"]}},{"type":"text","data":"## Request Body","config":{"classNames":["ApiOperation--requestBodyTitle mt-10","-mb-10"]}},{"type":"accordion","data":{"children":[{"title":"1 Example","blocks":[{"type":"tabs","data":{"children":[{"title":"application/json","blocks":[{"type":"code","data":"{\n  \"permission_set\": \"app_only\",\n  \"namespace\": \"Warehouse SKUS\",\n  \"key\": \"Location\",\n  \"value\": \"4H\",\n  \"description\": \"Location in the warehouse\",\n  \"resource_type\": \"category\",\n  \"resource_id\": 111\n}"}]}]}}]},{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"description":"Properties for updating metafields.","title":"metafield_Put","allOf":[{"type":"object","properties":{"id":{"type":"integer","description":"Unique ID of the *Metafield*. Read-Only.","example":6}}},{"type":"object","title":"metafield_Base","properties":{"id":{"type":"integer","description":"Unique ID of the *Metafield*. Read-Only.","example":6},"permission_set":{"type":"string","description":"Determines the visibility and writeability of the field by other API consumers.\n\n|Value|Description\n|-|-|\n|`app_only`|Private to the app that owns the field|\n|`read`|Visible to other API consumers|\n|`write`|Open for reading and writing by other API consumers|\n|`read_and_sf_access`|Visible to other API consumers, including on storefront|\n|`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|","enum":["app_only","read","write","read_and_sf_access","write_and_sf_access"]},"namespace":{"type":"string","description":"Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n","x-required":["post"],"minLength":1,"maxLength":64,"example":"Warehouse Locations"},"key":{"type":"string","description":"The name of the field, for example: `location_id`, `color`. Required for POST.\n","x-required":["post"],"minLength":1,"maxLength":64,"example":"Location"},"value":{"type":"string","description":"The value of the field, for example: `1`, `blue`. Required for POST.\n","x-required":["post"],"minLength":1,"maxLength":65535,"example":"4HG"},"description":{"type":"string","description":"Description for the metafields.\n","minLength":0,"maxLength":255,"example":"Location in the warehouse"},"resource_type":{"type":"string","description":"The type of resource with which the metafield is associated.\n","enum":["category","brand","product","variant"],"x-required":["post"],"example":"product"},"resource_id":{"type":"integer","description":"The ID for the resource with which the metafield is associated.\n","x-required":["post"],"minimum":0,"maximum":10000000000,"example":111},"date_created":{"type":"string","format":"date-time","description":"Date and time of the metafield's creation. Read-Only.\n","example":"2018-05-07T20:14:17+00:00"},"date_modified":{"type":"string","format":"date-time","description":"Date and time when the metafield was last updated. Read-Only.\n","example":"2018-05-07T20:14:17+00:00"}},"required":["permission_set","namespace","key","value"],"description":"Metafield for products, categories, variants, and brands. The max number of metafields allowed on each product, category, variant, or brand is fifty. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center."}]},"config":{"hideRoot":false}}]}]},"config":{"classNames":["ApiOperation--requestBody"]}},{"type":"text","data":"## Responses","config":{"classNames":["ApiOperation--responsesTitle mt-10 -mb-14"]}},{"type":"tabs","data":{"children":[{"title":"200","blocks":[{"type":"accordion","data":{"children":[{"title":"1 Example","blocks":[{"type":"tabs","data":{"children":[{"title":"application/json","blocks":[{"type":"code","data":"{\n  \"data\": {\n    \"date_created\": \"2021-08-06T19:15:35+00:00\",\n    \"date_modified\": \"2021-08-06T19:15:35+00:00\",\n    \"description\": \"Where products are located\",\n    \"id\": 4,\n    \"key\": \"location_id\",\n    \"namespace\": \"App Namespace\",\n    \"permission_set\": \"app_only\",\n    \"resource_id\": 137,\n    \"resource_type\": \"product\",\n    \"value\": \"Shelf 3, Bin 5\"\n  },\n  \"meta\": {}\n}"}]}]}}]},{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"type":"object","title":"Metafield Response","properties":{"data":{"type":"object","description":"Common Metafield properties.","title":"Metafield","properties":{"date_created":{"type":"string","format":"date-time","description":"Date and time of the metafield's creation. Read-Only.\n","example":"2018-05-07T20:14:17+00:00"},"date_modified":{"type":"string","format":"date-time","description":"Date and time when the metafield was last updated. Read-Only.\n","example":"2018-05-07T20:14:17+00:00"},"description":{"type":"string","description":"Description for the metafields.\n","minLength":0,"maxLength":255,"example":"Location in the warehouse"},"id":{"type":"integer","description":"Unique ID of the *Metafield*. Read-Only.","example":6},"key":{"type":"string","description":"The name of the field, for example: `location_id`, `color`. Required for POST.\n","x-required":["post"],"minLength":1,"maxLength":64,"example":"Location"},"namespace":{"type":"string","description":"Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n","x-required":["post"],"minLength":1,"maxLength":64,"example":"Warehouse Locations"},"permission_set":{"type":"string","description":"Determines the visibility and writeability of the field by other API consumers.\n\n|Value|Description\n|-|-|\n|`app_only`|Private to the app that owns the field|\n|`read`|Visible to other API consumers|\n|`write`|Open for reading and writing by other API consumers|\n|`read_and_sf_access`|Visible to other API consumers, including on storefront|\n|`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|","enum":["app_only","read","write","read_and_sf_access","write_and_sf_access"],"x-required":["post"]},"resource_id":{"type":"integer","description":"The ID for the resource with which the metafield is associated.\n","x-required":["post"],"minimum":0,"maximum":10000000000,"example":111},"resource_type":{"type":"string","description":"The type of resource with which the metafield is associated.\n","enum":["category","brand","product","variant"],"x-required":["post"],"example":"product"},"value":{"type":"string","description":"The value of the field, for example: `1`, `blue`. Required for POST.\n","x-required":["post"],"minLength":1,"maxLength":65535,"example":"4HG"}},"required":["key","namespace","permission_set","value"]},"meta":{"type":"object","description":"Empty meta object; may be used later.","title":"Meta"}}}}]}]}}]},{"title":"404","blocks":[{"type":"text","data":"The resource was not found."},{"type":"accordion","data":{"children":[{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"description":"Error payload for the BigCommerce API.","type":"object","properties":{"status":{"description":"404 HTTP status code.\n","type":"integer"},"title":{"description":"The error title describing the particular error.","type":"string"},"type":{"type":"string"},"instance":{"type":"string"}},"title":"Not Found"}}]}]}}]}]},"config":{"classNames":["ApiOperation--responses"]}},{"type":"text","data":"## Send a Test Request","config":{"classNames":["ApiOperation--tryItOutTitle mt-10 -mb-10"]}},{"type":"http","data":{"method":"put","url":"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3/catalog/categories/{category_id}/metafields/{metafield_id}","headers":{"Accept":"application/json","Content-Type":"application/json","X-Auth-Token":"{$$.env.X-Auth-Token}"},"stepPathParams":{"metafield_id":"","category_id":""},"body":"{\n  \"permission_set\": \"app_only\",\n  \"namespace\": \"Warehouse SKUS\",\n  \"key\": \"Location\",\n  \"value\": \"4H\",\n  \"description\": \"Location in the warehouse\",\n  \"resource_type\": \"category\",\n  \"resource_id\": 111\n}"},"config":{"canvas":false,"paddedInner":false,"classNames":["ApiOperation--tryItOut"]}}],"children":[]}}}}
