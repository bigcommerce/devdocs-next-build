{"path":"api-reference/store-management/orders/orders/createanorder","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"jyzzw","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Reference","to":"/api-reference"},{"content":"Management APIs","to":"/api-reference/store-management"},{"content":"Orders v2","to":"/api-reference/store-management/orders"},{"content":"Orders","to":"/api-reference/store-management/orders/orders"},{"content":"Create an Order","to":"/api-reference/store-management/orders/orders/createanorder"}],"page":{"meta":{"title":"Create an Order - Orders - Orders v2 - Management APIs - API Reference","url":"/api-reference/store-management/orders/orders/createanorder","description":"Creates an Order. To learn more about creating or updating orders, see Orders Overview.\n\nAn order can be created with an existing catalog product or a c..."},"title":"Create an Order","parsedPath":["pages","/api-reference","data","children",2,"data","children",14,"data","children",0,"data","children",5],"rootPagePath":"/api-reference","path":"/api-reference/store-management/orders/orders/createanorder","isSubpage":true,"route":{"path":"/createanorder"},"data":{"blocks":[{"type":"text","data":"Creates an *Order*. To learn more about creating or updating orders, see [Orders Overview](/api-docs/orders/orders-api-overview).\n\nAn order can be created with an existing catalog product or a custom product.\n\n**Required Fields**\n\n*   products\n*   billing_address","header":{"title":"/orders","subtitle":"Create an Order","token":"post"}},{"type":"text","data":"## Authorization","config":{"classNames":["ApiOperation--securityTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"apiKey - X-Auth-Token","blocks":[{"type":"text","data":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Orders | modify | `store_v2_orders` |\n|  Orders | read-only | `store_v2_orders_read_only` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n* **Name**: X-Auth-Token\n* **Location**: header"}]}]},"config":{"classNames":["ApiOperation--security"]}},{"type":"text","data":"## Request Parameters","config":{"classNames":["ApiOperation--requestTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"2 Headers","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"Accept":{"type":"string","default":"application/json","required":true},"Content-Type":{"type":"string","default":"application/json","required":true}},"required":["Accept","Content-Type"]},"config":{"hideRoot":true}}]}]},"config":{"classNames":["ApiOperation--request"]}},{"type":"text","data":"## Request Body","config":{"classNames":["ApiOperation--requestBodyTitle mt-10","-mb-10"]}},{"type":"accordion","data":{"children":[{"title":"4 Examples","blocks":[{"type":"tabs","data":{"children":[{"title":"Custom Product","blocks":[{"type":"code","data":"{\n  \"billing_address\": {\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Doe\",\n    \"street_1\": \"123 Main Street\",\n    \"city\": \"Austin\",\n    \"state\": \"Texas\",\n    \"zip\": \"78751\",\n    \"country\": \"United States\",\n    \"country_iso2\": \"US\",\n    \"email\": \"janedoe@email.com\"\n  },\n  \"products\": [\n    {\n      \"name\": \"BigCommerce Coffee Mug\",\n      \"quantity\": 1,\n      \"price_inc_tax\": 50,\n      \"price_ex_tax\": 45\n    }\n  ]\n}"}]},{"title":"Product with Options","blocks":[{"type":"code","data":"{\n  \"status_id\": 0,\n  \"customer_id\": 11,\n  \"billing_address\": {\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Doe\",\n    \"street_1\": \"123 Main Street\",\n    \"city\": \"Austin\",\n    \"state\": \"Texas\",\n    \"zip\": \"78751\",\n    \"country\": \"United States\",\n    \"country_iso2\": \"US\",\n    \"email\": \"janedoe@example.com\"\n  },\n  \"shipping_addresses\": [\n    {\n      \"first_name\": \"Trish\",\n      \"last_name\": \"Test\",\n      \"company\": \"Acme Pty Ltd\",\n      \"street_1\": \"666 Sussex St\",\n      \"city\": \"Austin\",\n      \"state\": \"Texas\",\n      \"zip\": \"78751\",\n      \"country\": \"United States\",\n      \"country_iso2\": \"US\",\n      \"email\": \"elsie@example.com\"\n    }\n  ],\n  \"products\": [\n    {\n      \"product_id\": 184,\n      \"quantity\": 5,\n      \"product_options\": [\n        {\n          \"id\": 200,\n          \"value\": \"180\"\n        },\n        {\n          \"id\": 230,\n          \"value\": \"192\"\n        }\n      ]\n    }\n  ]\n}"}]},{"title":"Product with a Drop Down and a Text Field Modifier","blocks":[{"type":"code","data":"{\n  \"status_id\": 0,\n  \"customer_id\": 11,\n  \"billing_address\": {\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Doe\",\n    \"street_1\": \"123 Main Street\",\n    \"city\": \"Austin\",\n    \"state\": \"Texas\",\n    \"zip\": \"78751\",\n    \"country\": \"United States\",\n    \"country_iso2\": \"US\",\n    \"email\": \"janedoe@example.com\"\n  },\n  \"shipping_addresses\": [\n    {\n      \"first_name\": \"Trish\",\n      \"last_name\": \"Test\",\n      \"company\": \"Acme Pty Ltd\",\n      \"street_1\": \"666 Sussex St\",\n      \"city\": \"Austin\",\n      \"state\": \"Texas\",\n      \"zip\": \"78751\",\n      \"country\": \"United States\",\n      \"country_iso2\": \"US\",\n      \"email\": \"elsie@example.com\"\n    }\n  ],\n  \"products\": [\n    {\n      \"product_id\": 184,\n      \"quantity\": 5,\n      \"product_options\": [\n        {\n          \"id\": 200,\n          \"value\": \"180\"\n        },\n        {\n          \"id\": 230,\n          \"value\": \"Custom Message\"\n        }\n      ]\n    }\n  ]\n}"}]},{"title":"Multiple Products","blocks":[{"type":"code","data":"{\n  \"status_id\": 0,\n  \"customer_id\": 11,\n  \"billing_address\": {\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Doe\",\n    \"street_1\": \"123 Main Street\",\n    \"city\": \"Austin\",\n    \"state\": \"Texas\",\n    \"zip\": \"78751\",\n    \"country\": \"United States\",\n    \"country_iso2\": \"US\",\n    \"email\": \"janedoe@example.com\"\n  },\n  \"shipping_addresses\": [\n    {\n      \"first_name\": \"Trish\",\n      \"last_name\": \"Test\",\n      \"company\": \"Acme Pty Ltd\",\n      \"street_1\": \"666 Sussex St\",\n      \"city\": \"Austin\",\n      \"state\": \"Texas\",\n      \"zip\": \"78751\",\n      \"country\": \"United States\",\n      \"country_iso2\": \"US\",\n      \"email\": \"elsie@example.com\"\n    }\n  ],\n  \"products\": [\n    {\n      \"name\": \"BigCommerce Poster\",\n      \"quantity\": 1,\n      \"price_inc_tax\": 10.98,\n      \"price_ex_tax\": 10\n    },\n    {\n      \"name\": \"BigCommerce Coffee Mug\",\n      \"quantity\": 1,\n      \"price_inc_tax\": 50,\n      \"price_ex_tax\": 45\n    },\n    {\n      \"product_id\": 184,\n      \"product_options\": [\n        {\n          \"id\": 200,\n          \"value\": \"180\"\n        },\n        {\n          \"id\": 230,\n          \"value\": \"192\"\n        }\n      ]\n    }\n  ]\n}"}]}]}}]},{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"title":"order_Post","description":"Products and Billing address only required for POST operation.","allOf":[{"type":"object","properties":{"products":{"type":"array","items":{"anyOf":[{"title":"orderCustomProduct_Post","type":"object","description":"At least one of these fields `name`, `name_customer`, or `name_merchant` must be provided with non-empty value.\nNote: `name` and `name_customer` always hold the same value, updating either `name` or `name_customer` will change value for both of those fields.\nIf both fields `name` and `name_customer` are present, they must have the same value.\nEmpty strings `''` and `null` are invalid for `xxx`, `xxx_customer`, and `xxx_merchant`.\nIf both fields `name` and `name_customer` are omitted, they will be populated by the `name_merchant` value.\nIf field `name_merchant` is omitted it will be populated by the value of `name` (or `name_customer`).","properties":{"name":{"type":"string","example":"Fog Linen Chambray Towel - Beige Stripe","description":"Alias for name_customer. The product name that is shown to customer in storefront."},"name_customer":{"type":"string","example":"Fog Linen Chambray Towel - Beige Stripe","description":"The product name that is shown to customer in storefront."},"name_merchant":{"type":"string","example":"Towel Type 1","description":"The product name that is shown to merchant in control panel."},"quantity":{"type":"number"},"price_inc_tax":{"type":"number"},"price_ex_tax":{"type":"number"},"upc":{"type":"string"},"sku":{"type":"string"}},"required":["name","quantity","price_inc_tax","price_ex_tax"]},{"title":"orderCatalogProduct_Post","description":"Note:\n- `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.\n- If both fields `xxx` and `xxx_customer` are present, they must have same value.\n- Empty strings `''` and `null` are invalid for `xxx` and `xxx_customer, and `xxx_merchant`.\n- `xxx`, `xxx_customer`, and `xxx_merchant` default to the value from `catalog` if not supplied in the request.\n","type":"object","properties":{"product_id":{"type":"integer"},"name":{"type":"string","description":"Alias for `name_customer`. The product name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.","example":"Fog Linen Chambray Towel - Beige Stripe","minLength":1},"name_customer":{"type":"string","example":"Fog Linen Chambray Towel - Beige Stripe","description":"The product name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.","minLength":1},"name_merchant":{"type":"string","example":"Towel Type 1","description":"The product name that is shown to merchant in control panel."},"product_options":{"type":"array","description":"List of product variant options and modifiers. `product_options` are required when adding a product with variants and not specifying the `variant_id`, or when products have mandatory modifiers.","items":{"type":"object","properties":{"id":{"type":"integer"},"value":{"type":"string","description":"Depending on the option type, value can be one of the following:\n- The variant option value id or the modifier value id for modifier types with a list of defined values, such as drop down or checkbox modifiers.\n- The modifier value for modifier types without a list of defined values, such as text field or date field modifiers.\n\nNotes:\n- The following option types are not currently supported via api:\n  - File upload\n  - Pick list\n- For date modifiers use either the `YYYY-MM-DDThh:mm:ss±hh:mm` or the `YYYY-MM-DD` ISO-8601 formats. The date field modifier values are saved and retuned as timestamps. For values entered using the YYYY-MM-DD format, the store timezone is used when creating the timestamp.\n- For multi-line text field modifiers, use the `\\n` characters for separating the lines."},"display_name":{"type":"string","example":"couleur","description":"Alias for display_name_customer. The product option name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.","minLength":1},"display_name_customer":{"type":"string","description":"The product option name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.","example":"couleur","minLength":1},"display_name_merchant":{"type":"string","example":"color","description":"The product option name that is shown to merchant in Control Panel."},"display_value":{"type":"string","example":"bleu","description":"Alias for display_value_customer. The product option value that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.","minLength":1},"display_value_merchant":{"type":"string","example":"blue","description":"The product option value that is shown to merchant in Control Panel.","minLength":1},"display_value_customer":{"type":"string","example":"bleu","description":"The product option value that is shown to customer in storefront.`xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.","minLength":1}}}},"quantity":{"type":"number"},"price_inc_tax":{"type":"number"},"price_ex_tax":{"type":"number"},"upc":{"type":"string"},"variant_id":{"type":"integer","description":"\"\""},"wrapping_name":{"type":"string"},"wrapping_message":{"type":"string"},"wrapping_cost_ex_tax":{"type":"number"},"wrapping_cost_inc_tax":{"type":"number"}}}]}},"shipping_addresses":{"type":"array","items":{"type":"object","title":"shippingAddress_Base","description":"Shipping Address properties common to all requests and responses.","properties":{"first_name":{"type":"string","example":"Jane"},"last_name":{"type":"string","example":"Doe"},"company":{"type":"string"},"street_1":{"type":"string","example":"123 Main Street","description":"Street address (first line)."},"street_2":{"type":"string","description":"Street address (second line)."},"city":{"type":"string","example":"Austin"},"state":{"type":"string","example":"Texas"},"zip":{"type":"string","example":"12345","description":"Zip or postal code, as a string."},"country":{"type":"string","example":"United States"},"country_iso2":{"type":"string","example":"US","description":"2-letter ISO Alpha-2 code for the country."},"phone":{"type":"string","description":"Recipient's telephone number."},"email":{"type":"string","example":"janedoe@example.com","description":"Recipient's email address. "},"shipping_method":{"type":"string","description":"Text code identifying the BigCommerce shipping module selected by the customer.","example":"Free Shipping"}}}}}},{"title":"order_Shared","description":"Order properties used in `PUT` and `POST` requests and responses.","type":"object","properties":{"base_handling_cost":{"description":"The value of the base handling cost. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"base_shipping_cost":{"description":"The value of the base shipping cost. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"base_wrapping_cost":{"description":"The value of the base wrapping cost. (Float, Float-As-String, Integer)","example":"0.0000","oneOf":[{"type":"string"},{"type":"number"}]},"billing_address":{"allOf":[{"type":"object","title":"billingAddress_Base","properties":{"first_name":{"type":"string","example":"Jane"},"last_name":{"type":"string","example":"Doe"},"company":{"type":"string"},"street_1":{"type":"string","example":"123 Main Street"},"street_2":{"type":"string"},"city":{"type":"string","example":"Austin"},"state":{"type":"string","example":"TX"},"zip":{"type":"string","example":"12345","description":"The billing address must include the zip code. The zip code must be two or more characters."},"country":{"type":"string","example":"United States"},"country_iso2":{"type":"string","example":"US"},"phone":{"type":"string"},"email":{"type":"string","example":"janedoe@example.com"}},"required":["zip"]},{"type":"object","properties":{"form_fields":{"type":"array","items":{"title":"formFields","type":"object","readOnly":true,"description":"Read-Only. If you have required address form fields they will need to be set as optional before creating an order via API.","properties":{"name":{"description":"Read-Only. If you have required address form fields they will need to be set as optional before creating an order via API.","readOnly":true,"type":"string","example":"License Id"},"value":{"description":"Read-Only. If you have required address form fields they will need to be set as optional before creating an order via API.","readOnly":true,"type":"string","example":"123BAF"}}}}}}],"title":"billingAddress_Full","description":"Required to create an order."},"channel_id":{"description":"Shows where the order originated. The channel_id will default to 1.","example":1,"type":"integer"},"customer_id":{"type":"number"},"customer_message":{"description":"Message that the customer entered (number, optional) -o the `Order Comments` box during checkout.","example":"Thank you","type":"string"},"date_created":{"description":"The date the order was created, formatted in the RFC-2822 standard. You set this attribute on Order creation (POST) to support the migration of historical orders. If you do not provide a value, then it will default to the current date/time. e.g., `Tue, 20 Nov 2012 00:00:00 +0000`","type":"string"},"default_currency_code":{"description":"The currency code of the transactional currency the shopper pays in; writeable when multi-currency is enabled.","type":"string"},"discount_amount":{"description":"Amount of discount for this transaction. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"ebay_order_id":{"description":"If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.","example":"0","type":"string"},"external_id":{"description":"ID of the order in another system. For example, the Amazon Order ID if this is an Amazon order.This field can be updated in a /POST, but using a /PUT to update the order will return a 400 error. The field 'external_id' cannot be written to. Please remove it from your request before trying again. It can not be overwritten once set.","example":null,"oneOf":[{"type":"string"},{"type":null}]},"external_source":{"description":"This value identifies an external system that generated the order and submitted it to BigCommerce via the Orders API.\n* When supplying the value, we recommend combining the type of system and vendor, e.g., ERP (Acumatica) or POS (Square).\n* If you are migrating historical orders processed on another eCommerce platform to BigCommerce, supply the following code as the value: M-MIG. This code will exclude historical orders from the store’s GMV/order count, which factors into pricing.\n* If you do not provide a value, then it will default to null.","example":"null","oneOf":[{"type":"string"},{"type":null}]},"geoip_country":{"description":"The full name of the country where the customer made the purchase, based on the IP.","example":"United States","type":"string"},"geoip_country_iso2":{"description":"The country where the customer made the purchase, in ISO2 format, based on the IP.","example":"US","type":"string"},"handling_cost_ex_tax":{"description":"The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"handling_cost_inc_tax":{"description":"The value of the handling cost, including tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"ip_address":{"type":"string","description":"IPv4 Address of the customer, if known.\n\nNote: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address` value will reset the `ip_address_v6` value and vice versa.","example":"12.345.678.910","maxLength":30},"ip_address_v6":{"type":"string","description":"IPv6 Address of the customer, if known.\n\nNote: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address_v6` value will reset the `ip_address` value and vice versa.","example":"2001:db8:3333:4444:5555:6666:7777:8888","maxLength":39},"is_deleted":{"description":"Indicates whether the order was deleted (archived). Set to to true, to archive an order.","example":false,"type":"boolean"},"items_shipped":{"description":"The number of items that have been shipped.","example":0,"type":"number"},"items_total":{"description":"The total number of items in the order.","example":1,"type":"number"},"order_is_digital":{"description":"Whether this is an order for digital products.","example":false,"type":"boolean"},"payment_method":{"description":"The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `cash`, `Test Payment Gateway`, etc.","enum":["Credit Card","Cash","Test Payment Gateway","Manual"],"type":"string"},"payment_provider_id":{"description":"The external Transaction ID/Payment ID within this order's payment provider (if a payment provider was used).","example":"","type":["string","number"]},"refunded_amount":{"description":"The amount refunded from this transaction. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"shipping_cost_ex_tax":{"description":"The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"shipping_cost_inc_tax":{"description":"The value of shipping cost, including tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"staff_notes":{"description":"Any additional notes for staff.","example":"Send Saturday","type":"string"},"status_id":{"description":"The status ID of the order.","type":"integer"},"subtotal_ex_tax":{"description":"Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)","example":"225.0000","type":"string"},"subtotal_inc_tax":{"description":"Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)","example":"225.0000","type":"string"},"tax_provider_id":{"description":"BasicTaxProvider - Tax is set to manual.\n\nAvaTaxProvider - This is for when the tax provider has been set to automatic and the order was NOT created by the API. Used for Avalara.\n\n\"\" (blank) - When the tax provider is unknown. This includes legacy orders and orders previously created via API.\nThis can be set when creating an order using a POST.\n","enum":["BasicTaxProvider","AvaTaxProvider",""],"type":"string"},"customer_locale":{"type":"string","example":"en","description":"The customer's locale"},"total_ex_tax":{"description":"Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)","example":"225.0000","type":"string"},"total_inc_tax":{"description":"Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer)","example":"225.0000","type":"string"},"wrapping_cost_ex_tax":{"description":"The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"wrapping_cost_inc_tax":{"description":"The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"}}}],"$schema":"http://json-schema.org/draft-04/schema#"},"config":{"hideRoot":false}}]}]},"config":{"classNames":["ApiOperation--requestBody"]}},{"type":"text","data":"## Responses","config":{"classNames":["ApiOperation--responsesTitle mt-10 -mb-14"]}},{"type":"tabs","data":{"children":[{"title":"200","blocks":[{"type":"text","data":"Order Response."},{"type":"accordion","data":{"children":[{"title":"1 Example","blocks":[{"type":"tabs","data":{"children":[{"title":"response","blocks":[{"type":"code","data":"{\n  \"id\": 218,\n  \"customer_id\": 11,\n  \"date_created\": \"Tue, 05 Mar 2019 21:40:11 +0000\",\n  \"date_modified\": \"Mon, 11 Mar 2019 15:17:25 +0000\",\n  \"date_shipped\": \"\",\n  \"status_id\": 7,\n  \"status\": \"Awaiting Payment\",\n  \"subtotal_ex_tax\": \"62.6793\",\n  \"subtotal_inc_tax\": \"67.8400\",\n  \"subtotal_tax\": \"4.4000\",\n  \"base_shipping_cost\": \"12.0000\",\n  \"shipping_cost_ex_tax\": \"11.0900\",\n  \"shipping_cost_inc_tax\": \"12.0000\",\n  \"shipping_cost_tax\": \"0.9100\",\n  \"shipping_cost_tax_class_id\": 0,\n  \"base_handling_cost\": \"0.0000\",\n  \"handling_cost_ex_tax\": \"0.0000\",\n  \"handling_cost_inc_tax\": \"0.0000\",\n  \"handling_cost_tax\": \"0.0000\",\n  \"handling_cost_tax_class_id\": 0,\n  \"base_wrapping_cost\": \"0.0000\",\n  \"wrapping_cost_ex_tax\": \"0.0000\",\n  \"wrapping_cost_inc_tax\": \"0.0000\",\n  \"wrapping_cost_tax\": \"0.0000\",\n  \"wrapping_cost_tax_class_id\": 0,\n  \"total_ex_tax\": \"64.5300\",\n  \"total_inc_tax\": \"69.8400\",\n  \"total_tax\": \"5.3100\",\n  \"items_total\": 4,\n  \"items_shipped\": 0,\n  \"payment_method\": \"Cash\",\n  \"payment_provider_id\": \"\",\n  \"payment_status\": \"authorized\",\n  \"refunded_amount\": \"0.0000\",\n  \"order_is_digital\": false,\n  \"store_credit_amount\": \"0.0000\",\n  \"gift_certificate_amount\": \"0.0000\",\n  \"ip_address\": \"\",\n  \"ip_address_v6\": \"\",\n  \"geoip_country\": \"\",\n  \"geoip_country_iso2\": \"\",\n  \"currency_id\": 1,\n  \"currency_code\": \"USD\",\n  \"currency_exchange_rate\": \"1.0000000000\",\n  \"default_currency_id\": 1,\n  \"default_currency_code\": \"USD\",\n  \"staff_notes\": \"\",\n  \"customer_message\": \"\",\n  \"discount_amount\": \"5.0000\",\n  \"coupon_discount\": \"5.0000\",\n  \"shipping_address_count\": 1,\n  \"is_deleted\": false,\n  \"ebay_order_id\": \"0\",\n  \"cart_id\": \"7e48f7ef-2e88-4817-aea4-b0ed01490114\",\n  \"billing_address\": {\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Doe\",\n    \"company\": \"\",\n    \"street_1\": \"555 East Street\",\n    \"street_2\": \"\",\n    \"city\": \"Austin\",\n    \"state\": \"Texas\",\n    \"zip\": 78108,\n    \"country\": \"United States\",\n    \"country_iso2\": \"US\",\n    \"phone\": 1234567890,\n    \"email\": \"janedoe@example.com\",\n    \"form_fields\": [\n      {\n        \"name\": \"Delivery Instructions\",\n        \"value\": \"Leave in backyard\"\n      }\n    ]\n  },\n  \"is_email_opt_in\": false,\n  \"credit_card_type\": null,\n  \"order_source\": \"external\",\n  \"channel_id\": 1,\n  \"external_source\": null,\n  \"products\": {\n    \"url\": \"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2/orders/218/products\",\n    \"resource\": \"/orders/218/products\"\n  },\n  \"shipping_addresses\": {\n    \"url\": \"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2/orders/218/shippingaddresses\",\n    \"resource\": \"/orders/218/shippingaddresses\"\n  },\n  \"coupons\": {\n    \"url\": \"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2/orders/218/coupons\",\n    \"resource\": \"/orders/218/coupons\"\n  },\n  \"external_id\": null,\n  \"external_merchant_id\": null,\n  \"tax_provider_id\": \"BasicTaxProvider\",\n  \"store_default_currency_code\": \"\",\n  \"store_default_to_transactional_exchange_rate\": \"1.0000000000\",\n  \"custom_status\": \"Awaiting Payment\",\n  \"customer_locale\": \"en\"\n}"}]}]}}]},{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"title":"order_Resp","description":"Order object returned in responses.","allOf":[{"title":"order_RespOnly","type":"object","description":"Properties that are only for order response bodies.","properties":{"id":{"type":"integer","description":"Read-only. The ID of the order.","example":118},"date_modified":{"type":"string","description":"A read-only value representing the last modification of the order. Do not attempt to modify or set this value in a POST or PUT operation. RFC-2822"},"date_shipped":{"type":"string","description":"A read-only value representing the date of shipment. Do not attempt to modify or set this value in a POST or PUT operation. RFC-2822"},"cart_id":{"description":"The cart ID from which this order originated, if applicable. Correlates with the Cart API. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.","example":"a8458391-ef68-4fe5-9ec1-442e6a767364","type":"string"},"status":{"type":"string","description":"The status will include one of the (string, optiona) - values defined under Order Statuses. This value is read-only. Do not attempt to modify or set this value in a POST or PUT operation.","example":"Awaiting Fulfillment"},"subtotal_tax":{"description":"A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"shipping_cost_tax":{"description":"A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"shipping_cost_tax_class_id":{"description":"Shipping-cost tax class. A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)","example":2,"type":"integer"},"handling_cost_tax":{"description":"A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"handling_cost_tax_class_id":{"description":"A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)","example":2,"type":"integer"},"wrapping_cost_tax":{"description":"A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"wrapping_cost_tax_class_id":{"description":"A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)","example":3,"type":"integer"},"payment_status":{"type":"string","description":"A read-only value. Do not attempt to set or modify this value in a POST or PUT operation.","enum":["authorized","captured","capture pending","declined","held for review","paid","partially refunded","pending","refunded","void","void pending"]},"store_credit_amount":{"description":"Represents the store credit that the shopper has redeemed on this individual order. This is a read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"gift_certificate_amount":{"description":"A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"currency_id":{"description":"The display currency ID. May be different from transactional currency. A read-only value. Do not pass in a POST or PUT.","example":1,"type":"integer"},"currency_code":{"description":"The currency code of the display currency used to present prices on the storefront. A read-only value. Do not pass in a POST or PUT.","example":"USD","type":"string"},"currency_exchange_rate":{"description":"The exchange rate between the store's default currency and the display currency. A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)","example":"1.0000000000","type":"string"},"default_currency_id":{"description":"The transactional currency ID. A read-only value. Do not pass in a POST or PUT.","example":1,"type":"integer"},"coupon_discount":{"description":"A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)","example":"5.0000","type":"string"},"shipping_address_count":{"type":"number","description":"The number of shipping addresses associated with this transaction. A read-only value. Do not pass in a POST or PUT."},"is_email_opt_in":{"description":"Indicates whether the shopper has selected an opt-in check box (on the checkout page) to receive emails. A read-only value. Do not pass in a POST or PUT.","example":false,"type":"boolean"},"order_source":{"description":"Orders submitted via the store's website will include a `www` value. Orders submitted via the API will be set to `external`. A read-only value. Do not pass in a POST or PUT.","example":"www","type":"string"},"products":{"title":"products_Resource","type":"object","readOnly":true,"properties":{"url":{"description":"","readOnly":true,"example":"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2/orders/129/products","type":"string"},"resource":{"description":"","readOnly":true,"example":"/orders/129/products","type":"string"}}},"shipping_addresses":{"title":"shippingAddress_Resource","type":"object","readOnly":true,"properties":{"url":{"description":"URL of the shipping address for api requests","readOnly":true,"example":"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2/orders/129/shippingaddresses","type":"string"},"resource":{"description":"","readOnly":true,"example":"/orders/129/shippingaddresses","type":"string"}}},"coupons":{"title":"coupons_Resource","type":"object","readOnly":true,"properties":{"url":{"description":"URL of the coupons for api requests","readOnly":true,"example":"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2/orders/129/coupons","type":"string"},"resource":{"description":"resource of the coupons","readOnly":true,"example":"/orders/129/coupons","type":"string"}}},"status_id":{"type":"integer","example":7,"description":"The staus ID of the order."}}},{"title":"order_Shared","description":"Order properties used in `PUT` and `POST` requests and responses.","type":"object","properties":{"base_handling_cost":{"description":"The value of the base handling cost. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"base_shipping_cost":{"description":"The value of the base shipping cost. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"base_wrapping_cost":{"description":"The value of the base wrapping cost. (Float, Float-As-String, Integer)","example":"0.0000","oneOf":[{"type":"string"},{"type":"number"}]},"billing_address":{"allOf":[{"type":"object","title":"billingAddress_Base","properties":{"first_name":{"type":"string","example":"Jane"},"last_name":{"type":"string","example":"Doe"},"company":{"type":"string"},"street_1":{"type":"string","example":"123 Main Street"},"street_2":{"type":"string"},"city":{"type":"string","example":"Austin"},"state":{"type":"string","example":"TX"},"zip":{"type":"string","example":"12345","description":"The billing address must include the zip code. The zip code must be two or more characters."},"country":{"type":"string","example":"United States"},"country_iso2":{"type":"string","example":"US"},"phone":{"type":"string"},"email":{"type":"string","example":"janedoe@example.com"}},"required":["zip"]},{"type":"object","properties":{"form_fields":{"type":"array","items":{"title":"formFields","type":"object","readOnly":true,"description":"Read-Only. If you have required address form fields they will need to be set as optional before creating an order via API.","properties":{"name":{"description":"Read-Only. If you have required address form fields they will need to be set as optional before creating an order via API.","readOnly":true,"type":"string","example":"License Id"},"value":{"description":"Read-Only. If you have required address form fields they will need to be set as optional before creating an order via API.","readOnly":true,"type":"string","example":"123BAF"}}}}}}],"title":"billingAddress_Full","description":"Required to create an order."},"channel_id":{"description":"Shows where the order originated. The channel_id will default to 1.","example":1,"type":"integer"},"customer_id":{"type":"number"},"customer_message":{"description":"Message that the customer entered (number, optional) -o the `Order Comments` box during checkout.","example":"Thank you","type":"string"},"date_created":{"description":"The date the order was created, formatted in the RFC-2822 standard. You set this attribute on Order creation (POST) to support the migration of historical orders. If you do not provide a value, then it will default to the current date/time. e.g., `Tue, 20 Nov 2012 00:00:00 +0000`","type":"string"},"default_currency_code":{"description":"The currency code of the transactional currency the shopper pays in; writeable when multi-currency is enabled.","type":"string"},"discount_amount":{"description":"Amount of discount for this transaction. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"ebay_order_id":{"description":"If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.","example":"0","type":"string"},"external_id":{"description":"ID of the order in another system. For example, the Amazon Order ID if this is an Amazon order.This field can be updated in a /POST, but using a /PUT to update the order will return a 400 error. The field 'external_id' cannot be written to. Please remove it from your request before trying again. It can not be overwritten once set.","example":null,"oneOf":[{"type":"string"},{"type":null}]},"external_source":{"description":"This value identifies an external system that generated the order and submitted it to BigCommerce via the Orders API.\n* When supplying the value, we recommend combining the type of system and vendor, e.g., ERP (Acumatica) or POS (Square).\n* If you are migrating historical orders processed on another eCommerce platform to BigCommerce, supply the following code as the value: M-MIG. This code will exclude historical orders from the store’s GMV/order count, which factors into pricing.\n* If you do not provide a value, then it will default to null.","example":"null","oneOf":[{"type":"string"},{"type":null}]},"geoip_country":{"description":"The full name of the country where the customer made the purchase, based on the IP.","example":"United States","type":"string"},"geoip_country_iso2":{"description":"The country where the customer made the purchase, in ISO2 format, based on the IP.","example":"US","type":"string"},"handling_cost_ex_tax":{"description":"The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"handling_cost_inc_tax":{"description":"The value of the handling cost, including tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"ip_address":{"type":"string","description":"IPv4 Address of the customer, if known.\n\nNote: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address` value will reset the `ip_address_v6` value and vice versa.","example":"12.345.678.910","maxLength":30},"ip_address_v6":{"type":"string","description":"IPv6 Address of the customer, if known.\n\nNote: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address_v6` value will reset the `ip_address` value and vice versa.","example":"2001:db8:3333:4444:5555:6666:7777:8888","maxLength":39},"is_deleted":{"description":"Indicates whether the order was deleted (archived). Set to to true, to archive an order.","example":false,"type":"boolean"},"items_shipped":{"description":"The number of items that have been shipped.","example":0,"type":"number"},"items_total":{"description":"The total number of items in the order.","example":1,"type":"number"},"order_is_digital":{"description":"Whether this is an order for digital products.","example":false,"type":"boolean"},"payment_method":{"description":"The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `cash`, `Test Payment Gateway`, etc.","enum":["Credit Card","Cash","Test Payment Gateway","Manual"],"type":"string"},"payment_provider_id":{"description":"The external Transaction ID/Payment ID within this order's payment provider (if a payment provider was used).","example":"","type":["string","number"]},"refunded_amount":{"description":"The amount refunded from this transaction. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"shipping_cost_ex_tax":{"description":"The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"shipping_cost_inc_tax":{"description":"The value of shipping cost, including tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"staff_notes":{"description":"Any additional notes for staff.","example":"Send Saturday","type":"string"},"status_id":{"description":"The status ID of the order.","type":"integer"},"subtotal_ex_tax":{"description":"Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)","example":"225.0000","type":"string"},"subtotal_inc_tax":{"description":"Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)","example":"225.0000","type":"string"},"tax_provider_id":{"description":"BasicTaxProvider - Tax is set to manual.\n\nAvaTaxProvider - This is for when the tax provider has been set to automatic and the order was NOT created by the API. Used for Avalara.\n\n\"\" (blank) - When the tax provider is unknown. This includes legacy orders and orders previously created via API.\nThis can be set when creating an order using a POST.\n","enum":["BasicTaxProvider","AvaTaxProvider",""],"type":"string"},"customer_locale":{"type":"string","example":"en","description":"The customer's locale"},"total_ex_tax":{"description":"Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)","example":"225.0000","type":"string"},"total_inc_tax":{"description":"Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer)","example":"225.0000","type":"string"},"wrapping_cost_ex_tax":{"description":"The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"},"wrapping_cost_inc_tax":{"description":"The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)","example":"0.0000","type":"string"}}}],"$schema":"http://json-schema.org/draft-04/schema#"}}]}]}}]}]},"config":{"classNames":["ApiOperation--responses"]}},{"type":"text","data":"## Send a Test Request","config":{"classNames":["ApiOperation--tryItOutTitle mt-10 -mb-10"]}},{"type":"http","data":{"method":"post","url":"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2/orders","headers":{"Accept":"application/json","Content-Type":"application/json","X-Auth-Token":"{$$.env.X-Auth-Token}"},"body":"{\n  \"billing_address\": {\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Doe\",\n    \"street_1\": \"123 Main Street\",\n    \"city\": \"Austin\",\n    \"state\": \"Texas\",\n    \"zip\": \"78751\",\n    \"country\": \"United States\",\n    \"country_iso2\": \"US\",\n    \"email\": \"janedoe@email.com\"\n  },\n  \"products\": [\n    {\n      \"name\": \"BigCommerce Coffee Mug\",\n      \"quantity\": 1,\n      \"price_inc_tax\": 50,\n      \"price_ex_tax\": 45\n    }\n  ]\n}"},"config":{"canvas":false,"paddedInner":false,"classNames":["ApiOperation--tryItOut"]}}],"children":[]}}}}
