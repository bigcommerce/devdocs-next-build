{"path":"api-reference/providers/tax-provider-api/models/request-document","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"jyzzw","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Reference","to":"/api-reference"},{"content":"Provider APIs","to":"/api-reference/providers"},{"content":"Tax Provider API","to":"/api-reference/providers/tax-provider-api"},{"content":"Models","to":"/api-reference/providers/tax-provider-api/models"},{"content":"DocumentRequest","to":"/api-reference/providers/tax-provider-api/models/request-document"}],"page":{"meta":{"title":"DocumentRequest - Models - Tax Provider API - Provider APIs - API Reference","url":"/api-reference/providers/tax-provider-api/models/request-document","description":"Each DocumentRequest represents an order or part of an order of items fulfilled from a single origin address to a single destination address. In additio..."},"title":"DocumentRequest","parsedPath":["pages","/api-reference","data","children",3,"data","children",1,"data","children",1,"data","children",3],"rootPagePath":"/api-reference","path":"/api-reference/providers/tax-provider-api/models/request-document","isSubpage":true,"route":{"path":"/request-document"},"data":{"blocks":[{"type":"text","data":"Each **DocumentRequest** represents an order or part of an order of items fulfilled from a single origin address to a single destination address. In addition to shipping and billing details, it contains an `items` array of one or more **ItemRequest** objects, which represent the shipment’s tax-relevant contents. Multi-address orders, in which items ship to or from multiple addresses, require at least one **DocumentRequest** per combination of sender-recipient addresses. These are similar to \"consignments\" or \"shipments\" in other BigCommerce APIs.","header":{"title":"DocumentRequest"}},{"type":"jsonSchema","data":{"type":"object","properties":{"id":{"type":"string","description":"A unique identifier for this consignment. This value can be expected to be unique within an individual quote request but may be duplicated within subsequent quote requests. A digital consignment will see a prefix **DigitalDelivery_** followed by the Order ID."},"billing_address":{"type":"object","description":"Requests may have partial Address data. For example, the BigCommerce Cart page has the \"Estimate Shipping & Tax\" feature which is only expected to supply Country, Region and Postal Code.","properties":{"line1":{"type":"string","description":"Primary street address."},"line2":{"type":"string","description":"Apartment, unit, suite, building, floor, etc."},"city":{"type":"string","description":"City, suburb, township, etc.","example":"Sydney"},"region_name":{"type":"string","description":"State, province, territory, etc.","example":"New South Wales"},"region_code":{"type":"string","description":"If available, the short code/acronym for the region. For example, \"CA\" for \"California\" or \"NSW\" for \"New South Wales\".","example":"NSW"},"country_name":{"type":"string","example":"Australia","description":"The human-readable country name."},"country_code":{"type":"string","description":"ISO 3166-1 alpha-2 format country code.","example":"AU"},"postal_code":{"type":"string","description":"Postcode, ZIP, etc. Optional.","example":"2007"},"company_name":{"type":"string","description":"If this is a commercial address, the associated company’s name.","deprecated":true},"type":{"type":"string","enum":["RESIDENTIAL","COMMERCIAL"]}}},"destination_address":{"type":"object","description":"Requests may have partial Address data. For example, the BigCommerce Cart page has the \"Estimate Shipping & Tax\" feature which is only expected to supply Country, Region and Postal Code.","properties":{"line1":{"type":"string","description":"Primary street address."},"line2":{"type":"string","description":"Apartment, unit, suite, building, floor, etc."},"city":{"type":"string","description":"City, suburb, township, etc.","example":"Sydney"},"region_name":{"type":"string","description":"State, province, territory, etc.","example":"New South Wales"},"region_code":{"type":"string","description":"If available, the short code/acronym for the region. For example, \"CA\" for \"California\" or \"NSW\" for \"New South Wales\".","example":"NSW"},"country_name":{"type":"string","example":"Australia","description":"The human-readable country name."},"country_code":{"type":"string","description":"ISO 3166-1 alpha-2 format country code.","example":"AU"},"postal_code":{"type":"string","description":"Postcode, ZIP, etc. Optional.","example":"2007"},"company_name":{"type":"string","description":"If this is a commercial address, the associated company’s name.","deprecated":true},"type":{"type":"string","enum":["RESIDENTIAL","COMMERCIAL"]}}},"origin_address":{"type":"object","description":"Requests may have partial Address data. For example, the BigCommerce Cart page has the \"Estimate Shipping & Tax\" feature which is only expected to supply Country, Region and Postal Code.","properties":{"line1":{"type":"string","description":"Primary street address."},"line2":{"type":"string","description":"Apartment, unit, suite, building, floor, etc."},"city":{"type":"string","description":"City, suburb, township, etc.","example":"Sydney"},"region_name":{"type":"string","description":"State, province, territory, etc.","example":"New South Wales"},"region_code":{"type":"string","description":"If available, the short code/acronym for the region. For example, \"CA\" for \"California\" or \"NSW\" for \"New South Wales\".","example":"NSW"},"country_name":{"type":"string","example":"Australia","description":"The human-readable country name."},"country_code":{"type":"string","description":"ISO 3166-1 alpha-2 format country code.","example":"AU"},"postal_code":{"type":"string","description":"Postcode, ZIP, etc. Optional.","example":"2007"},"company_name":{"type":"string","description":"If this is a commercial address, the associated company’s name.","deprecated":true},"type":{"type":"string","enum":["RESIDENTIAL","COMMERCIAL"]}}},"shipping":{"type":"object","description":"An **ItemRequest** represents required information relating to completing tax calculations for a specific line item.","properties":{"id":{"type":"string","description":"A unique identifier for this item used to map responses back to the corresponding item on the order."},"item_code":{"type":"string","description":"The SKU/UPC of the item, if available."},"name":{"type":"string","description":"A display name for this item."},"price":{"type":"object","description":"The final sale price (after discounts, bulk pricing, price lists, etc.) prior to having taxes calculated. If the merchant lists prices inclusive of tax, this price will already be tax inclusive, and so the tax provider will instead calculate the amount of tax that was already included in this price. For multiple quantities, this price includes that multiplication.","properties":{"amount":{"type":"number","description":"Note: This amount will be **negative** for order-level refunds and may be **zero** for line-item refunds.","format":"double"},"tax_inclusive":{"type":"boolean","description":"Note: **Tax Inclusive** and **Tax Exclusive** prices cannot be added together.","default":false}},"required":["amount","tax_inclusive"]},"quantity":{"type":"integer","minimum":0},"tax_class":{"type":"object","properties":{"code":{"type":"string","description":"The provider-specific tax code for this item. Items can be classified with tax codes relevant to each Tax Provider, configured by the merchant, and assigned to their products within BigCommerce. A tax code is intended to apply to multiple products. This code should match the tax codes provided by the third-party integration."},"class_id":{"type":"string","description":"The ID of the tax class defined in the merchant’s BigCommerce store. May have a UUID value."},"name":{"type":"string","description":"The human-readable name of this tax class in the merchant’s BigCommerce store."}},"required":["code","class_id","name"]},"tax_exempt":{"type":"boolean","description":"Flag whether or not this item is always tax-exempt. For example, gift certificate purchases and order-level refunds are tax-exempt. Tax-exempt items are included in the request for auditing purposes.","default":false},"type":{"type":"string","description":"The type of line item this request represents. This will depend on the item’s position in the request hierarchy. For example, the document request contains a collection of items (which may or may not also have wrapping attached). In addition, each document request also has a shipping line item and handling line item.\n\nThe type refund is used when the tax estimate request is for an order-level refund.","enum":["item","wrapping","handling","shipping","refund"]},"wrapping":{"$ref":"#/components/schemas/request-document/properties/shipping"}},"required":["id","price","quantity","type"],"title":"ItemRequest"},"handling":{"type":"object","description":"An **ItemRequest** represents required information relating to completing tax calculations for a specific line item.","properties":{"id":{"type":"string","description":"A unique identifier for this item used to map responses back to the corresponding item on the order."},"item_code":{"type":"string","description":"The SKU/UPC of the item, if available."},"name":{"type":"string","description":"A display name for this item."},"price":{"type":"object","description":"The final sale price (after discounts, bulk pricing, price lists, etc.) prior to having taxes calculated. If the merchant lists prices inclusive of tax, this price will already be tax inclusive, and so the tax provider will instead calculate the amount of tax that was already included in this price. For multiple quantities, this price includes that multiplication.","properties":{"amount":{"type":"number","description":"Note: This amount will be **negative** for order-level refunds and may be **zero** for line-item refunds.","format":"double"},"tax_inclusive":{"type":"boolean","description":"Note: **Tax Inclusive** and **Tax Exclusive** prices cannot be added together.","default":false}},"required":["amount","tax_inclusive"]},"quantity":{"type":"integer","minimum":0},"tax_class":{"type":"object","properties":{"code":{"type":"string","description":"The provider-specific tax code for this item. Items can be classified with tax codes relevant to each Tax Provider, configured by the merchant, and assigned to their products within BigCommerce. A tax code is intended to apply to multiple products. This code should match the tax codes provided by the third-party integration."},"class_id":{"type":"string","description":"The ID of the tax class defined in the merchant’s BigCommerce store. May have a UUID value."},"name":{"type":"string","description":"The human-readable name of this tax class in the merchant’s BigCommerce store."}},"required":["code","class_id","name"]},"tax_exempt":{"type":"boolean","description":"Flag whether or not this item is always tax-exempt. For example, gift certificate purchases and order-level refunds are tax-exempt. Tax-exempt items are included in the request for auditing purposes.","default":false},"type":{"type":"string","description":"The type of line item this request represents. This will depend on the item’s position in the request hierarchy. For example, the document request contains a collection of items (which may or may not also have wrapping attached). In addition, each document request also has a shipping line item and handling line item.\n\nThe type refund is used when the tax estimate request is for an order-level refund.","enum":["item","wrapping","handling","shipping","refund"]},"wrapping":{"$ref":"#/components/schemas/request-document/properties/handling"}},"required":["id","price","quantity","type"],"title":"ItemRequest"},"items":{"type":"array","description":"Collection of one or more items contained within this consignment that need to be assessed for tax liabilities.","items":{"type":"object","description":"An **ItemRequest** represents required information relating to completing tax calculations for a specific line item.","properties":{"id":{"type":"string","description":"A unique identifier for this item used to map responses back to the corresponding item on the order."},"item_code":{"type":"string","description":"The SKU/UPC of the item, if available."},"name":{"type":"string","description":"A display name for this item."},"price":{"type":"object","description":"The final sale price (after discounts, bulk pricing, price lists, etc.) prior to having taxes calculated. If the merchant lists prices inclusive of tax, this price will already be tax inclusive, and so the tax provider will instead calculate the amount of tax that was already included in this price. For multiple quantities, this price includes that multiplication.","properties":{"amount":{"type":"number","description":"Note: This amount will be **negative** for order-level refunds and may be **zero** for line-item refunds.","format":"double"},"tax_inclusive":{"type":"boolean","description":"Note: **Tax Inclusive** and **Tax Exclusive** prices cannot be added together.","default":false}},"required":["amount","tax_inclusive"]},"quantity":{"type":"integer","minimum":0},"tax_class":{"type":"object","properties":{"code":{"type":"string","description":"The provider-specific tax code for this item. Items can be classified with tax codes relevant to each Tax Provider, configured by the merchant, and assigned to their products within BigCommerce. A tax code is intended to apply to multiple products. This code should match the tax codes provided by the third-party integration."},"class_id":{"type":"string","description":"The ID of the tax class defined in the merchant’s BigCommerce store. May have a UUID value."},"name":{"type":"string","description":"The human-readable name of this tax class in the merchant’s BigCommerce store."}},"required":["code","class_id","name"]},"tax_exempt":{"type":"boolean","description":"Flag whether or not this item is always tax-exempt. For example, gift certificate purchases and order-level refunds are tax-exempt. Tax-exempt items are included in the request for auditing purposes.","default":false},"type":{"type":"string","description":"The type of line item this request represents. This will depend on the item’s position in the request hierarchy. For example, the document request contains a collection of items (which may or may not also have wrapping attached). In addition, each document request also has a shipping line item and handling line item.\n\nThe type refund is used when the tax estimate request is for an order-level refund.","enum":["item","wrapping","handling","shipping","refund"]},"wrapping":{"$ref":"#/components/schemas/request-document/properties/items/items"}},"required":["id","price","quantity","type"],"title":"ItemRequest"}}},"required":["id","destination_address","origin_address","shipping","handling","items"],"title":"DocumentRequest"}}],"children":[]}}}}
