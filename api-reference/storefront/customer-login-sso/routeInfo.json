{"path":"api-reference/storefront/customer-login-sso","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"jyzzw","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Reference","to":"/api-reference"},{"content":"Storefront APIs","to":"/api-reference/storefront"},{"content":"Customer Login SSO","to":"/api-reference/storefront/customer-login-sso"}],"page":{"meta":{"title":"Customer Login SSO - Storefront APIs - API Reference","url":"/api-reference/storefront/customer-login-sso","description":"Customer Login SSO\n\nHost: {$$.env.store_domain}/graphql\n\nProtocols: https\n\nAccepts: application/json\n\nResponds With: application/json\n\nDownload Spec: cu..."},"title":"Customer Login SSO","parsedPath":["pages","/api-reference","data","children",0,"data","children",5],"rootPagePath":"/api-reference","path":"/api-reference/storefront/customer-login-sso","isSubpage":true,"route":{"path":"/customer-login-sso"},"data":{"blocks":[{"type":"text","data":"# Customer Login SSO\n\n* **Host**: {$$.env.store_domain}/graphql\n* **Protocols**: `https`\n* **Accepts**: `application/json`\n* **Responds With**: `application/json`\n\nDownload Spec: [customer_login.json](https://bigcommerce.stoplight.io/api/v1/projects/bigcommerce/api-reference/nodes/reference/customer_login.yml?branch=master&deref=all&format=json)\n\t\t\nCreate a login URL for customer single-signon.\n\n* [Authenticaton](#authentication)\n\t* [OAuth Scopes](#oauth-scopes)\n\t* [Header](#jwt-header)\n\t* [Payload](#jwt-payload)\n\t* [Signature](#jwt-signature)\n\t* [Node.js example](#node-js-example)\n* [Additional information](#additional-information)\n\n## Authentication\n\nTo log in a customer using the Customer Login API, redirect the customer's browser to the following access point URL: \n\n```\nhttps://storedomain.com/login/token/{{TOKEN}}\n```\n\nThe `{{TOKEN}}` parameter is the `JWT` containing the payload data signed by your app's OAuth client secret.\n\nWe recommend writing a script to generate a login token since the `JWT` `iat` (issued at) claim is only valid for 30 seconds. BigCommerce supplies helper methods for generating login tokens in our [API Client Libraries](https://developer.bigcommerce.com/tools-resources).\n\n### OAuth scopes\n\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Customers | read-only | `store_v2_customers_read_only` |\n|  Customers | login | `store_v2_customers_login` |\n\n### JWT Header\n\n```json\n{\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n}\n```\n\n### JWT Payload"},{"type":"tabs","data":{"children":[{"title":"Example","blocks":[{"type":"text","data":"```json\n{\n\t \"iss\": \"{{CLIENT_ID}}\",\n\t \"iat\": \"{{DATE_CREATED}}\",\n\t \"jti\": \"{{UUID}}\",\n\t \"operation\": \"customer_login\",\n\t \"store_hash\": \"{{STORE_HASH}}\",\n\t \"customer_id\": {{CUSTOMER_ID}},\n}\n```"}]},{"title":"Schema","blocks":[{"type":"jsonSchema","data":{"type":"object","title":"Customer Login SSO","properties":{"iss":{"type":"string","description":"Indicates the token’s issuer. This is your application’s client ID, which is obtained during application registration in Developer Portal.","example":"\"1234r5t6y7u8i9o0p\""},"iat":{"type":"integer","description":"Time when the token was generated. This is a numeric value indicating the number of seconds since the [Unix epoch](https://en.wikipedia.org/wiki/Unix_time).","example":1535393113},"jti":{"type":"string","description":"Request ID string that must be unique across all requests made by your app. A UUID or other random string would be an appropriate value. Most libraries contain a method for generating a uuid. For testing a [UUID generator](https://www.uuidgenerator.net/) can be used, but it recommended to use built in libraries.","example":"\"20b7c03e-00da-4d29-91bf-2aa06a57575b\""},"operation":{"type":"string","description":"Must contain the string “customer_login”.","example":"\"customer_login\""},"store_hash":{"type":"string","description":"Store hash identifying the store you are logging into.\n","example":"\"abc123\""},"customer_id":{"type":"integer","description":"ID of the customer you are logging in, as obtained through the Customer API.\n","example":2},"redirect_to":{"type":"string","description":"Optional field containing a relative path for the shopper’s destination after login. Will default to `/account.php`.\n","default":"/account.php"},"request_ip":{"type":"string","description":"**(Optional)** Field containing the expected IP address for the request. If provided, BigCommerce will check that it matches the browser trying to log in. If there is not a match, it will be rejected.\n","example":"\"111.222.333.444\""}}},"config":{"hideRoot":true}}]}]}},{"type":"text","data":"### JWT Signature\n\nTo create the signature, sign the encoded header, the encoded payload, and client_secret using the `HMAC SHA256` algorithm.\n\n```js\nHMACSHA256(\n  base64UrlEncode(header) + \".\" +\n  base64UrlEncode(payload),\n  {{CLIENT_SECRET}}\n)\n```\n\n## Node.js example\n\nCreate `urlGenerator.js` node app and install dependencies.\n\n```shell\nmkdir urlGenerator\n\ncd urlGenerator\n\ntouch urlGenerator.js\n\nnpm init\n\nnpm install jsonwebtoken uuid\n```\n\nPaste the following into `urlGenerator/urlGenerator.js`.\n\n```js\nconst jwt = require('jsonwebtoken');\nconst {v4: uuidv4} = require('uuid');\n\nconst clientId = \"{{CLIENT_ID}}\";\nconst clientSecret = \"{{CLIENT_SECRET}}\";\nconst customerId = \"{{CUSTOMER_ID}}\";\nconst storeHash = \"{{STORE_HASH}}\";\nconst storeUrl = \"{{STORE_URL_ORIGIN}}\";\n\nfunction getLoginUrl(customerId, storeHash, storeUrl, clientId, clientSecret) {\n   const dateCreated = Math. round((new Date()). getTime() / 1000);\n   const  payload = {\n       \"iss\": clientId,\n       \"iat\": dateCreated,\n       \"jti\": uuidv4(),\n       \"operation\": \"customer_login\",\n       \"store_hash\": storeHash,\n       \"customer_id\": customerId,\n   }\n   let token = jwt.sign(payload, clientSecret, {algorithm:'HS256'});\n   return `${storeUrl}/login/token/${token}`;\n};\n \nconst loginUrl = getLoginUrl(customerId, storeHash, storeUrl, clientId, clientSecret);\n\nconsole.log(loginUrl);\n```\n\nReplace `{{CLIENT_ID}}` and other variables with your credentials, then run the app.\n\n```\nnode urlGenerator.js\n```\n\nYou should receive a complete access point URL as an output.\n\n## Additional information\n\n* [Customer Login SSO Generator with Ruby](https://github.com/jordanarldt/ruby-bc-customer-sso-generator/)\n* [Customer Login API](https://developer.bigcommerce.com/api-docs/customers/customer-login-api)\n* [PHP Example](https://github.com/bigcommerce/bigcommerce-api-php/blob/master/src/Bigcommerce/Api/Client.php#L421)\n* [Python Example](https://github.com/bigcommerce/bigcommerce-api-python/blob/master/bigcommerce/customer_login_token.py)"}],"children":[]}}}}
