{"path":"legacy/v2-catalog-products/v2-product-sku","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"2rNxLf","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"Legacy","to":"/legacy"},{"content":"V2 Catalog Products","to":"/legacy/v2-catalog-products"},{"content":"SKU","to":"/legacy/v2-catalog-products/v2-product-sku"}],"page":{"meta":{"title":"SKU - V2 Catalog Products - Legacy","url":"/legacy/v2-catalog-products/v2-product-sku","description":"Product SKU\n\n\n\nOn This Page\n\nSKUs\n\nList Product SKUs\n\nGet a Product SKU\n\nUpdate a Product SKU\n\nDelete a Product SKU\n\nDelete Multiple Product SKUs\n\n\n\nSKU..."},"title":"SKU","parsedPath":["pages","/legacy","data","children",1,"data","children",0],"rootPagePath":"/legacy","path":"/legacy/v2-catalog-products/v2-product-sku","isSubpage":true,"route":{"path":"/v2-product-sku"},"data":{"blocks":[{"type":"text","data":"# Product SKU\r\n\r\n<div class=\"otp\" id=\"no-index\">\r\n\r\n### On This Page\r\n- [SKUs](#skus)\r\n- [List Product SKUs](#list-product-skus)\r\n- [Get a Product SKU](#get-a-product-sku)\r\n- [Update a Product SKU](#update-a-product-sku)\r\n- [Delete a Product SKU](#delete-a-product-sku)\r\n- [Delete Multiple Product SKUs](#delete-multiple-product-skus)\r\n\r\n</div> \r\n\r\n## SKUs \r\n\r\nStock Keeping Unit identifiers associated with products or product options.\r\n\r\n<div class=\"HubBlock--callout\">\r\n<div class=\"CalloutBlock--warning\">\r\n<div class=\"HubBlock-content\">\r\n\r\n<!-- theme: warning -->\r\n\r\n### Deprecated\r\n> Avoid using this API operation if possible. It will be removed in a future version.\r\n\r\nFor the most up-to-date version of this API, see [Product Variants](https://developer.bigcommerce.com/api-reference/store-management/catalog/product-variants).\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n### SKU Object – Properties \r\n\r\n| Name | Type | Description |\r\n|-|-|-|\r\n| id | int | |\r\n| product_id | int | |\r\n| sku | string | The unique SKU (stock keeping unit). |\r\n| price | decimal | This SKU's base price on the storefront. If this value is null, the product's default price (set in the Product resource's `price` field) will be used as the base price. |\r\n| adjusted_price | decimal | The SKU's price on the storefront – after the product's base price is inherited, and/or any option set or any product rules are applied. This property is READ-ONLY. |\r\n| cost_price | decimal | The product's cost price. |\r\n| upc | string | The UPC (Universal Product Code) for this product combination. |\r\n| inventory_level | int | The inventory level for the product. |\r\n| inventory_warning_level | int | The inventory warning level for the product .|\r\n| bin_picking_number | string | The BIN picking number. |\r\n| weight | decimal | This SKU's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight. |\r\n| adjusted_weight | decimal | This SKU's weight on the storefront – after the product's base weight is inherited, and/or any option set or any product rules are applied. This property is READ-ONLY. |\r\n| is_purchasing_disabled | boolean | if true, this prohibits purchasing of the SKU. | \r\n| purchasing_disabled_message | string | The message to display if purchasing is disabled on this SKU. | \r\n| image_file | string | The image that will be displayed when this SKU is selected on the storefront. When updating a SKU image, send the publicly accessible URL. Supported image formats are JPEG, PNG, and GIF. | \r\n| options | object_array | This is an object {\"product_option_id\": int, \"option_value_id\":int} |\r\n\r\n## List Product SKUs \r\n\r\nGets the collection of SKUs associated with a product.\r\n\r\n>`GET /stores/{store_hash}/v2/products/{product_id}/skus`\r\n\r\n### Notes \r\n\r\nBigCommerce has updated the SKU schema to include additional price, weight, image, and purchasable properties. We will eventually remove the ability to manage these properties via SKU rules. (Merchants are already constrained from creating SKU-only rules in the BigCommerce control panel.)\r\n\r\n### Filters \r\n\r\nFilter parameters can be added to the URL query string to select specific skus in the collection.\r\n\r\n| Parameter | Type | Example |\r\n|-|-|-|\r\n| min_id | int | /api/v2/products/{product_id}/skus?min_id={value} |\r\n| max_id | int | /api/v2/products/{product_id}/skus?max_id={value} |\r\n| sku | string | /api/v2/products/{product_id}/skus?sku={value} |\r\n| upc | string | /api/v2/products/{product_id}/skus?upc={value} |\r\n| inventory_level | string | /api/v2/products/{product_id}/skus?inventory_level={value} |\r\n| inventory_warning_level | string | /api/v2/products/{product_id}/skus?inventory_warning_level={value} |\r\n| bin_picking_number | string | /api/v2/products/{product_id}/skus?bin_picking_number={value} |\r\n| min_inventory_level | int | /api/v2/products/{product_id}/skus?min_inventory_level={value} |\r\n| max_inventory_level | int | /api/v2/products/{product_id}/skus?max_inventory_level={value} |\r\n| is_low_inventory | boolean | /api/v2/products/{product_id}/skus?is_low_inventory={value} |\r\n| product_hash | int | /api/v2/products/{product_id}/skus?product_hash={value} |\r\n\r\n#### Pagination \r\n\r\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 skus are returned by default.\r\n\r\n| Parameter | Type | Example |\r\n|-|-|-|\r\n| page | int | /api/v2/products/{product_id}/skus?page={number} |\r\n| limit | int | /api/v2/products/{product_id}/skus?limit={count} |\r\n\r\n### Response \r\n\r\nExample JSON returned in the response:\r\n\r\n```\r\n[\r\n  {\r\n    \"id\": 1,\r\n    \"product_id\": 5,\r\n    \"sku\": \"MB-1\",\r\n    \"price\": null,\r\n    \"adjusted_price\": \"1.5000\",\r\n    \"cost_price\": \"0.0000\",\r\n    \"upc\": \"\",\r\n    \"inventory_level\": 0,\r\n    \"inventory_warning_level\": 0,\r\n    \"bin_picking_number\": \"\",\r\n    \"weight\": null,\r\n    \"adjusted_weight\": \"0.00\",\r\n    \"is_purchasing_disabled\": false,\r\n    \"purchasing_disabled_message\": \"\",\r\n    \"image_file\": \"\",\r\n    \"options\": [\r\n      {\r\n        \"product_option_id\": 15,\r\n        \"option_value_id\": 17\r\n      },\r\n      {\r\n        \"product_option_id\": 16,\r\n        \"option_value_id\": 28\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"product_id\": 5,\r\n    \"sku\": \"MB-2\",\r\n    \"price\": null,\r\n    \"adjusted_price\": \"2.0000\",\r\n    \"cost_price\": \"0.0000\",\r\n    \"upc\": \"\",\r\n    \"inventory_level\": 0,\r\n    \"inventory_warning_level\": 0,\r\n    \"bin_picking_number\": \"\",\r\n    \"weight\": null,\r\n    \"adjusted_weight\": \"0.00\",\r\n    \"is_purchasing_disabled\": true,\r\n    \"purchasing_disabled_message\": \"We're sorry, this is unavailable.\",\r\n    \"image_file\": \"\",\r\n    \"options\": [\r\n      {\r\n        \"product_option_id\": 15,\r\n        \"option_value_id\": 18\r\n      },\r\n      {\r\n        \"product_option_id\": 16,\r\n        \"option_value_id\": 26\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\n\r\n## Get a Product SKU \r\n\r\nGets a single product SKU.\r\n\r\n>`GET /stores/{store_hash}/v2/products/{product_id}/skus/{id}`\r\n\r\n### Response \r\n\r\nExample JSON returned in the response:\r\n\r\n```json\r\n{\r\n  \"id\": 5,\r\n  \"product_id\": 7,\r\n  \"sku\": \"MBA-1atest\",\r\n    \"price\": null,\r\n    \"adjusted_price\": \"1.5000\",\r\n  \"cost_price\": \"0.0000\",\r\n  \"upc\": \"\",\r\n  \"inventory_level\": 0,\r\n  \"inventory_warning_level\": 0,\r\n  \"bin_picking_number\": \"\",\r\n    \"weight\": null,\r\n    \"adjusted_weight\": \"0.00\",\r\n    \"is_purchasing_disabled\": false,\r\n    \"purchasing_disabled_message\": \"\",\r\n    \"image_file\": \"https://thinglust.com/eyecandy.png\",\r\n  \"options\": [\r\n    {\r\n      \"product_option_id\": 20,\r\n      \"option_value_id\": 51\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### Get a Count of Product SKUs \r\n\r\nGets a count of the number of product SKUs in the store.\r\n\r\n*   OAuth\r\n>`GET /stores/{store_hash}/v2/products/skus/count`\r\n*   Basic Auth\r\n>`GET /api/v2/products/skus/count`\r\n\r\n### Response \r\n\r\nExample JSON returned in the response:\r\n\r\n```json\r\n{\r\n  \"count\": 1235\r\n}\r\n```\r\n\r\n### Create a Product SKU \r\n\r\nCreates a new product SKU.\r\n\r\n*   OAuth\r\n>`POST /stores/{store_hash}/v2/products/{product_id}/skus`\r\n\r\n### Read-only Properties \r\n\r\nThe following properties of the sku are read-only. If one or more of these properties are included in the request, it will be rejected.\r\n\r\n*   id\r\n*   product_id\r\n*   adjusted_price\r\n*   adjusted_weight\r\n\r\n### Requirements \r\n\r\nThe following properties of the sku are required. The request won’t be fulfilled unless these properties are valid.\r\n\r\n*   sku\r\n*   options\r\n\r\n### Notes \r\n\r\nTo maximize system performance, BigCommerce caps the number of SKUs associated with a product at 500. If you attempt to add a SKU to a product that has 500 SKUs, BigCommerce will return a 403 error.\r\n\r\nBigCommerce has updated the SKU schema to include additional price, weight, image, and purchasable properties. We will eventually remove the ability to manage these properties via SKU rules. (Merchants are already constrained from creating SKU-only rules in the BigCommerce control panel.)\r\n\r\n### Response \r\n\r\nExample JSON returned in the response:\r\n\r\n```json\r\n{\r\n  \"id\": 5,\r\n  \"product_id\": 7,\r\n  \"sku\": \"MBA-1atest\",\r\n    \"price\": null,\r\n    \"adjusted_price\": \"1.5000\",\r\n  \"cost_price\": \"0.0000\",\r\n  \"upc\": \"\",\r\n  \"inventory_level\": 0,\r\n  \"inventory_warning_level\": 0,\r\n  \"bin_picking_number\": \"\",\r\n    \"weight\": null,\r\n    \"adjusted_weight\": \"0.00\",\r\n    \"is_purchasing_disabled\": false,\r\n    \"purchasing_disabled_message\": \"\",\r\n    \"image_file\": \"\",\r\n  \"options\": [\r\n    {\r\n      \"product_option_id\": 20,\r\n      \"option_value_id\": 51\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n## Update a Product SKU \r\n\r\nUpdates an existing product SKU.\r\n\r\n>`PUT /stores/{store_hash}/v2/products/{product_id}/skus/{id}`\r\n\r\n### Read-only Properties \r\n\r\nThe following properties of the sku are read-only. If one or more of these properties are included in the request, it will be rejected.\r\n\r\n*   id\r\n*   product_id\r\n*   adjusted_price\r\n*   adjusted_weight\r\n\r\n### Requirements \r\n\r\nThere are no required properties for updating a product SKU.\r\n\r\n### Response \r\n\r\nExample JSON returned in the response:\r\n\r\n```json\r\n{\r\n  \"id\": 5,\r\n  \"product_id\": 7,\r\n  \"sku\": \"MBA-1atest\",\r\n    \"price\": \"4.9900\",\r\n    \"adjusted_price\": \"3.9900\",\r\n  \"cost_price\": \"2.9900\",\r\n  \"upc\": \"\",\r\n  \"inventory_level\": 0,\r\n  \"inventory_warning_level\": 0,\r\n  \"bin_picking_number\": \"\",\r\n    \"weight\": null,\r\n    \"adjusted_weight\": \"0.00\",\r\n    \"is_purchasing_disabled\": true,\r\n    \"purchasing_disabled_message\": \"We're sorry, this is unavailable.\",\r\n    \"image_file\": \"\",\r\n  \"options\": [\r\n    {\r\n      \"product_option_id\": 20,\r\n      \"option_value_id\": 51\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n## Delete a Product SKU \r\n\r\nDeletes a product SKU.\r\n\r\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/skus/{id}`\r\n\r\n## Delete Multiple Product SKUs \r\n\r\nDeletes multiple product SKUs.\r\n\r\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/skus`\r\n\r\n### Filters \r\n\r\nFilter parameters can be added to the URL query string to select specific SKUs in the collection.\r\n\r\n| Parameter | Type | Example |\r\n|-|-|-|\r\n| min_id | int | /api/v2/products/{product_id}/skus?min_id={value} |\r\n| max_id | int | /api/v2/products/{product_id}/skus?max_id={value} |\r\n| sku | string | /api/v2/products/{product_id}/skus?sku={value} |\r\n| upc | string | /api/v2/products/{product_id}/skus?upc={value} |\r\n| inventory_level | string | /api/v2/products/{product_id}/skus?inventory_level={value} |\r\n| inventory_warning_level | string | /api/v2/products/{product_id}/skus?inventory_warning_level={value} |\r\n| bin_picking_number | string | /api/v2/products/{product_id}/skus?bin_picking_number={value} |\r\n| min_inventory_level | int | /api/v2/products/{product_id}/skus?min_inventory_level={value} |\r\n| max_inventory_level | int | /api/v2/products/{product_id}/skus?max_inventory_level={value} |\r\n| is_low_inventory | boolean | /api/v2/products/{product_id}/skus?is_low_inventory={value} |\r\n| product_hash | int | /api/v2/products/{product_id}/skus?product_hash={value} |\r\n\r\n### Pagination \r\n\r\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 skus are returned by default.\r\n\r\n| Parameter | Type | Example |\r\n|-|-|-|\r\n| page | int | /api/v2/products/{product_id}/skus?page={number} |\r\n| limit | int | /api/v2/products/{product_id}/skus?limit={count} |\r\n"}],"children":[]}}}}
