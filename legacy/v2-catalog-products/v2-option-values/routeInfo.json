{"path":"legacy/v2-catalog-products/v2-option-values","templateID":0,"sharedPropsHashes":{"nav":"Z2k7O5R","sidebarTree":"2rNxLf","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"Legacy","to":"/legacy"},{"content":"V2 Catalog Products","to":"/legacy/v2-catalog-products"},{"content":"Option Values","to":"/legacy/v2-catalog-products/v2-option-values"}],"page":{"meta":{"title":"Option Values - V2 Catalog Products - Legacy","url":"/legacy/v2-catalog-products/v2-option-values","description":"Option Values\n\n\n\nOn This Page\n\nOption Values\n\nList Option Values\n\nGet an Option Value\n\nCreate an Option Value\n\nUpdate an Option Value\n\nDelete an Option ..."},"title":"Option Values","parsedPath":["pages","/legacy","data","children",1,"data","children",6],"rootPagePath":"/legacy","path":"/legacy/v2-catalog-products/v2-option-values","isSubpage":true,"route":{"path":"/v2-option-values"},"data":{"blocks":[{"type":"text","data":"# Option Values\r\n\r\n<div class=\"otp\" id=\"no-index\">\r\n\r\n### On This Page\r\n- [Option Values](#option-values)\r\n- [List Option Values](#list-option-values)\r\n- [Get an Option Value](#get-an-option-value)\r\n- [Create an Option Value](#create-an-option-value)\r\n- [Update an Option Value](#update-an-option-value)\r\n- [Delete an Option Value](#delete-an-option-value)\r\n- [Delete Multiple Option Values](#delete-multiple-option-values)\r\n\r\n</div> \r\n\r\n## Option Values \r\n\r\nValues that can be selected for an option.\r\n\r\n<div class=\"HubBlock--callout\">\r\n<div class=\"CalloutBlock--warning\">\r\n<div class=\"HubBlock-content\">\r\n\r\n<!-- theme: warning -->\r\n\r\n### Deprecated\r\n> Avoid using this API operation if possible. It will be removed in a future version.\r\n\r\nFor the most up-to-date version of this API, see [Product Option Values](https://developer.bigcommerce.com/api-reference/store-management/catalog/product-option-values).\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n### Option Value Object – Properties \r\n\r\n| Name | Type | Description |\r\n|-|-|-|\r\n| id | int | A unique, read-only value that identifies this option value. |\r\n| option_id | int | A read-only value identifying the option to which this option value is assigned. |\r\n| label | string | The name of the label. Cannot be the same as the label of another value already assigned to the option. |\r\n| sort_order | int |\r\n| value | text | Acceptable values generally depend on the option type, as defined in the option:<br><br> `RB`: string to be displayed to the customer.<br> `RT`: string to be displayed to the customer.<br> `S`: string to be displayed to the customer.<br> `P`: product ID;<br> `PI`: product ID.<br> `CS`: one of the following color values – a hexadecimal color code to create a color option (e.g., `#0f0000`);<br> a CSS 2.1 color name (e.g., `blue`);<br> up to three hexadecimal color codes and/or color names, separated by pipe symbols (e.g., <code>#FF0000&#124;lime&#124;#0000FF</code>);<br>  a URI to an image to create a texture (e.g., `http://store.com/images/myimg.png`);<br> or the name of an image file in the store's WebDAV `import` folder  (e.g., `myimg.png`). |\r\n| is_default | boolean | Whether or not this value is selected by default. For each option, only one option value can be selected by default. |\r\n\r\n## List Option Values \r\n\r\nGets the values belonging to an option. (Default sorting is by option-value id, from lowest to highest.)\r\n\r\n>`GET /stores/{store_hash}/v2/options/{option_id}/values`\r\n\r\n### Pagination \r\n\r\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 option_values are returned by default.\r\n\r\n| Parameter | Type | Example |\r\n|-|-|-|\r\n| Page | int | /api/v2/options/{option_id}/values?page={number} |\r\n| Limit | int | /api/v2/options/{option_id}/values?limit={count} |\r\n\r\n### Response \r\n\r\nExample JSON returned in the response:\r\n\r\n```\r\n[\r\n  {\r\n    \"id\": 1,\r\n    \"option_id\": 3,\r\n    \"label\": \"Silver\",\r\n    \"sort_order\": 2,\r\n    \"value\": \"#cccccc\",\r\n    \"is_default\": true\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"option_id\": 3,\r\n    \"label\": \"Black\",\r\n    \"sort_order\": 1,\r\n    \"value\": \"#000000\",\r\n    \"is_default\": false\r\n  }\r\n]\r\n```\r\n\r\n## Get an Option Value \r\n\r\nGets an option value.\r\n\r\n>`GET /stores/{store_hash}/v2/options/{option_id}/values/{id}`\r\n\r\n### Response \r\n\r\nExample JSON returned in the response:\r\n\r\n```json\r\n{\r\n  \"id\": 9,\r\n  \"option_id\": 3,\r\n  \"label\": \"Purple\",\r\n  \"sort_order\": 3,\r\n  \"value\": \"#700170\",\r\n  \"is_default\": false\r\n}\r\n```\r\n\r\n## Create an Option Value \r\n\r\nCreates a new option value.\r\n\r\n>`POST /stores/{store_hash}/v2/options/{option_id}/values`\r\n\r\n### Read-only Properties \r\n\r\nThe following properties of the option value are read-only. If one or more of these properties are included in the request, it will be rejected.\r\n\r\n*   id\r\n*   option_id\r\n\r\n### Requirements \r\n\r\nThe following properties of the option value are required. The request won’t be fulfilled unless these properties are valid.\r\n\r\n*   label\r\n*   value\r\n\r\n### Notes \r\n\r\nTo maximize system performance, BigCommerce caps the total number of values per option at 250. IF the option has 250 values and you try to create another one, BigCommerce will return a 403 error.\r\n\r\nWhen you POST an `is_default`property of `true`, all other option values on the parent option will have their `is_default` property set to `false`.\r\n\r\n### Request \r\n\r\nExample request object:\r\n\r\n```json\r\n{\r\n  \"label\": \"white\",\r\n  \"sort_order\": 0,\r\n  \"value\": \"#FFFFFF\",\r\n  \"is_default\": true\r\n}\r\n```\r\n\r\n### Response \r\n\r\nExample JSON returned in the response:\r\n\r\n```json\r\n{\r\n  \"id\": 68,\r\n  \"option_id\": 3,\r\n  \"label\": \"white\",\r\n  \"sort_order\": 0,\r\n  \"value\": \"#FFFFFF\",\r\n  \"is_default\": true\r\n}\r\n```\r\n\r\n## Update an Option Value \r\n\r\nUpdates an existing option value.\r\n\r\n>`PUT /stores/{store_hash}/v2/options/{option_id}/values/{id}`\r\n\r\n###  Read-only Properties\r\n\r\nThe following properties of the option value are read-only. If one or more of these properties are included in the request, it will be rejected.\r\n\r\n*   id\r\n*   option_id\r\n\r\n### Requirements \r\n\r\nThe following properties of the option value are required. The request won’t be fulfilled unless these properties are valid.\r\n\r\n###  Notes\r\n\r\nWhen you PUT an `is_default` property of `true`, all other option values on the parent option will have their `is_default` property set to `false`.\r\n\r\n### Request \r\n\r\nExample request object:\r\n\r\n```json\r\n{\r\n  \"label\": \"whitish\",\r\n  \"sort_order\": 1,\r\n  \"value\": \"#FFFFEF\",\r\n  \"is_default\": true\r\n}\r\n```\r\n\r\n### Response \r\n\r\nExample JSON returned in the response:\r\n\r\n```json\r\n{\r\n  \"id\": 68,\r\n  \"option_id\": 3,\r\n  \"label\": \"whitish\",\r\n  \"sort_order\": 1,\r\n  \"value\": \"#FFFFEF\",\r\n  \"is_default\": true\r\n}\r\n```\r\n\r\n## Delete an Option Value \r\n\r\nDeletes an option value.\r\n\r\n>`DELETE /stores/{store_hash}/v2/options/{option_id}/values/{id}`\r\n\r\n## Delete Multiple Option Values \r\n\r\nDeletes multiple values belonging to an option.\r\n\r\n>`DELETE /stores/{store_hash}/v2/options/{option_id}/values`\r\n\r\n### Pagination \r\n\r\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 option_values are returned by default.\r\n\r\n| Parameter | Type | Example |\r\n|-|-|-|\r\n| Page | int | /api/v2/options/{option_id}/values?page={number} |\r\n| Limit | int | /api/v2/options/{option_id}/values?limit={count} |\r\n"}],"children":[]}}}}
